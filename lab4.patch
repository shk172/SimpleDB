diff -ruN lab3/javadoc/allclasses-frame.html lab4/javadoc/allclasses-frame.html
--- lab3/javadoc/allclasses-frame.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/allclasses-frame.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,115 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>All Classes</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
-<script type="text/javascript" src="script.js"></script>
-</head>
-<body>
-<h1 class="bar">All&nbsp;Classes</h1>
-<div class="indexContainer">
-<ul>
-<li><a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb" target="classFrame">AbstractDbFileIterator</a></li>
-<li><a href="simpledb/Aggregate.html" title="class in simpledb" target="classFrame">Aggregate</a></li>
-<li><a href="simpledb/Aggregator.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">Aggregator</span></a></li>
-<li><a href="simpledb/Aggregator.Op.html" title="enum in simpledb" target="classFrame">Aggregator.Op</a></li>
-<li><a href="simpledb/BTreeChecker.html" title="class in simpledb" target="classFrame">BTreeChecker</a></li>
-<li><a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb" target="classFrame">BTreeChecker.SubtreeSummary</a></li>
-<li><a href="simpledb/BTreeEntry.html" title="class in simpledb" target="classFrame">BTreeEntry</a></li>
-<li><a href="simpledb/BTreeFile.html" title="class in simpledb" target="classFrame">BTreeFile</a></li>
-<li><a href="simpledb/BTreeFileEncoder.html" title="class in simpledb" target="classFrame">BTreeFileEncoder</a></li>
-<li><a href="simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb" target="classFrame">BTreeFileEncoder.EntryComparator</a></li>
-<li><a href="simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb" target="classFrame">BTreeFileEncoder.ReverseEntryComparator</a></li>
-<li><a href="simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb" target="classFrame">BTreeFileEncoder.TupleComparator</a></li>
-<li><a href="simpledb/BTreeFileIterator.html" title="class in simpledb" target="classFrame">BTreeFileIterator</a></li>
-<li><a href="simpledb/BTreeHeaderPage.html" title="class in simpledb" target="classFrame">BTreeHeaderPage</a></li>
-<li><a href="simpledb/BTreeInternalPage.html" title="class in simpledb" target="classFrame">BTreeInternalPage</a></li>
-<li><a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb" target="classFrame">BTreeInternalPageIterator</a></li>
-<li><a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb" target="classFrame">BTreeInternalPageReverseIterator</a></li>
-<li><a href="simpledb/BTreeLeafPage.html" title="class in simpledb" target="classFrame">BTreeLeafPage</a></li>
-<li><a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb" target="classFrame">BTreeLeafPageIterator</a></li>
-<li><a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb" target="classFrame">BTreeLeafPageReverseIterator</a></li>
-<li><a href="simpledb/BTreePage.html" title="class in simpledb" target="classFrame">BTreePage</a></li>
-<li><a href="simpledb/BTreePageId.html" title="class in simpledb" target="classFrame">BTreePageId</a></li>
-<li><a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb" target="classFrame">BTreeRootPtrPage</a></li>
-<li><a href="simpledb/BTreeScan.html" title="class in simpledb" target="classFrame">BTreeScan</a></li>
-<li><a href="simpledb/BTreeSearchIterator.html" title="class in simpledb" target="classFrame">BTreeSearchIterator</a></li>
-<li><a href="simpledb/BTreeUtility.html" title="class in simpledb" target="classFrame">BTreeUtility</a></li>
-<li><a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb" target="classFrame">BTreeUtility.BTreeDeleter</a></li>
-<li><a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb" target="classFrame">BTreeUtility.BTreeInserter</a></li>
-<li><a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb" target="classFrame">BTreeUtility.BTreeReader</a></li>
-<li><a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb" target="classFrame">BTreeUtility.BTreeWriter</a></li>
-<li><a href="simpledb/BufferPool.html" title="class in simpledb" target="classFrame">BufferPool</a></li>
-<li><a href="simpledb/Catalog.html" title="class in simpledb" target="classFrame">Catalog</a></li>
-<li><a href="simpledb/CostCard.html" title="class in simpledb" target="classFrame">CostCard</a></li>
-<li><a href="simpledb/Database.html" title="class in simpledb" target="classFrame">Database</a></li>
-<li><a href="simpledb/DbException.html" title="class in simpledb" target="classFrame">DbException</a></li>
-<li><a href="simpledb/DbFile.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">DbFile</span></a></li>
-<li><a href="simpledb/DbFileIterator.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">DbFileIterator</span></a></li>
-<li><a href="simpledb/DbIterator.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">DbIterator</span></a></li>
-<li><a href="simpledb/DeadlockException.html" title="class in simpledb" target="classFrame">DeadlockException</a></li>
-<li><a href="simpledb/Debug.html" title="class in simpledb" target="classFrame">Debug</a></li>
-<li><a href="simpledb/Delete.html" title="class in simpledb" target="classFrame">Delete</a></li>
-<li><a href="simpledb/Field.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">Field</span></a></li>
-<li><a href="simpledb/Filter.html" title="class in simpledb" target="classFrame">Filter</a></li>
-<li><a href="simpledb/HashEquiJoin.html" title="class in simpledb" target="classFrame">HashEquiJoin</a></li>
-<li><a href="simpledb/HeapFile.html" title="class in simpledb" target="classFrame">HeapFile</a></li>
-<li><a href="simpledb/HeapFileEncoder.html" title="class in simpledb" target="classFrame">HeapFileEncoder</a></li>
-<li><a href="simpledb/HeapPage.html" title="class in simpledb" target="classFrame">HeapPage</a></li>
-<li><a href="simpledb/HeapPageId.html" title="class in simpledb" target="classFrame">HeapPageId</a></li>
-<li><a href="simpledb/IndexDbIterator.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">IndexDbIterator</span></a></li>
-<li><a href="simpledb/IndexPredicate.html" title="class in simpledb" target="classFrame">IndexPredicate</a></li>
-<li><a href="simpledb/Insert.html" title="class in simpledb" target="classFrame">Insert</a></li>
-<li><a href="simpledb/IntegerAggregator.html" title="class in simpledb" target="classFrame">IntegerAggregator</a></li>
-<li><a href="simpledb/IntField.html" title="class in simpledb" target="classFrame">IntField</a></li>
-<li><a href="simpledb/IntHistogram.html" title="class in simpledb" target="classFrame">IntHistogram</a></li>
-<li><a href="simpledb/Join.html" title="class in simpledb" target="classFrame">Join</a></li>
-<li><a href="simpledb/JoinOptimizer.html" title="class in simpledb" target="classFrame">JoinOptimizer</a></li>
-<li><a href="simpledb/JoinPredicate.html" title="class in simpledb" target="classFrame">JoinPredicate</a></li>
-<li><a href="simpledb/LogFile.html" title="class in simpledb" target="classFrame">LogFile</a></li>
-<li><a href="simpledb/LogicalFilterNode.html" title="class in simpledb" target="classFrame">LogicalFilterNode</a></li>
-<li><a href="simpledb/LogicalJoinNode.html" title="class in simpledb" target="classFrame">LogicalJoinNode</a></li>
-<li><a href="simpledb/LogicalPlan.html" title="class in simpledb" target="classFrame">LogicalPlan</a></li>
-<li><a href="simpledb/LogicalScanNode.html" title="class in simpledb" target="classFrame">LogicalScanNode</a></li>
-<li><a href="simpledb/LogicalSelectListNode.html" title="class in simpledb" target="classFrame">LogicalSelectListNode</a></li>
-<li><a href="simpledb/LogicalSubplanJoinNode.html" title="class in simpledb" target="classFrame">LogicalSubplanJoinNode</a></li>
-<li><a href="simpledb/Operator.html" title="class in simpledb" target="classFrame">Operator</a></li>
-<li><a href="simpledb/OperatorCardinality.html" title="class in simpledb" target="classFrame">OperatorCardinality</a></li>
-<li><a href="simpledb/OrderBy.html" title="class in simpledb" target="classFrame">OrderBy</a></li>
-<li><a href="simpledb/Page.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">Page</span></a></li>
-<li><a href="simpledb/PageId.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">PageId</span></a></li>
-<li><a href="simpledb/Parser.html" title="class in simpledb" target="classFrame">Parser</a></li>
-<li><a href="simpledb/ParsingException.html" title="class in simpledb" target="classFrame">ParsingException</a></li>
-<li><a href="simpledb/Permissions.html" title="class in simpledb" target="classFrame">Permissions</a></li>
-<li><a href="simpledb/PlanCache.html" title="class in simpledb" target="classFrame">PlanCache</a></li>
-<li><a href="simpledb/Predicate.html" title="class in simpledb" target="classFrame">Predicate</a></li>
-<li><a href="simpledb/Predicate.Op.html" title="enum in simpledb" target="classFrame">Predicate.Op</a></li>
-<li><a href="simpledb/Project.html" title="class in simpledb" target="classFrame">Project</a></li>
-<li><a href="simpledb/Query.html" title="class in simpledb" target="classFrame">Query</a></li>
-<li><a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb" target="classFrame">QueryPlanVisualizer</a></li>
-<li><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb" target="classFrame">QueryPlanVisualizer.SubTreeDescriptor</a></li>
-<li><a href="simpledb/RecordId.html" title="class in simpledb" target="classFrame">RecordId</a></li>
-<li><a href="simpledb/SeqScan.html" title="class in simpledb" target="classFrame">SeqScan</a></li>
-<li><a href="simpledb/SimpleDb.html" title="class in simpledb" target="classFrame">SimpleDb</a></li>
-<li><a href="simpledb/StringAggregator.html" title="class in simpledb" target="classFrame">StringAggregator</a></li>
-<li><a href="simpledb/StringField.html" title="class in simpledb" target="classFrame">StringField</a></li>
-<li><a href="simpledb/StringHistogram.html" title="class in simpledb" target="classFrame">StringHistogram</a></li>
-<li><a href="simpledb/TableStats.html" title="class in simpledb" target="classFrame">TableStats</a></li>
-<li><a href="simpledb/Transaction.html" title="class in simpledb" target="classFrame">Transaction</a></li>
-<li><a href="simpledb/TransactionAbortedException.html" title="class in simpledb" target="classFrame">TransactionAbortedException</a></li>
-<li><a href="simpledb/TransactionId.html" title="class in simpledb" target="classFrame">TransactionId</a></li>
-<li><a href="simpledb/Tuple.html" title="class in simpledb" target="classFrame">Tuple</a></li>
-<li><a href="simpledb/TupleArrayIterator.html" title="class in simpledb" target="classFrame">TupleArrayIterator</a></li>
-<li><a href="simpledb/TupleComparator.html" title="class in simpledb" target="classFrame">TupleComparator</a></li>
-<li><a href="simpledb/TupleDesc.html" title="class in simpledb" target="classFrame">TupleDesc</a></li>
-<li><a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb" target="classFrame">TupleDesc.TDItem</a></li>
-<li><a href="simpledb/TupleIterator.html" title="class in simpledb" target="classFrame">TupleIterator</a></li>
-<li><a href="simpledb/Type.html" title="enum in simpledb" target="classFrame">Type</a></li>
-<li><a href="simpledb/Utility.html" title="class in simpledb" target="classFrame">Utility</a></li>
-</ul>
-</div>
-</body>
-</html>
diff -ruN lab3/javadoc/allclasses-noframe.html lab4/javadoc/allclasses-noframe.html
--- lab3/javadoc/allclasses-noframe.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/allclasses-noframe.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,115 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>All Classes</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
-<script type="text/javascript" src="script.js"></script>
-</head>
-<body>
-<h1 class="bar">All&nbsp;Classes</h1>
-<div class="indexContainer">
-<ul>
-<li><a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></li>
-<li><a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></li>
-<li><a href="simpledb/Aggregator.html" title="interface in simpledb"><span class="interfaceName">Aggregator</span></a></li>
-<li><a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></li>
-<li><a href="simpledb/BTreeChecker.html" title="class in simpledb">BTreeChecker</a></li>
-<li><a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></li>
-<li><a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></li>
-<li><a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></li>
-<li><a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></li>
-<li><a href="simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb">BTreeFileEncoder.EntryComparator</a></li>
-<li><a href="simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb">BTreeFileEncoder.ReverseEntryComparator</a></li>
-<li><a href="simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb">BTreeFileEncoder.TupleComparator</a></li>
-<li><a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></li>
-<li><a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></li>
-<li><a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></li>
-<li><a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></li>
-<li><a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></li>
-<li><a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></li>
-<li><a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb">BTreeLeafPageIterator</a></li>
-<li><a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb">BTreeLeafPageReverseIterator</a></li>
-<li><a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></li>
-<li><a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></li>
-<li><a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></li>
-<li><a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></li>
-<li><a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></li>
-<li><a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></li>
-<li><a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></li>
-<li><a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></li>
-<li><a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></li>
-<li><a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></li>
-<li><a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></li>
-<li><a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></li>
-<li><a href="simpledb/CostCard.html" title="class in simpledb">CostCard</a></li>
-<li><a href="simpledb/Database.html" title="class in simpledb">Database</a></li>
-<li><a href="simpledb/DbException.html" title="class in simpledb">DbException</a></li>
-<li><a href="simpledb/DbFile.html" title="interface in simpledb"><span class="interfaceName">DbFile</span></a></li>
-<li><a href="simpledb/DbFileIterator.html" title="interface in simpledb"><span class="interfaceName">DbFileIterator</span></a></li>
-<li><a href="simpledb/DbIterator.html" title="interface in simpledb"><span class="interfaceName">DbIterator</span></a></li>
-<li><a href="simpledb/DeadlockException.html" title="class in simpledb">DeadlockException</a></li>
-<li><a href="simpledb/Debug.html" title="class in simpledb">Debug</a></li>
-<li><a href="simpledb/Delete.html" title="class in simpledb">Delete</a></li>
-<li><a href="simpledb/Field.html" title="interface in simpledb"><span class="interfaceName">Field</span></a></li>
-<li><a href="simpledb/Filter.html" title="class in simpledb">Filter</a></li>
-<li><a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></li>
-<li><a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></li>
-<li><a href="simpledb/HeapFileEncoder.html" title="class in simpledb">HeapFileEncoder</a></li>
-<li><a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></li>
-<li><a href="simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></li>
-<li><a href="simpledb/IndexDbIterator.html" title="interface in simpledb"><span class="interfaceName">IndexDbIterator</span></a></li>
-<li><a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></li>
-<li><a href="simpledb/Insert.html" title="class in simpledb">Insert</a></li>
-<li><a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></li>
-<li><a href="simpledb/IntField.html" title="class in simpledb">IntField</a></li>
-<li><a href="simpledb/IntHistogram.html" title="class in simpledb">IntHistogram</a></li>
-<li><a href="simpledb/Join.html" title="class in simpledb">Join</a></li>
-<li><a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></li>
-<li><a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></li>
-<li><a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></li>
-<li><a href="simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a></li>
-<li><a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></li>
-<li><a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></li>
-<li><a href="simpledb/LogicalScanNode.html" title="class in simpledb">LogicalScanNode</a></li>
-<li><a href="simpledb/LogicalSelectListNode.html" title="class in simpledb">LogicalSelectListNode</a></li>
-<li><a href="simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a></li>
-<li><a href="simpledb/Operator.html" title="class in simpledb">Operator</a></li>
-<li><a href="simpledb/OperatorCardinality.html" title="class in simpledb">OperatorCardinality</a></li>
-<li><a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></li>
-<li><a href="simpledb/Page.html" title="interface in simpledb"><span class="interfaceName">Page</span></a></li>
-<li><a href="simpledb/PageId.html" title="interface in simpledb"><span class="interfaceName">PageId</span></a></li>
-<li><a href="simpledb/Parser.html" title="class in simpledb">Parser</a></li>
-<li><a href="simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></li>
-<li><a href="simpledb/Permissions.html" title="class in simpledb">Permissions</a></li>
-<li><a href="simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></li>
-<li><a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></li>
-<li><a href="simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></li>
-<li><a href="simpledb/Project.html" title="class in simpledb">Project</a></li>
-<li><a href="simpledb/Query.html" title="class in simpledb">Query</a></li>
-<li><a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></li>
-<li><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></li>
-<li><a href="simpledb/RecordId.html" title="class in simpledb">RecordId</a></li>
-<li><a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></li>
-<li><a href="simpledb/SimpleDb.html" title="class in simpledb">SimpleDb</a></li>
-<li><a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></li>
-<li><a href="simpledb/StringField.html" title="class in simpledb">StringField</a></li>
-<li><a href="simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></li>
-<li><a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></li>
-<li><a href="simpledb/Transaction.html" title="class in simpledb">Transaction</a></li>
-<li><a href="simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></li>
-<li><a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></li>
-<li><a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></li>
-<li><a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></li>
-<li><a href="simpledb/TupleComparator.html" title="class in simpledb">TupleComparator</a></li>
-<li><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></li>
-<li><a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a></li>
-<li><a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></li>
-<li><a href="simpledb/Type.html" title="enum in simpledb">Type</a></li>
-<li><a href="simpledb/Utility.html" title="class in simpledb">Utility</a></li>
-</ul>
-</div>
-</body>
-</html>
diff -ruN lab3/javadoc/constant-values.html lab4/javadoc/constant-values.html
--- lab3/javadoc/constant-values.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/constant-values.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,1101 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Constant Field Values</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
-<script type="text/javascript" src="script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Constant Field Values";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li><a href="index-all.html">Index</a></li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?constant-values.html" target="_top">Frames</a></li>
-<li><a href="constant-values.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<div class="header">
-<h1 title="Constant Field Values" class="title">Constant Field Values</h1>
-<h2 title="Contents">Contents</h2>
-<ul>
-<li><a href="#simpledb">simpledb.*</a></li>
-</ul>
-</div>
-<div class="constantValuesContainer"><a name="simpledb">
-<!--   -->
-</a>
-<h2 title="simpledb">simpledb.*</h2>
-<ul class="blockList">
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Aggregate.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Aggregate.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Aggregator.NO_GROUPING">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/Aggregator.html#NO_GROUPING">NO_GROUPING</a></code></td>
-<td class="colLast"><code>-1</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.BTreeEntry.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/BTreeEntry.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.BTreePageId.HEADER">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/BTreePageId.html#HEADER">HEADER</a></code></td>
-<td class="colLast"><code>3</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.BTreePageId.INTERNAL">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/BTreePageId.html#INTERNAL">INTERNAL</a></code></td>
-<td class="colLast"><code>1</code></td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.BTreePageId.LEAF">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/BTreePageId.html#LEAF">LEAF</a></code></td>
-<td class="colLast"><code>2</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.BTreePageId.ROOT_PTR">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/BTreePageId.html#ROOT_PTR">ROOT_PTR</a></code></td>
-<td class="colLast"><code>0</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.BTreeRootPtrPage.PAGE_SIZE">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/BTreeRootPtrPage.html#PAGE_SIZE">PAGE_SIZE</a></code></td>
-<td class="colLast"><code>9</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.BTreeScan.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/BTreeScan.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.BTreeUtility.MAX_RAND_VALUE">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/BTreeUtility.html#MAX_RAND_VALUE">MAX_RAND_VALUE</a></code></td>
-<td class="colLast"><code>65536</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.BufferPool.DEFAULT_PAGES">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/BufferPool.html#DEFAULT_PAGES">DEFAULT_PAGES</a></code></td>
-<td class="colLast"><code>50</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.BufferPool.PAGE_SIZE">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/BufferPool.html#PAGE_SIZE">PAGE_SIZE</a></code></td>
-<td class="colLast"><code>4096</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Database.LOGFILENAME">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/Database.html#LOGFILENAME">LOGFILENAME</a></code></td>
-<td class="colLast"><code>"log"</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/DbException.html" title="class in simpledb">DbException</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.DbException.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/DbException.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/DeadlockException.html" title="class in simpledb">DeadlockException</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.DeadlockException.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/DeadlockException.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Debug.html" title="class in simpledb">Debug</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Debug.DEFAULT_LEVEL">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/Debug.html#DEFAULT_LEVEL">DEFAULT_LEVEL</a></code></td>
-<td class="colLast"><code>0</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Delete.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Delete.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Filter.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Filter.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.HashEquiJoin.MAP_SIZE">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/HashEquiJoin.html#MAP_SIZE">MAP_SIZE</a></code></td>
-<td class="colLast"><code>20000</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.HashEquiJoin.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/HashEquiJoin.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.IndexPredicate.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/IndexPredicate.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Insert.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Insert.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.IntegerAggregator.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/IntegerAggregator.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.IntField.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/IntField.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Join.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Join.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.JoinPredicate.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/JoinPredicate.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.LogFile.ABORT_RECORD">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/LogFile.html#ABORT_RECORD">ABORT_RECORD</a></code></td>
-<td class="colLast"><code>1</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.LogFile.BEGIN_RECORD">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/LogFile.html#BEGIN_RECORD">BEGIN_RECORD</a></code></td>
-<td class="colLast"><code>4</code></td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.LogFile.CHECKPOINT_RECORD">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/LogFile.html#CHECKPOINT_RECORD">CHECKPOINT_RECORD</a></code></td>
-<td class="colLast"><code>5</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.LogFile.COMMIT_RECORD">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/LogFile.html#COMMIT_RECORD">COMMIT_RECORD</a></code></td>
-<td class="colLast"><code>2</code></td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.LogFile.INT_SIZE">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/LogFile.html#INT_SIZE">INT_SIZE</a></code></td>
-<td class="colLast"><code>4</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.LogFile.LONG_SIZE">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/LogFile.html#LONG_SIZE">LONG_SIZE</a></code></td>
-<td class="colLast"><code>8</code></td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.LogFile.NO_CHECKPOINT_ID">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/LogFile.html#NO_CHECKPOINT_ID">NO_CHECKPOINT_ID</a></code></td>
-<td class="colLast"><code>-1L</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.LogFile.UPDATE_RECORD">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/LogFile.html#UPDATE_RECORD">UPDATE_RECORD</a></code></td>
-<td class="colLast"><code>3</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Operator.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Operator.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.OrderBy.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/OrderBy.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Parser.SLEEP_TIME">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/Parser.html#SLEEP_TIME">SLEEP_TIME</a></code></td>
-<td class="colLast"><code>5000</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.Parser.usage">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/Parser.html#usage">usage</a></code></td>
-<td class="colLast"><code>"Usage: parser catalogFile [-explain] [-f queryFile]"</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.ParsingException.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/ParsingException.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Predicate.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Predicate.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Project.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Project.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Query.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Query.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.QueryPlanVisualizer.GROUPBY">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/QueryPlanVisualizer.html#GROUPBY">GROUPBY</a></code></td>
-<td class="colLast"><code>"g"</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.QueryPlanVisualizer.HASH_JOIN">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/QueryPlanVisualizer.html#HASH_JOIN">HASH_JOIN</a></code></td>
-<td class="colLast"><code>"\u2a1d(hash)"</code></td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.QueryPlanVisualizer.JOIN">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/QueryPlanVisualizer.html#JOIN">JOIN</a></code></td>
-<td class="colLast"><code>"\u2a1d"</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.QueryPlanVisualizer.ORDERBY">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/QueryPlanVisualizer.html#ORDERBY">ORDERBY</a></code></td>
-<td class="colLast"><code>"o"</code></td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.QueryPlanVisualizer.PROJECT">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/QueryPlanVisualizer.html#PROJECT">PROJECT</a></code></td>
-<td class="colLast"><code>"\u03c0"</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.QueryPlanVisualizer.RENAME">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/QueryPlanVisualizer.html#RENAME">RENAME</a></code></td>
-<td class="colLast"><code>"\u03c1"</code></td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.QueryPlanVisualizer.SCAN">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/QueryPlanVisualizer.html#SCAN">SCAN</a></code></td>
-<td class="colLast"><code>"scan"</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.QueryPlanVisualizer.SELECT">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/QueryPlanVisualizer.html#SELECT">SELECT</a></code></td>
-<td class="colLast"><code>"\u03c3"</code></td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.QueryPlanVisualizer.SPACE">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;java.lang.String</code></td>
-<td><code><a href="simpledb/QueryPlanVisualizer.html#SPACE">SPACE</a></code></td>
-<td class="colLast"><code>"  "</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/RecordId.html" title="class in simpledb">RecordId</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.RecordId.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/RecordId.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.SeqScan.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/SeqScan.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.StringAggregator.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/StringAggregator.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.StringField.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/StringField.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.TableStats.IOCOSTPERPAGE">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/TableStats.html#IOCOSTPERPAGE">IOCOSTPERPAGE</a></code></td>
-<td class="colLast"><code>1000</code></td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a name="simpledb.TableStats.NUM_HIST_BINS">
-<!--   -->
-</a><code>static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/TableStats.html#NUM_HIST_BINS">NUM_HIST_BINS</a></code></td>
-<td class="colLast"><code>100</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.TransactionAbortedException.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/TransactionAbortedException.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.TransactionId.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/TransactionId.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Tuple.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/Tuple.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.simpledb.TupleArrayIterator</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.TupleArrayIterator.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/TupleArrayIterator.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.TupleDesc.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/TupleDesc.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.TupleDesc.TDItem.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/TupleDesc.TDItem.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.TupleIterator.serialVersionUID">
-<!--   -->
-</a><code>private&nbsp;static&nbsp;final&nbsp;long</code></td>
-<td><code><a href="simpledb/TupleIterator.html#serialVersionUID">serialVersionUID</a></code></td>
-<td class="colLast"><code>1L</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="constantsSummary" border="0" cellpadding="3" cellspacing="0" summary="Constant Field Values table, listing constant fields, and values">
-<caption><span>simpledb.<a href="simpledb/Type.html" title="enum in simpledb">Type</a></span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th scope="col">Constant Field</th>
-<th class="colLast" scope="col">Value</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a name="simpledb.Type.STRING_LEN">
-<!--   -->
-</a><code>public&nbsp;static&nbsp;final&nbsp;int</code></td>
-<td><code><a href="simpledb/Type.html#STRING_LEN">STRING_LEN</a></code></td>
-<td class="colLast"><code>128</code></td>
-</tr>
-</tbody>
-</table>
-</li>
-</ul>
-</div>
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li><a href="index-all.html">Index</a></li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?constant-values.html" target="_top">Frames</a></li>
-<li><a href="constant-values.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/deprecated-list.html lab4/javadoc/deprecated-list.html
--- lab3/javadoc/deprecated-list.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/deprecated-list.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,120 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Deprecated List</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
-<script type="text/javascript" src="script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Deprecated List";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li class="navBarCell1Rev">Deprecated</li>
-<li><a href="index-all.html">Index</a></li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?deprecated-list.html" target="_top">Frames</a></li>
-<li><a href="deprecated-list.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<div class="header">
-<h1 title="Deprecated API" class="title">Deprecated API</h1>
-<h2 title="Contents">Contents</h2>
-</div>
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li class="navBarCell1Rev">Deprecated</li>
-<li><a href="index-all.html">Index</a></li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?deprecated-list.html" target="_top">Frames</a></li>
-<li><a href="deprecated-list.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/help-doc.html lab4/javadoc/help-doc.html
--- lab3/javadoc/help-doc.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/help-doc.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,217 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>API Help</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
-<script type="text/javascript" src="script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="API Help";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li><a href="index-all.html">Index</a></li>
-<li class="navBarCell1Rev">Help</li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?help-doc.html" target="_top">Frames</a></li>
-<li><a href="help-doc.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<div class="header">
-<h1 class="title">How This API Document Is Organized</h1>
-<div class="subTitle">This API (Application Programming Interface) document has pages corresponding to the items in the navigation bar, described as follows.</div>
-</div>
-<div class="contentContainer">
-<ul class="blockList">
-<li class="blockList">
-<h2>Package</h2>
-<p>Each package has a page that contains a list of its classes and interfaces, with a summary for each. This page can contain six categories:</p>
-<ul>
-<li>Interfaces (italic)</li>
-<li>Classes</li>
-<li>Enums</li>
-<li>Exceptions</li>
-<li>Errors</li>
-<li>Annotation Types</li>
-</ul>
-</li>
-<li class="blockList">
-<h2>Class/Interface</h2>
-<p>Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a class/interface description, summary tables, and detailed member descriptions:</p>
-<ul>
-<li>Class inheritance diagram</li>
-<li>Direct Subclasses</li>
-<li>All Known Subinterfaces</li>
-<li>All Known Implementing Classes</li>
-<li>Class/interface declaration</li>
-<li>Class/interface description</li>
-</ul>
-<ul>
-<li>Nested Class Summary</li>
-<li>Field Summary</li>
-<li>Constructor Summary</li>
-<li>Method Summary</li>
-</ul>
-<ul>
-<li>Field Detail</li>
-<li>Constructor Detail</li>
-<li>Method Detail</li>
-</ul>
-<p>Each summary entry contains the first sentence from the detailed description for that item. The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer.</p>
-</li>
-<li class="blockList">
-<h2>Annotation Type</h2>
-<p>Each annotation type has its own separate page with the following sections:</p>
-<ul>
-<li>Annotation Type declaration</li>
-<li>Annotation Type description</li>
-<li>Required Element Summary</li>
-<li>Optional Element Summary</li>
-<li>Element Detail</li>
-</ul>
-</li>
-<li class="blockList">
-<h2>Enum</h2>
-<p>Each enum has its own separate page with the following sections:</p>
-<ul>
-<li>Enum declaration</li>
-<li>Enum description</li>
-<li>Enum Constant Summary</li>
-<li>Enum Constant Detail</li>
-</ul>
-</li>
-<li class="blockList">
-<h2>Tree (Class Hierarchy)</h2>
-<p>There is a <a href="overview-tree.html">Class Hierarchy</a> page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. The classes are organized by inheritance structure starting with <code>java.lang.Object</code>. The interfaces do not inherit from <code>java.lang.Object</code>.</p>
-<ul>
-<li>When viewing the Overview page, clicking on "Tree" displays the hierarchy for all packages.</li>
-<li>When viewing a particular package, class or interface page, clicking "Tree" displays the hierarchy for only that package.</li>
-</ul>
-</li>
-<li class="blockList">
-<h2>Deprecated API</h2>
-<p>The <a href="deprecated-list.html">Deprecated API</a> page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to improvements, and a replacement API is usually given. Deprecated APIs may be removed in future implementations.</p>
-</li>
-<li class="blockList">
-<h2>Index</h2>
-<p>The <a href="index-all.html">Index</a> contains an alphabetic list of all classes, interfaces, constructors, methods, and fields.</p>
-</li>
-<li class="blockList">
-<h2>Prev/Next</h2>
-<p>These links take you to the next or previous class, interface, package, or related page.</p>
-</li>
-<li class="blockList">
-<h2>Frames/No Frames</h2>
-<p>These links show and hide the HTML frames.  All pages are available with or without frames.</p>
-</li>
-<li class="blockList">
-<h2>All Classes</h2>
-<p>The <a href="allclasses-noframe.html">All Classes</a> link shows all classes and interfaces except non-static nested types.</p>
-</li>
-<li class="blockList">
-<h2>Serialized Form</h2>
-<p>Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to re-implementors, not to developers using the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking "Serialized Form" in the "See also" section of the class description.</p>
-</li>
-<li class="blockList">
-<h2>Constant Field Values</h2>
-<p>The <a href="constant-values.html">Constant Field Values</a> page lists the static final fields and their values.</p>
-</li>
-</ul>
-<span class="emphasizedPhrase">This help file applies to API documentation generated using the standard doclet.</span></div>
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li><a href="index-all.html">Index</a></li>
-<li class="navBarCell1Rev">Help</li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?help-doc.html" target="_top">Frames</a></li>
-<li><a href="help-doc.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/index-all.html lab4/javadoc/index-all.html
--- lab3/javadoc/index-all.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/index-all.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,3794 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Index</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
-<script type="text/javascript" src="script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Index";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li class="navBarCell1Rev">Index</li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?index-all.html" target="_top">Frames</a></li>
-<li><a href="index-all.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<div class="contentContainer"><a href="#I:A">A</a>&nbsp;<a href="#I:B">B</a>&nbsp;<a href="#I:C">C</a>&nbsp;<a href="#I:D">D</a>&nbsp;<a href="#I:E">E</a>&nbsp;<a href="#I:F">F</a>&nbsp;<a href="#I:G">G</a>&nbsp;<a href="#I:H">H</a>&nbsp;<a href="#I:I">I</a>&nbsp;<a href="#I:J">J</a>&nbsp;<a href="#I:K">K</a>&nbsp;<a href="#I:L">L</a>&nbsp;<a href="#I:M">M</a>&nbsp;<a href="#I:N">N</a>&nbsp;<a href="#I:O">O</a>&nbsp;<a href="#I:P">P</a>&nbsp;<a href="#I:Q">Q</a>&nbsp;<a href="#I:R">R</a>&nbsp;<a href="#I:S">S</a>&nbsp;<a href="#I:T">T</a>&nbsp;<a href="#I:U">U</a>&nbsp;<a href="#I:V">V</a>&nbsp;<a href="#I:W">W</a>&nbsp;<a href="#I:Z:Z_">_</a>&nbsp;<a name="I:A">
-<!--   -->
-</a>
-<h2 class="title">A</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/Transaction.html#abort--">abort()</a></span> - Method in class simpledb.<a href="simpledb/Transaction.html" title="class in simpledb">Transaction</a></dt>
-<dd>
-<div class="block">Finish the transaction</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#ABORT_RECORD">ABORT_RECORD</a></span> - Static variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb"><span class="typeNameLink">AbstractDbFileIterator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper for implementing DbFileIterators.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/AbstractDbFileIterator.html#AbstractDbFileIterator--">AbstractDbFileIterator()</a></span> - Constructor for class simpledb.<a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#addAggregate-java.lang.String-java.lang.String-java.lang.String-">addAggregate(String, String, String)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Add an aggregate over the field with the specified grouping to
-        the query.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#addFilter-java.lang.String-simpledb.Predicate.Op-java.lang.String-">addFilter(String, Predicate.Op, String)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Add a new filter to the logical plan</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#addJoin-java.lang.String-java.lang.String-simpledb.Predicate.Op-">addJoin(String, String, Predicate.Op)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Add a join between two fields of two different tables.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#addJoin-java.lang.String-simpledb.DbIterator-simpledb.Predicate.Op-">addJoin(String, DbIterator, Predicate.Op)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Add a join between a field and a subquery.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#addOrderBy-java.lang.String-boolean-">addOrderBy(String, boolean)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Add an ORDER BY expression in the specified order on the specified field.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PlanCache.html#addPlan-java.util.Set-double-int-java.util.Vector-">addPlan(Set&lt;LogicalJoinNode&gt;, double, int, Vector&lt;LogicalJoinNode&gt;)</a></span> - Method in class simpledb.<a href="simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></dt>
-<dd>
-<div class="block">Add a new cost, cardinality and ordering for a particular join set.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#addProjectField-java.lang.String-java.lang.String-">addProjectField(String, String)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Add a specified field/aggregate combination to the select list of the query.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#addScan-int-java.lang.String-">addScan(int, String)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Add a scan to the plan.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#addTable-simpledb.DbFile-java.lang.String-java.lang.String-">addTable(DbFile, String, String)</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>
-<div class="block">Add a new table to the catalog.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#addTable-simpledb.DbFile-java.lang.String-">addTable(DbFile, String)</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#addTable-simpledb.DbFile-">addTable(DbFile)</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>
-<div class="block">Add a new table to the catalog.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntHistogram.html#addValue-int-">addValue(int)</a></span> - Method in class simpledb.<a href="simpledb/IntHistogram.html" title="class in simpledb">IntHistogram</a></dt>
-<dd>
-<div class="block">Add a value to the set of values that you are keeping a histogram of.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringHistogram.html#addValue-java.lang.String-">addValue(String)</a></span> - Method in class simpledb.<a href="simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></dt>
-<dd>
-<div class="block">Add a new value to thte histogram</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#afield">afield</a></span> - Variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.html#afield">afield</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.html#afield">afield</a></span> - Variable in class simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#aFieldName">aFieldName</a></span> - Variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#agg">agg</a></span> - Variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#aggField">aggField</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#aggOp">aggOp</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalSelectListNode.html#aggOp">aggOp</a></span> - Variable in class simpledb.<a href="simpledb/LogicalSelectListNode.html" title="class in simpledb">LogicalSelectListNode</a></dt>
-<dd>
-<div class="block">The aggregation operation over the field (if any)</div>
-</dd>
-<dt><a href="simpledb/Aggregate.html" title="class in simpledb"><span class="typeNameLink">Aggregate</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">The Aggregation operator that computes an aggregate (e.g., sum, avg, max,
- min).</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#Aggregate-simpledb.DbIterator-int-int-simpledb.Aggregator.Op-">Aggregate(DbIterator, int, int, Aggregator.Op)</a></span> - Constructor for class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#aggregateField--">aggregateField()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#aggregateFieldName--">aggregateFieldName()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.AggregateFields.html#AggregateFields-java.lang.String-">AggregateFields(String)</a></span> - Constructor for class simpledb.<a href="simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.AggregateFields.html#AggregateFields-java.lang.String-">AggregateFields(String)</a></span> - Constructor for class simpledb.<a href="simpledb/StringAggregator.AggregateFields.html" title="class in simpledb">StringAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#aggregateOp--">aggregateOp()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Aggregator.html" title="interface in simpledb"><span class="typeNameLink">Aggregator</span></a> - Interface in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">The common interface for any class that can compute an aggregate over a
- list of Tuples.</div>
-</dd>
-<dt><a href="simpledb/Aggregator.Op.html" title="enum in simpledb"><span class="typeNameLink">Aggregator.Op</span></a> - Enum in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">SUM_COUNT and SC_AVG will
- only be used in lab7, you are not required
- to implement them until then.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#alias">alias</a></span> - Variable in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalScanNode.html#alias">alias</a></span> - Variable in class simpledb.<a href="simpledb/LogicalScanNode.html" title="class in simpledb">LogicalScanNode</a></dt>
-<dd>
-<div class="block">The name (alias) of the table as it is used in the query</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#aop">aop</a></span> - Variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#asc">asc</a></span> - Variable in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleComparator.html#asc">asc</a></span> - Variable in class simpledb.<a href="simpledb/TupleComparator.html" title="class in simpledb">TupleComparator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntHistogram.html#avgSelectivity--">avgSelectivity()</a></span> - Method in class simpledb.<a href="simpledb/IntHistogram.html" title="class in simpledb">IntHistogram</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringHistogram.html#avgSelectivity--">avgSelectivity()</a></span> - Method in class simpledb.<a href="simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#avgSelectivity-int-simpledb.Predicate.Op-">avgSelectivity(int, Predicate.Op)</a></span> - Method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>
-<div class="block">The average selectivity of the field under op.</div>
-</dd>
-</dl>
-<a name="I:B">
-<!--   -->
-</a>
-<h2 class="title">B</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#BEGIN_RECORD">BEGIN_RECORD</a></span> - Static variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PlanCache.html#bestCardinalities">bestCardinalities</a></span> - Variable in class simpledb.<a href="simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PlanCache.html#bestCosts">bestCosts</a></span> - Variable in class simpledb.<a href="simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PlanCache.html#bestOrders">bestOrders</a></span> - Variable in class simpledb.<a href="simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#bf">bf</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#bf">bf</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#bf">bf</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#bf">bf</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeChecker.html" title="class in simpledb"><span class="typeNameLink">BTreeChecker</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Created by orm on 10/7/15.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.html#BTreeChecker--">BTreeChecker()</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeChecker.html" title="class in simpledb">BTreeChecker</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb"><span class="typeNameLink">BTreeChecker.SubtreeSummary</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">This class is only used for error-checking code.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#BTreeDeleter-simpledb.BTreeFile-java.util.concurrent.BlockingQueue-">BTreeDeleter(BTreeFile, BlockingQueue&lt;ArrayList&lt;Integer&gt;&gt;)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeEntry.html" title="class in simpledb"><span class="typeNameLink">BTreeEntry</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Each instance of BTreeEntry stores one key and two child page ids.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#BTreeEntry-simpledb.Field-simpledb.BTreePageId-simpledb.BTreePageId-">BTreeEntry(Field, BTreePageId, BTreePageId)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">Constructor to create a new BTreeEntry</div>
-</dd>
-<dt><a href="simpledb/BTreeFile.html" title="class in simpledb"><span class="typeNameLink">BTreeFile</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">BTreeFile is an implementation of a DbFile that stores a B+ tree.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#BTreeFile-java.io.File-int-simpledb.TupleDesc-">BTreeFile(File, int, TupleDesc)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Constructs a B+ tree file backed by the specified file.</div>
-</dd>
-<dt><a href="simpledb/BTreeFileEncoder.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">BTreeFileEncoder reads a comma delimited text file and converts it to
- pages of binary data in the appropriate format for simpledb B+ tree
- pages.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#BTreeFileEncoder--">BTreeFileEncoder()</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder.EntryComparator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Comparator to sort BTreeEntry objects by key</div>
-</dd>
-<dt><a href="simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder.ReverseEntryComparator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Comparator to sort BTreeEntry objects by key in descending order</div>
-</dd>
-<dt><a href="simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder.TupleComparator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">comparator to sort Tuples by key field</div>
-</dd>
-<dt><a href="simpledb/BTreeFileIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileIterator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that implements the Java Iterator for tuples on a BTreeFile</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileIterator.html#BTreeFileIterator-simpledb.BTreeFile-simpledb.TransactionId-">BTreeFileIterator(BTreeFile, TransactionId)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></dt>
-<dd>
-<div class="block">Constructor for this iterator</div>
-</dd>
-<dt><a href="simpledb/BTreeHeaderPage.html" title="class in simpledb"><span class="typeNameLink">BTreeHeaderPage</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Each instance of BTreeHeaderPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#BTreeHeaderPage-simpledb.BTreePageId-byte:A-">BTreeHeaderPage(BTreePageId, byte[])</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Create a BTreeHeaderPage from a set of bytes of data read from disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#BTreeInserter-simpledb.BTreeFile-int:A-java.util.concurrent.BlockingQueue-">BTreeInserter(BTreeFile, int[], BlockingQueue&lt;ArrayList&lt;Integer&gt;&gt;)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeInternalPage.html" title="class in simpledb"><span class="typeNameLink">BTreeInternalPage</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Each instance of BTreeInternalPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#BTreeInternalPage-simpledb.BTreePageId-byte:A-int-">BTreeInternalPage(BTreePageId, byte[], int)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Create a BTreeInternalPage from a set of bytes of data read from disk.</div>
-</dd>
-<dt><a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeInternalPageIterator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that implements the Java Iterator for entries on a BTreeInternalPage.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageIterator.html#BTreeInternalPageIterator-simpledb.BTreeInternalPage-">BTreeInternalPageIterator(BTreeInternalPage)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeInternalPageReverseIterator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that implements the Java Iterator for entries on a BTreeInternalPage in reverse.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#BTreeInternalPageReverseIterator-simpledb.BTreeInternalPage-">BTreeInternalPageReverseIterator(BTreeInternalPage)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeLeafPage.html" title="class in simpledb"><span class="typeNameLink">BTreeLeafPage</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Each instance of BTreeLeafPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#BTreeLeafPage-simpledb.BTreePageId-byte:A-int-">BTreeLeafPage(BTreePageId, byte[], int)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Create a BTreeLeafPage from a set of bytes of data read from disk.</div>
-</dd>
-<dt><a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeLeafPageIterator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that implements the Java Iterator for tuples on a BTreeLeafPage.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageIterator.html#BTreeLeafPageIterator-simpledb.BTreeLeafPage-">BTreeLeafPageIterator(BTreeLeafPage)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb">BTreeLeafPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeLeafPageReverseIterator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that implements the Java Iterator for tuples on a BTreeLeafPage in reverse.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageReverseIterator.html#BTreeLeafPageReverseIterator-simpledb.BTreeLeafPage-">BTreeLeafPageReverseIterator(BTreeLeafPage)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb">BTreeLeafPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreePage.html" title="class in simpledb"><span class="typeNameLink">BTreePage</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Each instance of BTreeInternalPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#BTreePage-simpledb.BTreePageId-int-">BTreePage(BTreePageId, int)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>
-<div class="block">Create a BTreeInternalPage from a set of bytes of data read from disk.</div>
-</dd>
-<dt><a href="simpledb/BTreePageId.html" title="class in simpledb"><span class="typeNameLink">BTreePageId</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Unique identifier for BTreeInternalPage, BTreeLeafPage, BTreeHeaderPage
-  and BTreeRootPtrPage objects.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#BTreePageId-int-int-int-">BTreePageId(int, int, int)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#BTreeReader-simpledb.TransactionId-simpledb.BTreeFile-simpledb.Field-int-">BTreeReader(TransactionId, BTreeFile, Field, int)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb"><span class="typeNameLink">BTreeRootPtrPage</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">BTreeRootPtrPage stores the pointer to the root node used in the B+ tree and
- implements Page Interface that is used by BufferPool</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#BTreeRootPtrPage-simpledb.BTreePageId-byte:A-">BTreeRootPtrPage(BTreePageId, byte[])</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><a href="simpledb/BTreeScan.html" title="class in simpledb"><span class="typeNameLink">BTreeScan</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">BTreeScan is an operator which reads tuples in sorted order 
- according to a predicate</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#BTreeScan-simpledb.TransactionId-int-java.lang.String-simpledb.IndexPredicate-">BTreeScan(TransactionId, int, String, IndexPredicate)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>
-<div class="block">Creates a B+ tree scan over the specified table as a part of the
- specified transaction.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#BTreeScan-simpledb.TransactionId-int-simpledb.IndexPredicate-">BTreeScan(TransactionId, int, IndexPredicate)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeSearchIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeSearchIterator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that implements the DbFileIterator for search tuples on a
- B+ Tree File</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#BTreeSearchIterator-simpledb.BTreeFile-simpledb.TransactionId-simpledb.IndexPredicate-">BTreeSearchIterator(BTreeFile, TransactionId, IndexPredicate)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>
-<div class="block">Constructor for this iterator</div>
-</dd>
-<dt><a href="simpledb/BTreeUtility.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper methods used for testing and implementing random features.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#BTreeUtility--">BTreeUtility()</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeDeleter</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that attempts to delete tuple(s) in a new thread</div>
-</dd>
-<dt><a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeInserter</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</dd>
-<dt><a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeReader</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that searches for tuple(s) in a new thread</div>
-</dd>
-<dt><a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeWriter</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#BTreeWriter-simpledb.TransactionId-simpledb.BTreeFile-int-int-">BTreeWriter(TransactionId, BTreeFile, int, int)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/BufferPool.html" title="class in simpledb"><span class="typeNameLink">BufferPool</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">BufferPool manages the reading and writing of pages into memory from
- disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#BufferPool-int-">BufferPool(int)</a></span> - Constructor for class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Creates a BufferPool that caches up to numPages pages.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#buildTree-int-int-simpledb.DbIterator-int-int-">buildTree(int, int, DbIterator, int, int)</a></span> - Method in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:C">
-<!--   -->
-</a>
-<h2 class="title">C</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalFilterNode.html#c">c</a></span> - Variable in class simpledb.<a href="simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#calculateQueryPlanTreeDepth-simpledb.DbIterator-">calculateQueryPlanTreeDepth(DbIterator)</a></span> - Method in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/CostCard.html#card">card</a></span> - Variable in class simpledb.<a href="simpledb/CostCard.html" title="class in simpledb">CostCard</a></dt>
-<dd>
-<div class="block">The cardinality of the optimal subplan</div>
-</dd>
-<dt><a href="simpledb/Catalog.html" title="class in simpledb"><span class="typeNameLink">Catalog</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">The Catalog keeps track of all available tables in the database and their
- associated schemas.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#Catalog--">Catalog()</a></span> - Constructor for class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#categToString-int-">categToString(int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.SubtreeSummary.html#checkAndMerge-simpledb.BTreeChecker.SubtreeSummary-simpledb.BTreeChecker.SubtreeSummary-">checkAndMerge(BTreeChecker.SubtreeSummary, BTreeChecker.SubtreeSummary)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#CHECKPOINT_RECORD">CHECKPOINT_RECORD</a></span> - Static variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.html#checkRep-simpledb.BTreeFile-simpledb.TransactionId-java.util.HashMap-boolean-">checkRep(BTreeFile, TransactionId, HashMap&lt;PageId, Page&gt;, boolean)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeChecker.html" title="class in simpledb">BTreeChecker</a></dt>
-<dd>
-<div class="block">checks the integrity of the tree:
- 1) parent pointers.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#checkRep-simpledb.Field-simpledb.Field-boolean-int-">checkRep(Field, Field, boolean, int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#checkRep-int-simpledb.Field-simpledb.Field-boolean-int-">checkRep(int, Field, Field, boolean, int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.html#checkSubTree-simpledb.BTreeFile-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Field-simpledb.Field-simpledb.BTreePageId-boolean-int-">checkSubTree(BTreeFile, TransactionId, HashMap&lt;PageId, Page&gt;, BTreePageId, Field, Field, BTreePageId, boolean, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeChecker.html" title="class in simpledb">BTreeChecker</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#child">child</a></span> - Variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#child">child</a></span> - Variable in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#child">child</a></span> - Variable in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#child">child</a></span> - Variable in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#child">child</a></span> - Variable in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#child">child</a></span> - Variable in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#child1">child1</a></span> - Variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#child1">child1</a></span> - Variable in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#child2">child2</a></span> - Variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#child2">child2</a></span> - Variable in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#childCategory">childCategory</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#childId">childId</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#children">children</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#childTups">childTups</a></span> - Variable in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#cleanUpEntries-java.util.ArrayList-simpledb.BTreeFile-int-int-simpledb.Type-int-int-">cleanUpEntries(ArrayList&lt;ArrayList&lt;BTreeEntry&gt;&gt;, BTreeFile, int, int, Type, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Write out any remaining entries and update the parent pointers.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#clear--">clear()</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>
-<div class="block">Delete all tables from the catalog</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/AbstractDbFileIterator.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></dt>
-<dd>
-<div class="block">If subclasses override this, they should call super.close().</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileIterator.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></dt>
-<dd>
-<div class="block">close the iterator</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>
-<div class="block">close the iterator</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFileIterator.html#close--">close()</a></span> - Method in interface simpledb.<a href="simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></dt>
-<dd>
-<div class="block">Closes the iterator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbIterator.html#close--">close()</a></span> - Method in interface simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dt>
-<dd>
-<div class="block">Closes the iterator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>
-<div class="block">Closes this iterator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>
-<div class="block">Close the iterator</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>
-<div class="block">Closes the iterator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#close--">close()</a></span> - Method in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#comboTD">comboTD</a></span> - Variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#comboTD">comboTD</a></span> - Variable in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Transaction.html#commit--">commit()</a></span> - Method in class simpledb.<a href="simpledb/Transaction.html" title="class in simpledb">Transaction</a></dt>
-<dd>
-<div class="block">Finish the transaction</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#COMMIT_RECORD">COMMIT_RECORD</a></span> - Static variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.EntryComparator.html#compare-simpledb.BTreeEntry-simpledb.BTreeEntry-">compare(BTreeEntry, BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb">BTreeFileEncoder.EntryComparator</a></dt>
-<dd>
-<div class="block">Compare two entries based on their key field</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.ReverseEntryComparator.html#compare-simpledb.BTreeEntry-simpledb.BTreeEntry-">compare(BTreeEntry, BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb">BTreeFileEncoder.ReverseEntryComparator</a></dt>
-<dd>
-<div class="block">Compare two entries based on their key field</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.TupleComparator.html#compare-simpledb.Tuple-simpledb.Tuple-">compare(Tuple, Tuple)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb">BTreeFileEncoder.TupleComparator</a></dt>
-<dd>
-<div class="block">Compare two tuples based on their key field</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Field.html#compare-simpledb.Predicate.Op-simpledb.Field-">compare(Predicate.Op, Field)</a></span> - Method in interface simpledb.<a href="simpledb/Field.html" title="interface in simpledb">Field</a></dt>
-<dd>
-<div class="block">Compare the value of this field object to the passed in value.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#compare-simpledb.Predicate.Op-simpledb.Field-">compare(Predicate.Op, Field)</a></span> - Method in class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>
-<div class="block">Compare the specified field to the value of this Field.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#compare-simpledb.Predicate.Op-simpledb.Field-">compare(Predicate.Op, Field)</a></span> - Method in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>
-<div class="block">Compare the specified field to the value of this Field.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleComparator.html#compare-simpledb.Tuple-simpledb.Tuple-">compare(Tuple, Tuple)</a></span> - Method in class simpledb.<a href="simpledb/TupleComparator.html" title="class in simpledb">TupleComparator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#computeCostAndCardOfSubplan-java.util.HashMap-java.util.HashMap-simpledb.LogicalJoinNode-java.util.Set-double-simpledb.PlanCache-">computeCostAndCardOfSubplan(HashMap&lt;String, TableStats&gt;, HashMap&lt;String, Double&gt;, LogicalJoinNode, Set&lt;LogicalJoinNode&gt;, double, PlanCache)</a></span> - Method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">This is a helper method that computes the cost and cardinality of joining
- joinToRemove to joinSet (joinSet should contain joinToRemove), given that
- all of the subsets of size joinSet.size() - 1 have already been computed
- and stored in PlanCache pc.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#computeStatistics--">computeStatistics()</a></span> - Static method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#convert-java.util.ArrayList-java.io.File-java.io.File-int-int-">convert(ArrayList&lt;ArrayList&lt;Integer&gt;&gt;, File, File, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Encode the file using the BTreeFile's Insert method.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#convert-java.io.File-java.io.File-java.io.File-int-int-">convert(File, File, File, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Encode the file using the BTreeFile's Insert method.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#convert-java.util.ArrayList-java.io.File-java.io.File-int-int-simpledb.Type:A-char-int-">convert(ArrayList&lt;ArrayList&lt;Integer&gt;&gt;, File, File, int, int, Type[], char, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Faster method to encode the B+ tree file</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#convert-java.io.File-java.io.File-java.io.File-int-int-simpledb.Type:A-char-int-">convert(File, File, File, int, int, Type[], char, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Faster method to encode the B+ tree file</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFileEncoder.html#convert-java.util.ArrayList-java.io.File-int-int-">convert(ArrayList&lt;ArrayList&lt;Integer&gt;&gt;, File, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/HeapFileEncoder.html" title="class in simpledb">HeapFileEncoder</a></dt>
-<dd>
-<div class="block">Convert the specified tuple list (with only integer fields) into a binary
- page file.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFileEncoder.html#convert-java.io.File-java.io.File-int-int-">convert(File, File, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/HeapFileEncoder.html" title="class in simpledb">HeapFileEncoder</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFileEncoder.html#convert-java.io.File-java.io.File-int-int-simpledb.Type:A-">convert(File, File, int, int, Type[])</a></span> - Static method in class simpledb.<a href="simpledb/HeapFileEncoder.html" title="class in simpledb">HeapFileEncoder</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFileEncoder.html#convert-java.io.File-java.io.File-int-int-simpledb.Type:A-char-">convert(File, File, int, int, Type[], char)</a></span> - Static method in class simpledb.<a href="simpledb/HeapFileEncoder.html" title="class in simpledb">HeapFileEncoder</a></dt>
-<dd>
-<div class="block">Convert the specified input text file into a binary
- page file.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#convertToInternalPage-java.util.ArrayList-int-simpledb.Type-int-">convertToInternalPage(ArrayList&lt;BTreeEntry&gt;, int, Type, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Convert a set of entries to a byte array in the format of a BTreeInternalPage</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#convertToLeafPage-java.util.ArrayList-int-int-simpledb.Type:A-int-">convertToLeafPage(ArrayList&lt;Tuple&gt;, int, int, Type[], int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Convert a set of tuples to a byte array in the format of a BTreeLeafPage</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#convertToRootPtrPage-int-int-int-">convertToRootPtrPage(int, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Create a byte array in the format of a BTreeRootPtrPage</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/CostCard.html#cost">cost</a></span> - Variable in class simpledb.<a href="simpledb/CostCard.html" title="class in simpledb">CostCard</a></dt>
-<dd>
-<div class="block">The cost of the optimal subplan</div>
-</dd>
-<dt><a href="simpledb/CostCard.html" title="class in simpledb"><span class="typeNameLink">CostCard</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Class returned by <a href="simpledb/JoinOptimizer.html#computeCostAndCardOfSubplan-java.util.HashMap-java.util.HashMap-simpledb.LogicalJoinNode-java.util.Set-double-simpledb.PlanCache-"><code>JoinOptimizer.computeCostAndCardOfSubplan(java.util.HashMap&lt;java.lang.String, simpledb.TableStats&gt;, java.util.HashMap&lt;java.lang.String, java.lang.Double&gt;, simpledb.LogicalJoinNode, java.util.Set&lt;simpledb.LogicalJoinNode&gt;, double, simpledb.PlanCache)</code></a> specifying the
-    cost and cardinality of the optimal plan represented by plan.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/CostCard.html#CostCard--">CostCard()</a></span> - Constructor for class simpledb.<a href="simpledb/CostCard.html" title="class in simpledb">CostCard</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#count">count</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#count">count</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.AggregateFields.html#count">count</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.AggregateFields.html#count">count</a></span> - Variable in class simpledb.<a href="simpledb/StringAggregator.AggregateFields.html" title="class in simpledb">StringAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TransactionId.html#counter">counter</a></span> - Static variable in class simpledb.<a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#createBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">createBTreeFile(int, int, Map&lt;Integer, Integer&gt;, ArrayList&lt;ArrayList&lt;Integer&gt;&gt;, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">creates a *non* random B+ tree file for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#createEmptyBTreeFile-java.lang.String-int-int-">createEmptyBTreeFile(String, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">A utility method to create a new BTreeFile with no data,
- assuming the path does not already exist.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#createEmptyBTreeFile-java.lang.String-int-int-int-">createEmptyBTreeFile(String, int, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">A utility method to create a new BTreeFile with no data, with the specified
- number of pages, assuming the path does not already exist.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#createEmptyHeapFile-java.lang.String-int-">createEmptyHeapFile(String, int)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>
-<div class="block">A utility method to create a new HeapFile with a single empty page,
- assuming the path does not already exist.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#createEmptyPageData--">createEmptyPageData()</a></span> - Static method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Static method to generate a byte array corresponding to an empty
- BTreeHeaderPage.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#createEmptyPageData--">createEmptyPageData()</a></span> - Static method in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>
-<div class="block">Static method to generate a byte array corresponding to an empty
- BTreePage.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#createEmptyPageData--">createEmptyPageData()</a></span> - Static method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">Static method to generate a byte array corresponding to an empty
- BTreeRootPtrPage.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#createEmptyPageData--">createEmptyPageData()</a></span> - Static method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Static method to generate a byte array corresponding to an empty
- HeapPage.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#createRandomBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">createRandomBTreeFile(int, int, Map&lt;Integer, Integer&gt;, ArrayList&lt;ArrayList&lt;Integer&gt;&gt;, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#createRandomBTreeFile-int-int-int-java.util.Map-java.util.ArrayList-int-">createRandomBTreeFile(int, int, int, Map&lt;Integer, Integer&gt;, ArrayList&lt;ArrayList&lt;Integer&gt;&gt;, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Generates a random B+ tree file for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-">createRandomInternalPage(BTreePageId, int, int, int, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Create a random internal page for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-int-">createRandomInternalPage(BTreePageId, int, int, int, int, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Create a random internal page for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-">createRandomLeafPage(BTreePageId, int, int, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Create a random leaf page for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-int-">createRandomLeafPage(BTreePageId, int, int, int, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Create a random leaf page for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageIterator.html#curEntry">curEntry</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#curEntry">curEntry</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileIterator.html#curp">curp</a></span> - Variable in class simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#curp">curp</a></span> - Variable in class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#currentOffset">currentOffset</a></span> - Variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#curtrans">curtrans</a></span> - Variable in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageIterator.html#curTuple">curTuple</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb">BTreeLeafPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageReverseIterator.html#curTuple">curTuple</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb">BTreeLeafPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:D">
-<!--   -->
-</a>
-<h2 class="title">D</h2>
-<dl>
-<dt><a href="simpledb/Database.html" title="class in simpledb"><span class="typeNameLink">Database</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Database is a class that initializes several static variables used by the
- database system (the catalog, the buffer pool, and the log files, in
- particular.)</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#Database--">Database()</a></span> - Constructor for class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/DbException.html" title="class in simpledb"><span class="typeNameLink">DbException</span></a> - Exception in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Generic database exception class</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbException.html#DbException-java.lang.String-">DbException(String)</a></span> - Constructor for exception simpledb.<a href="simpledb/DbException.html" title="class in simpledb">DbException</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/DbFile.html" title="interface in simpledb"><span class="typeNameLink">DbFile</span></a> - Interface in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">The interface for database files on disk.</div>
-</dd>
-<dt><a href="simpledb/DbFileIterator.html" title="interface in simpledb"><span class="typeNameLink">DbFileIterator</span></a> - Interface in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">DbFileIterator is the iterator interface that all SimpleDB Dbfile should
- implement.</div>
-</dd>
-<dt><a href="simpledb/DbIterator.html" title="interface in simpledb"><span class="typeNameLink">DbIterator</span></a> - Interface in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">DbIterator is the iterator interface that all SimpleDB operators should
- implement.</div>
-</dd>
-<dt><a href="simpledb/DeadlockException.html" title="class in simpledb"><span class="typeNameLink">DeadlockException</span></a> - Exception in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Exception that is thrown when a deadlock occurs.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DeadlockException.html#DeadlockException--">DeadlockException()</a></span> - Constructor for exception simpledb.<a href="simpledb/DeadlockException.html" title="class in simpledb">DeadlockException</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Debug.html" title="class in simpledb"><span class="typeNameLink">Debug</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Debug is a utility class that wraps println statements and allows
- more or less command line output to be turned on.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Debug.html#Debug--">Debug()</a></span> - Constructor for class simpledb.<a href="simpledb/Debug.html" title="class in simpledb">Debug</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Debug.html#DEBUG_LEVEL">DEBUG_LEVEL</a></span> - Static variable in class simpledb.<a href="simpledb/Debug.html" title="class in simpledb">Debug</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Debug.html#DEFAULT_LEVEL">DEFAULT_LEVEL</a></span> - Static variable in class simpledb.<a href="simpledb/Debug.html" title="class in simpledb">Debug</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#DEFAULT_PAGES">DEFAULT_PAGES</a></span> - Static variable in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Default number of pages passed to the constructor.</div>
-</dd>
-<dt><a href="simpledb/Delete.html" title="class in simpledb"><span class="typeNameLink">Delete</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">The delete operator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#Delete-simpledb.TransactionId-simpledb.DbIterator-">Delete(TransactionId, DbIterator)</a></span> - Constructor for class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>
-<div class="block">Constructor specifying the transaction that this delete belongs to as
- well as the child to read from.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#deleteEntry-simpledb.BTreeEntry-boolean-">deleteEntry(BTreeEntry, boolean)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Delete the specified entry (key + 1 child pointer) from the page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#deleteKeyAndLeftChild-simpledb.BTreeEntry-">deleteKeyAndLeftChild(BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Delete the specified entry (key + left child pointer) from the page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#deleteKeyAndRightChild-simpledb.BTreeEntry-">deleteKeyAndRightChild(BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Delete the specified entry (key + right child pointer) from the page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#deleteParentEntry-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">deleteParentEntry(TransactionId, HashMap&lt;PageId, Page&gt;, BTreePage, BTreeInternalPage, BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Method to encapsulate the process of deleting an entry (specifically the key and right child) 
- from a parent node.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple(TransactionId, Tuple)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Delete a tuple from this BTreeFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#deleteTuple-simpledb.Tuple-">deleteTuple(Tuple)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Delete the specified tuple from the page;  the tuple should be updated to reflect
-   that it is no longer stored on any page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple(TransactionId, Tuple)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Remove the specified tuple from the buffer pool.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFile.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple(TransactionId, Tuple)</a></span> - Method in interface simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb">DbFile</a></dt>
-<dd>
-<div class="block">Removes the specified tuple from the file on behalf of the specified
- transaction.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple(TransactionId, Tuple)</a></span> - Method in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#deleteTuple-simpledb.Tuple-">deleteTuple(Tuple)</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Delete the specified tuple from the page;  the tuple should be updated to reflect
-   that it is no longer stored on any page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.SubtreeSummary.html#depth">depth</a></span> - Variable in class simpledb.<a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#dirtier">dirtier</a></span> - Variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#dirtier">dirtier</a></span> - Variable in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#dirtier">dirtier</a></span> - Variable in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#dirtier">dirtier</a></span> - Variable in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#dirty">dirty</a></span> - Variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#dirty">dirty</a></span> - Variable in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#dirty">dirty</a></span> - Variable in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#dirty">dirty</a></span> - Variable in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#dis">dis</a></span> - Variable in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#disambiguateName-java.lang.String-">disambiguateName(String)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Given a name of a field, try to figure out what table it belongs to by looking
-   through all of the tables added via <a href="simpledb/LogicalPlan.html#addScan-int-java.lang.String-"><code>LogicalPlan.addScan(int, java.lang.String)</code></a>.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#discardPage-simpledb.PageId-">discardPage(PageId)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Remove the specific page id from the buffer pool.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#doesJoin-java.util.Vector-java.lang.String-">doesJoin(Vector&lt;LogicalJoinNode&gt;, String)</a></span> - Method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Return true if the specified table is in the list of joins, false
- otherwise</div>
-</dd>
-</dl>
-<a name="I:E">
-<!--   -->
-</a>
-<h2 class="title">E</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#elock">elock</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#elock">elock</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#elock">elock</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#elock">elock</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.EntryComparator.html#EntryComparator--">EntryComparator()</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb">BTreeFileEncoder.EntryComparator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#enumerateSubsets-java.util.Vector-int-">enumerateSubsets(Vector&lt;T&gt;, int)</a></span> - Method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Helper method to enumerate all of the subsets of a given size of a
- specified vector.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>
-<div class="block">Compares one PageId to another.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Field.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in interface simpledb.<a href="simpledb/Field.html" title="interface in simpledb">Field</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPageId.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in class simpledb.<a href="simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></dt>
-<dd>
-<div class="block">Compares one PageId to another.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IndexPredicate.html#equals-simpledb.IndexPredicate-">equals(IndexPredicate)</a></span> - Method in class simpledb.<a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></dt>
-<dd>
-<div class="block">Return true if the fieldvalue in the supplied predicate
-        is satisfied by this predicate's fieldvalue and
-        operator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalSubplanJoinNode.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in class simpledb.<a href="simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PageId.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in interface simpledb.<a href="simpledb/PageId.html" title="interface in simpledb">PageId</a></dt>
-<dd>
-<div class="block">Compares one PageId to another.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/RecordId.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in class simpledb.<a href="simpledb/RecordId.html" title="class in simpledb">RecordId</a></dt>
-<dd>
-<div class="block">Two RecordId objects are considered equal if they represent the same
- tuple.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TransactionId.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in class simpledb.<a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#equals-java.lang.Object-">equals(Object)</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>
-<div class="block">Compares the specified object with this TupleDesc for equality.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#error">error</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#error">error</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#error">error</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#error">error</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#estimatedCardinality">estimatedCardinality</a></span> - Variable in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#estimateJoinCardinality-simpledb.LogicalJoinNode-int-int-boolean-boolean-java.util.Map-">estimateJoinCardinality(LogicalJoinNode, int, int, boolean, boolean, Map&lt;String, TableStats&gt;)</a></span> - Method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Estimate the cardinality of a join.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#estimateJoinCost-simpledb.LogicalJoinNode-int-int-double-double-">estimateJoinCost(LogicalJoinNode, int, int, double, double)</a></span> - Method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Estimate the cost of a join.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#estimateScanCost--">estimateScanCost()</a></span> - Method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>
-<div class="block">Estimates the cost of sequentially scanning the file, given that the cost
- to read a page is costPerPageIO.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntHistogram.html#estimateSelectivity-simpledb.Predicate.Op-int-">estimateSelectivity(Predicate.Op, int)</a></span> - Method in class simpledb.<a href="simpledb/IntHistogram.html" title="class in simpledb">IntHistogram</a></dt>
-<dd>
-<div class="block">Estimate the selectivity of a particular predicate and operand on this table.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringHistogram.html#estimateSelectivity-simpledb.Predicate.Op-java.lang.String-">estimateSelectivity(Predicate.Op, String)</a></span> - Method in class simpledb.<a href="simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></dt>
-<dd>
-<div class="block">Estimate the selectivity (as a double between 0 and 1) of the specified
- predicate over the specified string</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#estimateSelectivity-int-simpledb.Predicate.Op-simpledb.Field-">estimateSelectivity(int, Predicate.Op, Field)</a></span> - Method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>
-<div class="block">Estimate the selectivity of predicate <tt>field op constant</tt> on the
- table.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#estimateTableCardinality-double-">estimateTableCardinality(double)</a></span> - Method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>
-<div class="block">This method returns the number of tuples in the relation, given that a
- predicate with selectivity selectivityFactor is applied.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#estimateTableJoinCardinality-simpledb.Predicate.Op-java.lang.String-java.lang.String-java.lang.String-java.lang.String-int-int-boolean-boolean-java.util.Map-java.util.Map-">estimateTableJoinCardinality(Predicate.Op, String, String, String, String, int, int, boolean, boolean, Map&lt;String, TableStats&gt;, Map&lt;String, Integer&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Estimate the join cardinality of two tables.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#evictPage--">evictPage()</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Discards a page from the buffer pool.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#execute--">execute()</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#explain">explain</a></span> - Static variable in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:F">
-<!--   -->
-</a>
-<h2 class="title">F</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#f">f</a></span> - Variable in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileIterator.html#f">f</a></span> - Variable in class simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#f">f</a></span> - Variable in class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#f">f</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#f1PureName">f1PureName</a></span> - Variable in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>
-<div class="block">The name of the field in t1 to join with.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#f1QuantifiedName">f1QuantifiedName</a></span> - Variable in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#f2PureName">f2PureName</a></span> - Variable in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>
-<div class="block">The name of the field in t2 to join with.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#f2QuantifiedName">f2QuantifiedName</a></span> - Variable in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#fetchNext--">fetchNext()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>
-<div class="block">Returns the next tuple.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#fetchNext--">fetchNext()</a></span> - Method in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>
-<div class="block">Deletes tuples as they are read from the child operator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#fetchNext--">fetchNext()</a></span> - Method in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>
-<div class="block">AbstractDbIterator.readNext implementation.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#fetchNext--">fetchNext()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#fetchNext--">fetchNext()</a></span> - Method in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>
-<div class="block">Inserts tuples read from child into the tableId specified by the
- constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#fetchNext--">fetchNext()</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>
-<div class="block">Returns the next tuple generated by the join, or null if there are no
- more tuples.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#fetchNext--">fetchNext()</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>
-<div class="block">Returns the next Tuple in the iterator, or null if the iteration is
- finished.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#fetchNext--">fetchNext()</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>
-<div class="block">Operator.fetchNext implementation.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#fetchNext--">fetchNext()</a></span> - Method in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>
-<div class="block">Operator.fetchNext implementation.</div>
-</dd>
-<dt><a href="simpledb/Field.html" title="interface in simpledb"><span class="typeNameLink">Field</span></a> - Interface in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Interface for values of fields in tuples in SimpleDB.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#field">field</a></span> - Variable in class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleComparator.html#field">field</a></span> - Variable in class simpledb.<a href="simpledb/TupleComparator.html" title="class in simpledb">TupleComparator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinPredicate.html#field1">field1</a></span> - Variable in class simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinPredicate.html#field2">field2</a></span> - Variable in class simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.TDItem.html#fieldName">fieldName</a></span> - Variable in class simpledb.<a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a></dt>
-<dd>
-<div class="block">The name of the field</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#fieldNameToIndex-java.lang.String-">fieldNameToIndex(String)</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>
-<div class="block">Find the index of the field with a given name.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalFilterNode.html#fieldPureName">fieldPureName</a></span> - Variable in class simpledb.<a href="simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a></dt>
-<dd>
-<div class="block">The field from t which is in the filter.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalFilterNode.html#fieldQuantifiedName">fieldQuantifiedName</a></span> - Variable in class simpledb.<a href="simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#fields--">fields()</a></span> - Method in class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.TDItem.html#fieldType">fieldType</a></span> - Variable in class simpledb.<a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a></dt>
-<dd>
-<div class="block">The type of the field</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IndexPredicate.html#fieldvalue">fieldvalue</a></span> - Variable in class simpledb.<a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Filter.html" title="class in simpledb"><span class="typeNameLink">Filter</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Filter is an operator that implements a relational select.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#Filter-simpledb.Predicate-simpledb.DbIterator-">Filter(Predicate, DbIterator)</a></span> - Constructor for class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>
-<div class="block">Constructor accepts a predicate to apply and a child operator to read
- tuples to filter from.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinPredicate.html#filter-simpledb.Tuple-simpledb.Tuple-">filter(Tuple, Tuple)</a></span> - Method in class simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></dt>
-<dd>
-<div class="block">Apply the predicate to the two specified tuples.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#filter-simpledb.Tuple-">filter(Tuple)</a></span> - Method in class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>
-<div class="block">Compares the field number of t specified in the constructor to the
- operand field specified in the constructor using the operator specific in
- the constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#filters">filters</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#findLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Permissions-simpledb.Field-">findLeafPage(TransactionId, HashMap&lt;PageId, Page&gt;, BTreePageId, Permissions, Field)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Recursive function which finds and locks the leaf page in the B+ tree corresponding to
- the left-most page possibly containing the key field f.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#findLeafPage-simpledb.TransactionId-simpledb.BTreePageId-simpledb.Permissions-simpledb.Field-">findLeafPage(TransactionId, BTreePageId, Permissions, Field)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Convenience method to find a leaf page when there is no dirtypages HashMap.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#flushAllPages--">flushAllPages()</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Flush all dirty pages to disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#flushPage-simpledb.PageId-">flushPage(PageId)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Flushes a certain page to disk</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#flushPages-simpledb.TransactionId-">flushPages(TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Write all pages of the specified transaction to disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalSelectListNode.html#fname">fname</a></span> - Variable in class simpledb.<a href="simpledb/LogicalSelectListNode.html" title="class in simpledb">LogicalSelectListNode</a></dt>
-<dd>
-<div class="block">The field name being selected; the name may be (optionally) be
- qualified with a table name or alias.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#force--">force()</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#found">found</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#found--">found()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:G">
-<!--   -->
-</a>
-<h2 class="title">G</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.html#gbfield">gbfield</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.html#gbfield">gbfield</a></span> - Variable in class simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.html#gbfieldtype">gbfieldtype</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.html#gbfieldtype">gbfieldtype</a></span> - Variable in class simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#generateLogicalPlan-simpledb.TransactionId-java.lang.String-">generateLogicalPlan(TransactionId, String)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#generateRandomEntries-int-int-int-int-java.util.ArrayList-java.util.ArrayList-">generateRandomEntries(int, int, int, int, ArrayList&lt;Integer&gt;, ArrayList&lt;Integer&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Generate a random set of entries for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#generateRandomEntries-int-int-int-int-int-int-">generateRandomEntries(int, int, int, int, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Generate a random set of entries for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#generateRandomTuples-int-int-int-java.util.Map-java.util.ArrayList-">generateRandomTuples(int, int, int, Map&lt;Integer, Integer&gt;, ArrayList&lt;ArrayList&lt;Integer&gt;&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Generate a random set of tuples for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#generateRandomTuples-int-int-int-int-java.util.Map-java.util.ArrayList-">generateRandomTuples(int, int, int, int, Map&lt;Integer, Integer&gt;, ArrayList&lt;ArrayList&lt;Integer&gt;&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Generate a random set of tuples for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#generateRandomTuples-int-int-int-int-">generateRandomTuples(int, int, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Generate a random set of tuples for testing</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#getAggOp-java.lang.String-">getAggOp(String)</a></span> - Static method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Convert the aggregate operator name s into an Aggregator.op operation.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#getAlias--">getAlias()</a></span> - Method in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#getAlias--">getAlias()</a></span> - Method in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#getBeforeImage--">getBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#getBeforeImage--">getBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#getBeforeImage--">getBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#getBeforeImage--">getBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#getBeforeImage--">getBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Page.html#getBeforeImage--">getBeforeImage()</a></span> - Method in interface simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a></dt>
-<dd>
-<div class="block">Provide a representation of this page before any modifications were made
-        to it.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#getBTreeEntry-int-">getBTreeEntry(int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#getBTreeEntry-int-int-">getBTreeEntry(int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#getBTreeEntry-int-int-int-">getBTreeEntry(int, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#getBTreeTuple-int-">getBTreeTuple(int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#getBTreeTuple-int:A-">getBTreeTuple(int[])</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#getBTreeTuple-java.util.ArrayList-">getBTreeTuple(ArrayList&lt;Integer&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#getBTreeTuple-int-int-">getBTreeTuple(int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#getBufferPool--">getBufferPool()</a></span> - Static method in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>
-<div class="block">Return the buffer pool of the static Database instance</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PlanCache.html#getCard-java.util.Set-">getCard(Set&lt;LogicalJoinNode&gt;)</a></span> - Method in class simpledb.<a href="simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></dt>
-<dd>
-<div class="block">Find the cardinality of the best join order in the cache for the specified plan</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#getCatalog--">getCatalog()</a></span> - Static method in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>
-<div class="block">Return the catalog of the static Database instance</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#getChildId-int-">getChildId(int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">protected method used by the iterator to get the ith child page id out of this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#getChildren--">getChildren()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#getChildren--">getChildren()</a></span> - Method in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#getChildren--">getChildren()</a></span> - Method in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#getChildren--">getChildren()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#getChildren--">getChildren()</a></span> - Method in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#getChildren--">getChildren()</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#getChildren--">getChildren()</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#getChildren--">getChildren()</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#getChildren--">getChildren()</a></span> - Method in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PlanCache.html#getCost-java.util.Set-">getCost(Set&lt;LogicalJoinNode&gt;)</a></span> - Method in class simpledb.<a href="simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></dt>
-<dd>
-<div class="block">Find the cost of the best join order in the cache for the specified plan</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#getDatabaseFile-int-">getDatabaseFile(int)</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>
-<div class="block">Returns the DbFile that can be used to read the contents of the
- specified table.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#getEmptyPage-simpledb.TransactionId-java.util.HashMap-int-">getEmptyPage(TransactionId, HashMap&lt;PageId, Page&gt;, int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Method to encapsulate the process of creating a new page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#getEmptyPageNo-simpledb.TransactionId-java.util.HashMap-">getEmptyPageNo(TransactionId, HashMap&lt;PageId, Page&gt;)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Get the page number of the first empty page in this BTreeFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#getEmptySlot--">getEmptySlot()</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">get the index of the first empty slot</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#getError--">getError()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#getError--">getError()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#getError--">getError()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#getError--">getError()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality()</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IndexPredicate.html#getField--">getField()</a></span> - Method in class simpledb.<a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#getField--">getField()</a></span> - Method in class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#getField-int-">getField(int)</a></span> - Method in class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinPredicate.html#getField1--">getField1()</a></span> - Method in class simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinPredicate.html#getField2--">getField2()</a></span> - Method in class simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#getFieldName-int-">getFieldName(int)</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>
-<div class="block">Gets the (possibly null) field name of the ith field of this TupleDesc.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#getFieldType-int-">getFieldType(int)</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>
-<div class="block">Gets the type of the ith field of this TupleDesc.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#getFile--">getFile()</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Returns the File backing this BTreeFile on disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#getFile--">getFile()</a></span> - Method in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>
-<div class="block">Returns the File backing this HeapFile on disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#getHeaderId--">getHeaderId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">Get the id of the first header page, or null if none exists</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#getHeaderSize--">getHeaderSize()</a></span> - Static method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Computes the number of bytes in the header while saving room for pointers</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#getHeaderSize--">getHeaderSize()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Computes the number of bytes in the header of a B+ internal page with each entry occupying entrySize bytes</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#getHeaderSize--">getHeaderSize()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Computes the number of bytes in the header of a page in a BTreeFile with each tuple occupying tupleSize bytes</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#getHeaderSize--">getHeaderSize()</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Computes the number of bytes in the header of a page in a HeapFile with each tuple occupying tupleSize bytes</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#getHeapTuple-int-">getHeapTuple(int)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#getHeapTuple-int:A-">getHeapTuple(int[])</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#getHeapTuple-int-int-">getHeapTuple(int, int)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#getId--">getId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Returns an ID uniquely identifying this BTreeFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#getId--">getId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#getId--">getId()</a></span> - Method in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#getId--">getId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#getId-int-">getId(int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">There is only one instance of a BTreeRootPtrPage per table.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFile.html#getId--">getId()</a></span> - Method in interface simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb">DbFile</a></dt>
-<dd>
-<div class="block">Returns a unique ID used to identify this DbFile in the Catalog.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#getId--">getId()</a></span> - Method in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>
-<div class="block">Returns an ID uniquely identifying this HeapFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#getId--">getId()</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Page.html#getId--">getId()</a></span> - Method in interface simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a></dt>
-<dd>
-<div class="block">Return the id of this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Transaction.html#getId--">getId()</a></span> - Method in class simpledb.<a href="simpledb/Transaction.html" title="class in simpledb">Transaction</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TransactionId.html#getId--">getId()</a></span> - Method in class simpledb.<a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#getJoinField1Name--">getJoinField1Name()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#getJoinField1Name--">getJoinField1Name()</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#getJoinField2Name--">getJoinField2Name()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#getJoinField2Name--">getJoinField2Name()</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#getJoinPredicate--">getJoinPredicate()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#getJoinPredicate--">getJoinPredicate()</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#getKey--">getKey()</a></span> - Method in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#getKey-int-">getKey(int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">protected method used by the iterator to get the ith key out of this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#getLeftChild--">getLeftChild()</a></span> - Method in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#getLeftSiblingId--">getLeftSiblingId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Get the id of the left sibling of this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Type.html#getLen--">getLen()</a></span> - Method in enum simpledb.<a href="simpledb/Type.html" title="enum in simpledb">Type</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#getLogFile--">getLogFile()</a></span> - Static method in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>
-<div class="block">Return the log file of the static Database instance</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#getLogicalPlan--">getLogicalPlan()</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#getMaxEntries--">getMaxEntries()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Retrieve the maximum number of entries this page can hold.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#getMaxTuples--">getMaxTuples()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Retrieve the maximum number of tuples this page can hold.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#getNextPageId--">getNextPageId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Get the page id of the next header page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#getNumEmptySlots--">getNumEmptySlots()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Returns the number of empty slots on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#getNumEmptySlots--">getNumEmptySlots()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Returns the number of empty slots on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#getNumEmptySlots--">getNumEmptySlots()</a></span> - Method in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>
-<div class="block">Returns the number of empty slots on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#getNumEmptySlots--">getNumEmptySlots()</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Returns the number of empty slots on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#getNumEntries--">getNumEntries()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Returns the number of entries (keys) currently stored on this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#getNumEntriesPerPage--">getNumEntriesPerPage()</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">The number of entries that can fit on a page with integer key fields</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#getNumSlots--">getNumSlots()</a></span> - Static method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Computes the number of slots in the header</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#getNumTuples--">getNumTuples()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Returns the number of tuples currently stored on this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#getNumTuples--">getNumTuples()</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Retrieve the number of tuples on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#getNumTuplesPerPage-int-">getNumTuplesPerPage(int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Get the number of tuples that can fit on a page with the specified number of integer fields</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregator.Op.html#getOp-java.lang.String-">getOp(String)</a></span> - Static method in enum simpledb.<a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></dt>
-<dd>
-<div class="block">Interface to access operations by a string containing an integer
- index for command-line convenience.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregator.Op.html#getOp-int-">getOp(int)</a></span> - Static method in enum simpledb.<a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></dt>
-<dd>
-<div class="block">Interface to access operations by integer value for command-line
- convenience.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IndexPredicate.html#getOp--">getOp()</a></span> - Method in class simpledb.<a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#getOp-java.lang.String-">getOp(String)</a></span> - Static method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#getOp--">getOp()</a></span> - Method in class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.Op.html#getOp-int-">getOp(int)</a></span> - Static method in enum simpledb.<a href="simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></dt>
-<dd>
-<div class="block">Interface to access operations by integer value for command-line
- convenience.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#getOperand--">getOperand()</a></span> - Method in class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinPredicate.html#getOperator--">getOperator()</a></span> - Method in class simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PlanCache.html#getOrder-java.util.Set-">getOrder(Set&lt;LogicalJoinNode&gt;)</a></span> - Method in class simpledb.<a href="simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></dt>
-<dd>
-<div class="block">Find the best join order in the cache for the specified plan</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#getOrderByField--">getOrderByField()</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#getOrderFieldName--">getOrderFieldName()</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#getOutputTupleDesc--">getOutputTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#getPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Permissions-">getPage(TransactionId, HashMap&lt;PageId, Page&gt;, BTreePageId, Permissions)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Method to encapsulate the process of locking/fetching a page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#getPage-simpledb.TransactionId-simpledb.PageId-simpledb.Permissions-">getPage(TransactionId, PageId, Permissions)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Retrieve the specified page with the associated permissions.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#getPageData--">getPageData()</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#getPageData--">getPageData()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#getPageData--">getPageData()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#getPageData--">getPageData()</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">Generates a byte array representing the contents of this root pointer page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#getPageData--">getPageData()</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Page.html#getPageData--">getPageData()</a></span> - Method in interface simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a></dt>
-<dd>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/RecordId.html#getPageId--">getPageId()</a></span> - Method in class simpledb.<a href="simpledb/RecordId.html" title="class in simpledb">RecordId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#getPageSize--">getPageSize()</a></span> - Static method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">Get the page size of root pointer pages</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#getPageSize--">getPageSize()</a></span> - Static method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#getParentId--">getParentId()</a></span> - Method in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>
-<div class="block">Get the parent id of this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#getParentWithEmptySlots-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Field-">getParentWithEmptySlots(TransactionId, HashMap&lt;PageId, Page&gt;, BTreePageId, Field)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Method to encapsulate the process of getting a parent page ready to accept new entries.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#getPhysicalPlan--">getPhysicalPlan()</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#getPredicate--">getPredicate()</a></span> - Method in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#getPrevPageId--">getPrevPageId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Get the page id of the previous header page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#getPrimaryKey-int-">getPrimaryKey(int)</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#getQuery--">getQuery()</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Get the query text associated with this plan via <a href="simpledb/LogicalPlan.html#setQuery-java.lang.String-"><code>LogicalPlan.setQuery(java.lang.String)</code></a>.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#getQueryPlanTree-simpledb.DbIterator-">getQueryPlanTree(DbIterator)</a></span> - Method in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#getRecordId--">getRecordId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#getRecordId--">getRecordId()</a></span> - Method in class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#getRightChild--">getRightChild()</a></span> - Method in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#getRightSiblingId--">getRightSiblingId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Get the id of the right sibling of this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#getRootId--">getRootId()</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">Get the id of the root page in this B+ tree</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#getRootPtrPage-simpledb.TransactionId-java.util.HashMap-">getRootPtrPage(TransactionId, HashMap&lt;PageId, Page&gt;)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Get a read lock on the root pointer page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#getSize--">getSize()</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#getStatsMap--">getStatsMap()</a></span> - Static method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#getStrings-int-java.lang.String-">getStrings(int, String)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#getTableAliasToIdMapping--">getTableAliasToIdMapping()</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#getTableId--">getTableId()</a></span> - Method in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#getTableId-java.lang.String-">getTableId(String)</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>
-<div class="block">Return the id of the table with a specified name,</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPageId.html#getTableId--">getTableId()</a></span> - Method in class simpledb.<a href="simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#getTableId-java.lang.String-">getTableId(String)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Given a table alias, return id of the table object (this id can be supplied to <a href="simpledb/Catalog.html#getDatabaseFile-int-"><code>Catalog.getDatabaseFile(int)</code></a>).</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PageId.html#getTableId--">getTableId()</a></span> - Method in interface simpledb.<a href="simpledb/PageId.html" title="interface in simpledb">PageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#getTableName--">getTableName()</a></span> - Method in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#getTableName-int-">getTableName(int)</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#getTableName--">getTableName()</a></span> - Method in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#getTableStats-java.lang.String-">getTableStats(String)</a></span> - Static method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#getTotalRecords--">getTotalRecords()</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#getTransaction--">getTransaction()</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#getTransactionId--">getTransactionId()</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#getTuple-int-">getTuple(int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">protected method used by the iterator to get the ith tuple out of this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#getTuple-int:A-int-">getTuple(int[], int)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>
-<div class="block">Returns the TupleDesc of this Aggregate.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Returns the TupleDesc of the table stored in this DbFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>
-<div class="block">Returns the TupleDesc with field names from the underlying BTreeFile,
- prefixed with the tableAlias string from the constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#getTupleDesc-int-">getTupleDesc(int)</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>
-<div class="block">Returns the tuple descriptor (schema) of the specified table</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFile.html#getTupleDesc--">getTupleDesc()</a></span> - Method in interface simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb">DbFile</a></dt>
-<dd>
-<div class="block">Returns the TupleDesc of the table stored in this DbFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbIterator.html#getTupleDesc--">getTupleDesc()</a></span> - Method in interface simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dt>
-<dd>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>
-<div class="block">Returns the TupleDesc of the table stored in this DbFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>
-<div class="block">Returns the TupleDesc with field names from the underlying HeapFile,
- prefixed with the tableAlias string from the constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#getTupleDesc--">getTupleDesc()</a></span> - Method in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#getTupleDesc-int-java.lang.String-">getTupleDesc(int, String)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#getTupleDesc-int-">getTupleDesc(int)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Field.html#getType--">getType()</a></span> - Method in interface simpledb.<a href="simpledb/Field.html" title="interface in simpledb">Field</a></dt>
-<dd>
-<div class="block">Returns the type of this field (see <a href="simpledb/Type.html#INT_TYPE"><code>Type.INT_TYPE</code></a> or <a href="simpledb/Type.html#STRING_TYPE"><code>Type.STRING_TYPE</code></a></div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#getType--">getType()</a></span> - Method in class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>
-<div class="block">Return the Type of this field.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#getType--">getType()</a></span> - Method in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#getTypes-int-">getTypes(int)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#getValue--">getValue()</a></span> - Method in class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#getValue--">getValue()</a></span> - Method in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#gfield">gfield</a></span> - Variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#gFieldName">gFieldName</a></span> - Variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#GROUPBY">GROUPBY</a></span> - Static variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#groupByField">groupByField</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#groupField--">groupField()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#groupFieldName--">groupFieldName()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.html#groups">groups</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.html#groups">groups</a></span> - Variable in class simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.AggregateFields.html#groupVal">groupVal</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.AggregateFields.html#groupVal">groupVal</a></span> - Variable in class simpledb.<a href="simpledb/StringAggregator.AggregateFields.html" title="class in simpledb">StringAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:H">
-<!--   -->
-</a>
-<h2 class="title">H</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#handleDeleteStatement-Zql.ZDelete-simpledb.TransactionId-">handleDeleteStatement(ZDelete, TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#handleInsertStatement-Zql.ZInsert-simpledb.TransactionId-">handleInsertStatement(ZInsert, TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#handleMinOccupancyInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-simpledb.BTreeEntry-">handleMinOccupancyInternalPage(TransactionId, HashMap&lt;PageId, Page&gt;, BTreeInternalPage, BTreeInternalPage, BTreeEntry, BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Handle the case when an internal page becomes less than half full due to deletions.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#handleMinOccupancyLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-simpledb.BTreeEntry-">handleMinOccupancyLeafPage(TransactionId, HashMap&lt;PageId, Page&gt;, BTreeLeafPage, BTreeInternalPage, BTreeEntry, BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Handle the case when a leaf page becomes less than half full due to deletions.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#handleMinOccupancyPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-">handleMinOccupancyPage(TransactionId, HashMap&lt;PageId, Page&gt;, BTreePage)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Handle the case when a B+ tree page becomes less than half full due to deletions.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#handleQueryStatement-Zql.ZQuery-simpledb.TransactionId-">handleQueryStatement(ZQuery, TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#handleTransactStatement-Zql.ZTransactStmt-">handleTransactStatement(ZTransactStmt)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#hasAgg">hasAgg</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#HASH_JOIN">HASH_JOIN</a></span> - Static variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#hashCode--">hashCode()</a></span> - Method in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Field.html#hashCode--">hashCode()</a></span> - Method in interface simpledb.<a href="simpledb/Field.html" title="interface in simpledb">Field</a></dt>
-<dd>
-<div class="block">Hash code.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPageId.html#hashCode--">hashCode()</a></span> - Method in class simpledb.<a href="simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#hashCode--">hashCode()</a></span> - Method in class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#hashCode--">hashCode()</a></span> - Method in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalSubplanJoinNode.html#hashCode--">hashCode()</a></span> - Method in class simpledb.<a href="simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PageId.html#hashCode--">hashCode()</a></span> - Method in interface simpledb.<a href="simpledb/PageId.html" title="interface in simpledb">PageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/RecordId.html#hashCode--">hashCode()</a></span> - Method in class simpledb.<a href="simpledb/RecordId.html" title="class in simpledb">RecordId</a></dt>
-<dd>
-<div class="block">You should implement the hashCode() so that two equal RecordId instances
- (with respect to equals()) have the same hashCode().</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#hashCode--">hashCode()</a></span> - Method in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TransactionId.html#hashCode--">hashCode()</a></span> - Method in class simpledb.<a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#hashCode--">hashCode()</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/HashEquiJoin.html" title="class in simpledb"><span class="typeNameLink">HashEquiJoin</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">The Join operator implements the relational join operation.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#HashEquiJoin-simpledb.JoinPredicate-simpledb.DbIterator-simpledb.DbIterator-">HashEquiJoin(JoinPredicate, DbIterator, DbIterator)</a></span> - Constructor for class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/AbstractDbFileIterator.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageIterator.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageIterator.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb">BTreeLeafPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageReverseIterator.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb">BTreeLeafPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFileIterator.html#hasNext--">hasNext()</a></span> - Method in interface simpledb.<a href="simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbIterator.html#hasNext--">hasNext()</a></span> - Method in interface simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dt>
-<dd>
-<div class="block">Returns true if the iterator has more tuples.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#hasNext--">hasNext()</a></span> - Method in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#hasOrderBy">hasOrderBy</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#hasPkey-java.util.Vector-">hasPkey(Vector&lt;LogicalJoinNode&gt;)</a></span> - Method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Return true if a primary key field is joined by one of the joins in
- joinlist</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#header">header</a></span> - Variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#header">header</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#header">header</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#HEADER">HEADER</a></span> - Static variable in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#header">header</a></span> - Variable in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#header">header</a></span> - Variable in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/HeapFile.html" title="class in simpledb"><span class="typeNameLink">HeapFile</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">HeapFile is an implementation of a DbFile that stores a collection of tuples
- in no particular order.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#HeapFile-java.io.File-simpledb.TupleDesc-">HeapFile(File, TupleDesc)</a></span> - Constructor for class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>
-<div class="block">Constructs a heap file backed by the specified file.</div>
-</dd>
-<dt><a href="simpledb/HeapFileEncoder.html" title="class in simpledb"><span class="typeNameLink">HeapFileEncoder</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">HeapFileEncoder reads a comma delimited text file or accepts
- an array of tuples and converts it to
- pages of binary data in the appropriate format for simpledb heap pages
- Pages are padded out to a specified length, and written consecutive in a
- data file.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFileEncoder.html#HeapFileEncoder--">HeapFileEncoder()</a></span> - Constructor for class simpledb.<a href="simpledb/HeapFileEncoder.html" title="class in simpledb">HeapFileEncoder</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/HeapPage.html" title="class in simpledb"><span class="typeNameLink">HeapPage</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Each instance of HeapPage stores data for one page of HeapFiles and 
- implements the Page interface that is used by BufferPool.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#HeapPage-simpledb.HeapPageId-byte:A-">HeapPage(HeapPageId, byte[])</a></span> - Constructor for class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Create a HeapPage from a set of bytes of data read from disk.</div>
-</dd>
-<dt><a href="simpledb/HeapPageId.html" title="class in simpledb"><span class="typeNameLink">HeapPageId</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Unique identifier for HeapPage objects.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPageId.html#HeapPageId-int-int-">HeapPageId(int, int)</a></span> - Constructor for class simpledb.<a href="simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#height">height</a></span> - Variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringHistogram.html#hist">hist</a></span> - Variable in class simpledb.<a href="simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#holdsLock-simpledb.TransactionId-simpledb.PageId-">holdsLock(TransactionId, PageId)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Return true if the specified transaction has a lock on the specified page</div>
-</dd>
-</dl>
-<a name="I:I">
-<!--   -->
-</a>
-<h2 class="title">I</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#i">i</a></span> - Variable in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#INDEX_SIZE">INDEX_SIZE</a></span> - Static variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#INDEX_SIZE">INDEX_SIZE</a></span> - Static variable in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/IndexDbIterator.html" title="interface in simpledb"><span class="typeNameLink">IndexDbIterator</span></a> - Interface in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">IndexDBIterator is the interface that index access methods
-    implement in SimpleDb.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#indexIterator-simpledb.TransactionId-simpledb.IndexPredicate-">indexIterator(TransactionId, IndexPredicate)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">get the specified tuples from the file based on its IndexPredicate value on
- behalf of the specified transaction.</div>
-</dd>
-<dt><a href="simpledb/IndexPredicate.html" title="class in simpledb"><span class="typeNameLink">IndexPredicate</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">IndexPredicate compares a field which has index on it against a given value</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IndexPredicate.html#IndexPredicate-simpledb.Predicate.Op-simpledb.Field-">IndexPredicate(Predicate.Op, Field)</a></span> - Constructor for class simpledb.<a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#init--">init()</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Initially mark all slots in the header used.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#init-simpledb.BTreeFile-java.util.concurrent.BlockingQueue-">init(BTreeFile, BlockingQueue&lt;ArrayList&lt;Integer&gt;&gt;)</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#init-simpledb.BTreeFile-int:A-java.util.concurrent.BlockingQueue-">init(BTreeFile, int[], BlockingQueue&lt;ArrayList&lt;Integer&gt;&gt;)</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Insert.html" title="class in simpledb"><span class="typeNameLink">Insert</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Inserts tuples read from the child operator into the tableId specified in the
- constructor</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#Insert-simpledb.TransactionId-simpledb.DbIterator-int-">Insert(TransactionId, DbIterator, int)</a></span> - Constructor for class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#insertedTuples">insertedTuples</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#insertedTuples">insertedTuples</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#insertEntry-simpledb.BTreeEntry-">insertEntry(BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Adds the specified entry to the page; the entry's recordId should be updated to 
- reflect that it is now stored on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#insertTuple-simpledb.TransactionId-simpledb.Tuple-">insertTuple(TransactionId, Tuple)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Insert a tuple into this BTreeFile, keeping the tuples in sorted order.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#insertTuple-simpledb.Tuple-">insertTuple(Tuple)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Adds the specified tuple to the page such that all records remain in sorted order;  
- the tuple should be updated to reflect
-  that it is now stored on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#insertTuple-simpledb.TransactionId-int-simpledb.Tuple-">insertTuple(TransactionId, int, Tuple)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Add a tuple to the specified table on behalf of transaction tid.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFile.html#insertTuple-simpledb.TransactionId-simpledb.Tuple-">insertTuple(TransactionId, Tuple)</a></span> - Method in interface simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb">DbFile</a></dt>
-<dd>
-<div class="block">Inserts the specified tuple to the file on behalf of transaction.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#insertTuple-simpledb.TransactionId-simpledb.Tuple-">insertTuple(TransactionId, Tuple)</a></span> - Method in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#insertTuple-simpledb.Tuple-">insertTuple(Tuple)</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Adds the specified tuple to the page;  the tuple should be updated to reflect
-  that it is now stored on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#instantiateJoin-simpledb.LogicalJoinNode-simpledb.DbIterator-simpledb.DbIterator-">instantiateJoin(LogicalJoinNode, DbIterator, DbIterator)</a></span> - Static method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Return best iterator for computing a given logical join, given the
- specified statistics, and the provided left and right subplans.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#INT_SIZE">INT_SIZE</a></span> - Static variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/IntegerAggregator.html" title="class in simpledb"><span class="typeNameLink">IntegerAggregator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Knows how to compute some aggregate over a set of IntFields.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.html#IntegerAggregator-int-simpledb.Type-int-simpledb.Aggregator.Op-">IntegerAggregator(int, Type, int, Aggregator.Op)</a></span> - Constructor for class simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dt>
-<dd>
-<div class="block">Aggregate constructor</div>
-</dd>
-<dt><a href="simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">IntegerAggregator.AggregateFields</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A helper struct to store accumulated aggregate values.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#interactive">interactive</a></span> - Variable in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#INTERNAL">INTERNAL</a></span> - Static variable in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/IntField.html" title="class in simpledb"><span class="typeNameLink">IntField</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Instance of Field that stores a single integer.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#IntField-int-">IntField(int)</a></span> - Constructor for class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><a href="simpledb/IntHistogram.html" title="class in simpledb"><span class="typeNameLink">IntHistogram</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A class to represent a fixed-width histogram over a single integer-based field.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntHistogram.html#IntHistogram-int-int-int-">IntHistogram(int, int, int)</a></span> - Constructor for class simpledb.<a href="simpledb/IntHistogram.html" title="class in simpledb">IntHistogram</a></dt>
-<dd>
-<div class="block">Create a new IntHistogram.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#inUserTrans">inUserTrans</a></span> - Variable in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#IOCOSTPERPAGE">IOCOSTPERPAGE</a></span> - Static variable in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#ipred">ipred</a></span> - Variable in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#ipred">ipred</a></span> - Variable in class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#isASC--">isASC()</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#isDirty--">isDirty()</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#isDirty--">isDirty()</a></span> - Method in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>
-<div class="block">Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#isDirty--">isDirty()</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#isDirty--">isDirty()</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Page.html#isDirty--">isDirty()</a></span> - Method in interface simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a></dt>
-<dd>
-<div class="block">Get the id of the transaction that last dirtied this page, or null if the page is clean..</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Debug.html#isEnabled-int-">isEnabled(int)</a></span> - Static method in class simpledb.<a href="simpledb/Debug.html" title="class in simpledb">Debug</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Debug.html#isEnabled--">isEnabled()</a></span> - Static method in class simpledb.<a href="simpledb/Debug.html" title="class in simpledb">Debug</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#isOpen">isOpen</a></span> - Variable in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#isPkey-java.lang.String-java.lang.String-">isPkey(String, String)</a></span> - Method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Return true if field is a primary key of the specified table, false
- otherwise</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#isSlotUsed-int-">isSlotUsed(int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Returns true if the page of the BTreeFile associated with slot i is used</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#isSlotUsed-int-">isSlotUsed(int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#isSlotUsed-int-">isSlotUsed(int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#isSlotUsed-int-">isSlotUsed(int)</a></span> - Method in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#isSlotUsed-int-">isSlotUsed(int)</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#it">it</a></span> - Variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileIterator.html#it">it</a></span> - Variable in class simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#it">it</a></span> - Variable in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#it">it</a></span> - Variable in class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#it">it</a></span> - Variable in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#it">it</a></span> - Variable in class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#item">item</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregator.html#iterator--">iterator()</a></span> - Method in interface simpledb.<a href="simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></dt>
-<dd>
-<div class="block">Create a DbIterator over group aggregate results.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#iterator-simpledb.TransactionId-">iterator(TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Get an iterator for all tuples in this B+ tree file in sorted order.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#iterator--">iterator()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#iterator--">iterator()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFile.html#iterator-simpledb.TransactionId-">iterator(TransactionId)</a></span> - Method in interface simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb">DbFile</a></dt>
-<dd>
-<div class="block">Returns an iterator over all the tuples stored in this DbFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#iterator-simpledb.TransactionId-">iterator(TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#iterator--">iterator()</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.html#iterator--">iterator()</a></span> - Method in class simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dt>
-<dd>
-<div class="block">Create a DbIterator over group aggregate results.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.html#iterator--">iterator()</a></span> - Method in class simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dt>
-<dd>
-<div class="block">Create a DbIterator over group aggregate results.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#iterator--">iterator()</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:J">
-<!--   -->
-</a>
-<h2 class="title">J</h2>
-<dl>
-<dt><a href="simpledb/Join.html" title="class in simpledb"><span class="typeNameLink">Join</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">The Join operator implements the relational join operation.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#Join-simpledb.JoinPredicate-simpledb.DbIterator-simpledb.DbIterator-">Join(JoinPredicate, DbIterator, DbIterator)</a></span> - Constructor for class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#JOIN">JOIN</a></span> - Static variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/JoinOptimizer.html" title="class in simpledb"><span class="typeNameLink">JoinOptimizer</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">The JoinOptimizer class is responsible for ordering a series of joins
- optimally, and for selecting the best instantiation of a join for a given
- logical plan.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#JoinOptimizer-simpledb.LogicalPlan-java.util.Vector-">JoinOptimizer(LogicalPlan, Vector&lt;LogicalJoinNode&gt;)</a></span> - Constructor for class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Constructor</div>
-</dd>
-<dt><a href="simpledb/JoinPredicate.html" title="class in simpledb"><span class="typeNameLink">JoinPredicate</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">JoinPredicate compares fields of two tuples using a predicate.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinPredicate.html#JoinPredicate-int-simpledb.Predicate.Op-int-">JoinPredicate(int, Predicate.Op, int)</a></span> - Constructor for class simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></dt>
-<dd>
-<div class="block">Constructor -- create a new predicate over two fields of two tuples.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#joins">joins</a></span> - Variable in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#joins">joins</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:K">
-<!--   -->
-</a>
-<h2 class="title">K</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#key">key</a></span> - Variable in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">The key of this entry</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#key">key</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#keyField">keyField</a></span> - Variable in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#keyField--">keyField()</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Returns the index of the field that this B+ tree is keyed on</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.TupleComparator.html#keyField">keyField</a></span> - Variable in class simpledb.<a href="simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb">BTreeFileEncoder.TupleComparator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#keyField">keyField</a></span> - Variable in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#keys">keys</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:L">
-<!--   -->
-</a>
-<h2 class="title">L</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#lastEmptyPage">lastEmptyPage</a></span> - Variable in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#LEAF">LEAF</a></span> - Static variable in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#leftChild">leftChild</a></span> - Variable in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">The left child page id</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#leftChild">leftChild</a></span> - Variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.SubtreeSummary.html#leftmostId">leftmostId</a></span> - Variable in class simpledb.<a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#leftSibling">leftSibling</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#listIt">listIt</a></span> - Variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#listToString-java.util.ArrayList-">listToString(ArrayList&lt;Integer&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#loadMap--">loadMap()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#loadSchema-java.lang.String-">loadSchema(String)</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>
-<div class="block">Reads the schema from a file and creates the appropriate tables in the database.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Debug.html#log-int-java.lang.String-java.lang.Object...-">log(int, String, Object...)</a></span> - Static method in class simpledb.<a href="simpledb/Debug.html" title="class in simpledb">Debug</a></dt>
-<dd>
-<div class="block">Log message if the log level >= level.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Debug.html#log-java.lang.String-java.lang.Object...-">log(String, Object...)</a></span> - Static method in class simpledb.<a href="simpledb/Debug.html" title="class in simpledb">Debug</a></dt>
-<dd>
-<div class="block">Logs message at the default log level.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#logAbort-simpledb.TransactionId-">logAbort(TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Write an abort record to the log for the specified tid, force
-        the log to disk, and perform a rollback</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#logCheckpoint--">logCheckpoint()</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Checkpoint the log and write a checkpoint record.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#logCommit-simpledb.TransactionId-">logCommit(TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Write a commit record to disk for the specified tid,
-        and force the log to disk.</div>
-</dd>
-<dt><a href="simpledb/LogFile.html" title="class in simpledb"><span class="typeNameLink">LogFile</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block"> The format of the log file is as follows:
-
-
-
- The first long integer of the file represents the offset of the
-last written checkpoint, or -1 if there are no checkpoints
-
- All additional data in the log consists of log records.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#LogFile-java.io.File-">LogFile(File)</a></span> - Constructor for class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#logFile">logFile</a></span> - Variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#LOGFILENAME">LOGFILENAME</a></span> - Static variable in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/LogicalFilterNode.html" title="class in simpledb"><span class="typeNameLink">LogicalFilterNode</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A LogicalFilterNode represents the parameters of a filter in the WHERE clause of a query.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalFilterNode.html#LogicalFilterNode-java.lang.String-java.lang.String-simpledb.Predicate.Op-java.lang.String-">LogicalFilterNode(String, String, Predicate.Op, String)</a></span> - Constructor for class simpledb.<a href="simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/LogicalJoinNode.html" title="class in simpledb"><span class="typeNameLink">LogicalJoinNode</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A LogicalJoinNode represens the state needed of a join of two
- tables in a LogicalQueryPlan</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#LogicalJoinNode--">LogicalJoinNode()</a></span> - Constructor for class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#LogicalJoinNode-java.lang.String-java.lang.String-java.lang.String-java.lang.String-simpledb.Predicate.Op-">LogicalJoinNode(String, String, String, String, Predicate.Op)</a></span> - Constructor for class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/LogicalPlan.html" title="class in simpledb"><span class="typeNameLink">LogicalPlan</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">LogicalPlan represents a logical query plan that has been through
- the parser and is ready to be processed by the optimizer.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#LogicalPlan--">LogicalPlan()</a></span> - Constructor for class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Constructor -- generate an empty logical plan</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#logicalPlan">logicalPlan</a></span> - Variable in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/LogicalScanNode.html" title="class in simpledb"><span class="typeNameLink">LogicalScanNode</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A LogicalScanNode represents table in the FROM list in a
- LogicalQueryPlan</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalScanNode.html#LogicalScanNode-int-java.lang.String-">LogicalScanNode(int, String)</a></span> - Constructor for class simpledb.<a href="simpledb/LogicalScanNode.html" title="class in simpledb">LogicalScanNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/LogicalSelectListNode.html" title="class in simpledb"><span class="typeNameLink">LogicalSelectListNode</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A LogicalSelectListNode represents a clause in the select list in
- a LogicalQueryPlan</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalSelectListNode.html#LogicalSelectListNode-java.lang.String-java.lang.String-">LogicalSelectListNode(String, String)</a></span> - Constructor for class simpledb.<a href="simpledb/LogicalSelectListNode.html" title="class in simpledb">LogicalSelectListNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/LogicalSubplanJoinNode.html" title="class in simpledb"><span class="typeNameLink">LogicalSubplanJoinNode</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A LogicalSubplanJoinNode represens the state needed of a join of a
- table to a subplan in a LogicalQueryPlan -- inherits state from
- <a href="simpledb/LogicalJoinNode.html" title="class in simpledb"><code>LogicalJoinNode</code></a>; t2 and f2 should always be null</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalSubplanJoinNode.html#LogicalSubplanJoinNode-java.lang.String-java.lang.String-simpledb.DbIterator-simpledb.Predicate.Op-">LogicalSubplanJoinNode(String, String, DbIterator, Predicate.Op)</a></span> - Constructor for class simpledb.<a href="simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#logTruncate--">logTruncate()</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Truncate any unneeded portion of the log to reduce its space
-        consumption</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#logWrite-simpledb.TransactionId-simpledb.Page-simpledb.Page-">logWrite(TransactionId, Page, Page)</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Write an UPDATE record to disk for the specified tid and page
-        (with provided         before and after images.)</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#logXactionBegin-simpledb.TransactionId-">logXactionBegin(TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Write a BEGIN record for the specified transaction</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#LONG_SIZE">LONG_SIZE</a></span> - Static variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:M">
-<!--   -->
-</a>
-<h2 class="title">M</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SimpleDb.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class simpledb.<a href="simpledb/SimpleDb.html" title="class in simpledb">SimpleDb</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#map">map</a></span> - Variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#MAP_SIZE">MAP_SIZE</a></span> - Static variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#markDirty-boolean-simpledb.TransactionId-">markDirty(boolean, TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Marks this page as dirty/not dirty and record that transaction
- that did the dirtying</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#markDirty-boolean-simpledb.TransactionId-">markDirty(boolean, TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>
-<div class="block">Marks this page as dirty/not dirty and record that transaction
- that did the dirtying</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#markDirty-boolean-simpledb.TransactionId-">markDirty(boolean, TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#markDirty-boolean-simpledb.TransactionId-">markDirty(boolean, TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Marks this page as dirty/not dirty and record that transaction
- that did the dirtying</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Page.html#markDirty-boolean-simpledb.TransactionId-">markDirty(boolean, TransactionId)</a></span> - Method in interface simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a></dt>
-<dd>
-<div class="block">Set the dirty state of this page as dirtied by a particular transaction</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#markSlotUsed-int-boolean-">markSlotUsed(int, boolean)</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Abstraction to mark a page of the BTreeFile used or unused</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#markSlotUsed-int-boolean-">markSlotUsed(int, boolean)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Abstraction to fill or clear a slot on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#markSlotUsed-int-boolean-">markSlotUsed(int, boolean)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Abstraction to fill or clear a slot on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#markSlotUsed-int-boolean-">markSlotUsed(int, boolean)</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Abstraction to fill or clear a slot on this page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.AggregateFields.html#max">max</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#MAX_RAND_VALUE">MAX_RAND_VALUE</a></span> - Static variable in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#maxSize">maxSize</a></span> - Variable in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringHistogram.html#maxVal--">maxVal()</a></span> - Method in class simpledb.<a href="simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#merge-simpledb.TupleDesc-simpledb.TupleDesc-">merge(TupleDesc, TupleDesc)</a></span> - Static method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>
-<div class="block">Merge two TupleDescs into one, with td1.numFields + td2.numFields fields,
- with the first td1.numFields coming from td1 and the remaining from td2.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#mergeInternalPages-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">mergeInternalPages(TransactionId, HashMap&lt;PageId, Page&gt;, BTreeInternalPage, BTreeInternalPage, BTreeInternalPage, BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Merge two internal pages by moving all entries from the right page to the left page 
- and "pulling down" the corresponding key from the parent entry.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#mergeLeafPages-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">mergeLeafPages(TransactionId, HashMap&lt;PageId, Page&gt;, BTreeLeafPage, BTreeLeafPage, BTreeInternalPage, BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Merge two leaf pages by moving all tuples from the right page to the left page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregator.html#mergeTupleIntoGroup-simpledb.Tuple-">mergeTupleIntoGroup(Tuple)</a></span> - Method in interface simpledb.<a href="simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></dt>
-<dd>
-<div class="block">Merge a new tuple into the aggregate for a distinct group value;
- creates a new group aggregate result if the group value has not yet
- been encountered.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.html#mergeTupleIntoGroup-simpledb.Tuple-">mergeTupleIntoGroup(Tuple)</a></span> - Method in class simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dt>
-<dd>
-<div class="block">Merge a new tuple into the aggregate, grouping as indicated in the
- constructor</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.html#mergeTupleIntoGroup-simpledb.Tuple-">mergeTupleIntoGroup(Tuple)</a></span> - Method in class simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dt>
-<dd>
-<div class="block">Merge a new tuple into the aggregate, grouping as indicated in the constructor</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.AggregateFields.html#min">min</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringHistogram.html#minVal--">minVal()</a></span> - Method in class simpledb.<a href="simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#moveEntry-int-int-">moveEntry(int, int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Move an entry from one slot to another slot, and update the corresponding
- headers</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#moveRecord-int-int-">moveRecord(int, int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Move a record from one slot to another slot, and update the corresponding
- headers and RecordId</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TransactionId.html#myid">myid</a></span> - Variable in class simpledb.<a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#myTd">myTd</a></span> - Variable in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:N">
-<!--   -->
-</a>
-<h2 class="title">N</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#nameOfAggregatorOp-simpledb.Aggregator.Op-">nameOfAggregatorOp(Aggregator.Op)</a></span> - Static method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/AbstractDbFileIterator.html#next">next</a></span> - Variable in class simpledb.<a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/AbstractDbFileIterator.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageIterator.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageIterator.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb">BTreeLeafPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageReverseIterator.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb">BTreeLeafPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFileIterator.html#next--">next()</a></span> - Method in interface simpledb.<a href="simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></dt>
-<dd>
-<div class="block">Gets the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbIterator.html#next--">next()</a></span> - Method in interface simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dt>
-<dd>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#next">next</a></span> - Variable in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>
-<div class="block">Returns the next tuple, or throws NoSuchElementException if the iterator
- is closed.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>
-<div class="block">Gets the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#next--">next()</a></span> - Method in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#nextPage">nextPage</a></span> - Variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageIterator.html#nextToReturn">nextToReturn</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#nextToReturn">nextToReturn</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageIterator.html#nextToReturn">nextToReturn</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb">BTreeLeafPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageReverseIterator.html#nextToReturn">nextToReturn</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb">BTreeLeafPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#NO_CHECKPOINT_ID">NO_CHECKPOINT_ID</a></span> - Static variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregator.html#NO_GROUPING">NO_GROUPING</a></span> - Static variable in interface simpledb.<a href="simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#NUM_HIST_BINS">NUM_HIST_BINS</a></span> - Static variable in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>
-<div class="block">Number of bins for the histogram.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#numFields--">numFields()</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#numPages--">numPages()</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Returns the number of pages in this BTreeFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#numPages--">numPages()</a></span> - Method in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>
-<div class="block">Returns the number of pages in this HeapFile.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#numSlots">numSlots</a></span> - Variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#numSlots">numSlots</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#numSlots">numSlots</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#numSlots">numSlots</a></span> - Variable in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:O">
-<!--   -->
-</a>
-<h2 class="title">O</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#oByAsc">oByAsc</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#oByField">oByField</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#oldData">oldData</a></span> - Variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#oldData">oldData</a></span> - Variable in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#oldData">oldData</a></span> - Variable in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#oldData">oldData</a></span> - Variable in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#oldDataLock">oldDataLock</a></span> - Variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#oldDataLock">oldDataLock</a></span> - Variable in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#oldDataLock">oldDataLock</a></span> - Variable in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregator.Op.html#Op--">Op()</a></span> - Constructor for enum simpledb.<a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IndexPredicate.html#op">op</a></span> - Variable in class simpledb.<a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinPredicate.html#op">op</a></span> - Variable in class simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#op">op</a></span> - Variable in class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.Op.html#Op--">Op()</a></span> - Constructor for enum simpledb.<a href="simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#op">op</a></span> - Variable in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileIterator.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></dt>
-<dd>
-<div class="block">Open this iterator by getting an iterator on the first leaf page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>
-<div class="block">Open this iterator by getting an iterator on the first leaf page applicable
- for the given predicate operation</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFileIterator.html#open--">open()</a></span> - Method in interface simpledb.<a href="simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></dt>
-<dd>
-<div class="block">Opens the iterator</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbIterator.html#open--">open()</a></span> - Method in interface simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dt>
-<dd>
-<div class="block">Opens the iterator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IndexDbIterator.html#open-simpledb.IndexPredicate-">open(IndexPredicate)</a></span> - Method in interface simpledb.<a href="simpledb/IndexDbIterator.html" title="interface in simpledb">IndexDbIterator</a></dt>
-<dd>
-<div class="block">Open the access method such that when getNext is called, it
-        iterates through the tuples that satisfy ipred.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#open">open</a></span> - Variable in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#open--">open()</a></span> - Method in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#openBTreeFile-int-java.io.File-int-">openBTreeFile(int, File, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>
-<div class="block">Opens a BTreeFile and adds it to the catalog.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#openBTreeFile-int-java.lang.String-java.io.File-int-">openBTreeFile(int, String, File, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#openHeapFile-int-java.io.File-">openHeapFile(int, File)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>
-<div class="block">Opens a HeapFile and adds it to the catalog.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#openHeapFile-int-java.lang.String-java.io.File-">openHeapFile(int, String, File)</a></span> - Static method in class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#operand">operand</a></span> - Variable in class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Operator.html" title="class in simpledb"><span class="typeNameLink">Operator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Abstract class for implementing operators.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#Operator--">Operator()</a></span> - Constructor for class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/OperatorCardinality.html" title="class in simpledb"><span class="typeNameLink">OperatorCardinality</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A utility class, which computes the estimated cardinalities of an operator
- tree.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OperatorCardinality.html#OperatorCardinality--">OperatorCardinality()</a></span> - Constructor for class simpledb.<a href="simpledb/OperatorCardinality.html" title="class in simpledb">OperatorCardinality</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/OrderBy.html" title="class in simpledb"><span class="typeNameLink">OrderBy</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">OrderBy is an operator that implements a relational ORDER BY.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#OrderBy-int-boolean-simpledb.DbIterator-">OrderBy(int, boolean, DbIterator)</a></span> - Constructor for class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>
-<div class="block">Creates a new OrderBy node over the tuples from the iterator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#ORDERBY">ORDERBY</a></span> - Static variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#orderByField">orderByField</a></span> - Variable in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#orderByFieldName">orderByFieldName</a></span> - Variable in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#orderJoins-java.util.HashMap-java.util.HashMap-boolean-">orderJoins(HashMap&lt;String, TableStats&gt;, HashMap&lt;String, Double&gt;, boolean)</a></span> - Method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Compute a logical, reasonably efficient join on the specified tables.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#outFieldIds">outFieldIds</a></span> - Variable in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:P">
-<!--   -->
-</a>
-<h2 class="title">P</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageIterator.html#p">p</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#p">p</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageIterator.html#p">p</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb">BTreeLeafPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageReverseIterator.html#p">p</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb">BTreeLeafPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#p">p</a></span> - Variable in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalFilterNode.html#p">p</a></span> - Variable in class simpledb.<a href="simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a></dt>
-<dd>
-<div class="block">The predicate in the filter</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#p">p</a></span> - Variable in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>
-<div class="block">The join predicate</div>
-</dd>
-<dt><a href="simpledb/Page.html" title="interface in simpledb"><span class="typeNameLink">Page</span></a> - Interface in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Page is the interface used to represent pages that are resident in the
- BufferPool.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#PAGE_SIZE">PAGE_SIZE</a></span> - Static variable in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#PAGE_SIZE">PAGE_SIZE</a></span> - Static variable in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Bytes per page, including header.</div>
-</dd>
-<dt><a href="simpledb/PageId.html" title="interface in simpledb"><span class="typeNameLink">PageId</span></a> - Interface in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">PageId is an interface to a specific page of a specific table.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#pageNumber--">pageNumber()</a></span> - Method in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPageId.html#pageNumber--">pageNumber()</a></span> - Method in class simpledb.<a href="simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PageId.html#pageNumber--">pageNumber()</a></span> - Method in interface simpledb.<a href="simpledb/PageId.html" title="interface in simpledb">PageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#pageSize">pageSize</a></span> - Static variable in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#parent">parent</a></span> - Variable in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Type.html#parse-java.io.DataInputStream-">parse(DataInputStream)</a></span> - Method in enum simpledb.<a href="simpledb/Type.html" title="enum in simpledb">Type</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#parseQueryLogicalPlan-simpledb.TransactionId-Zql.ZQuery-">parseQueryLogicalPlan(TransactionId, ZQuery)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Parser.html" title="class in simpledb"><span class="typeNameLink">Parser</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#Parser--">Parser()</a></span> - Constructor for class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/ParsingException.html" title="class in simpledb"><span class="typeNameLink">ParsingException</span></a> - Exception in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/ParsingException.html#ParsingException-java.lang.String-">ParsingException(String)</a></span> - Constructor for exception simpledb.<a href="simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/ParsingException.html#ParsingException-java.lang.Exception-">ParsingException(Exception)</a></span> - Constructor for exception simpledb.<a href="simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Permissions.html" title="class in simpledb"><span class="typeNameLink">Permissions</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Class representing requested permissions to a relation/file.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Permissions.html#Permissions-int-">Permissions(int)</a></span> - Constructor for class simpledb.<a href="simpledb/Permissions.html" title="class in simpledb">Permissions</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Permissions.html#permLevel">permLevel</a></span> - Variable in class simpledb.<a href="simpledb/Permissions.html" title="class in simpledb">Permissions</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#pgcateg">pgcateg</a></span> - Variable in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#pgcateg--">pgcateg()</a></span> - Method in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#pgNo">pgNo</a></span> - Variable in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#physicalPlan-simpledb.TransactionId-java.util.Map-boolean-">physicalPlan(TransactionId, Map&lt;String, TableStats&gt;, boolean)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Convert this LogicalPlan into a physicalPlan represented by a <a href="simpledb/DbIterator.html" title="interface in simpledb"><code>DbIterator</code></a>.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#pid">pid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#pid">pid</a></span> - Variable in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#pid">pid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#pid">pid</a></span> - Variable in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/CostCard.html#plan">plan</a></span> - Variable in class simpledb.<a href="simpledb/CostCard.html" title="class in simpledb">CostCard</a></dt>
-<dd>
-<div class="block">The optimal subplan</div>
-</dd>
-<dt><a href="simpledb/PlanCache.html" title="class in simpledb"><span class="typeNameLink">PlanCache</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A PlanCache is a helper class that can be used to store the best
- way to order a given set of joins</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PlanCache.html#PlanCache--">PlanCache()</a></span> - Constructor for class simpledb.<a href="simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#preAppend--">preAppend()</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#pred">pred</a></span> - Variable in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#pred">pred</a></span> - Variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#pred">pred</a></span> - Variable in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Predicate.html" title="class in simpledb"><span class="typeNameLink">Predicate</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Predicate compares tuples to a specified Field value.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#Predicate-int-simpledb.Predicate.Op-simpledb.Field-">Predicate(int, Predicate.Op, Field)</a></span> - Constructor for class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><a href="simpledb/Predicate.Op.html" title="enum in simpledb"><span class="typeNameLink">Predicate.Op</span></a> - Enum in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Constants used for return codes in Field.compare</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageIterator.html#prevChildId">prevChildId</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#prevPage">prevPage</a></span> - Variable in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#print--">print()</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Print out a human readable represenation of the log</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinOptimizer.html#printJoins-java.util.Vector-simpledb.PlanCache-java.util.HashMap-java.util.HashMap-">printJoins(Vector&lt;LogicalJoinNode&gt;, PlanCache, HashMap&lt;String, TableStats&gt;, HashMap&lt;String, Double&gt;)</a></span> - Method in class simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></dt>
-<dd>
-<div class="block">Helper function to display a Swing window with a tree representation of
- the specified list of joins.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#printQueryPlanTree-simpledb.DbIterator-java.io.PrintStream-">printQueryPlanTree(DbIterator, PrintStream)</a></span> - Method in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#printTree-simpledb.QueryPlanVisualizer.SubTreeDescriptor-char:A-int-">printTree(QueryPlanVisualizer.SubTreeDescriptor, char[], int)</a></span> - Method in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#processed">processed</a></span> - Variable in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#processed">processed</a></span> - Variable in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#processExpression-simpledb.TransactionId-Zql.ZExpression-simpledb.LogicalPlan-">processExpression(TransactionId, ZExpression, LogicalPlan)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#processList--">processList()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>
-<div class="block">Returns the next tuple generated by the join, or null if there are no
- more tuples.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#processNextStatement-java.lang.String-">processNextStatement(String)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#processNextStatement-java.io.InputStream-">processNextStatement(InputStream)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Project.html" title="class in simpledb"><span class="typeNameLink">Project</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Project is an operator that implements a relational projection.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#Project-java.util.ArrayList-java.util.ArrayList-simpledb.DbIterator-">Project(ArrayList&lt;Integer&gt;, ArrayList&lt;Type&gt;, DbIterator)</a></span> - Constructor for class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>
-<div class="block">Constructor accepts a child operator to read tuples to apply projection
- to and a list of fields in output tuple</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#Project-java.util.ArrayList-simpledb.Type:A-simpledb.DbIterator-">Project(ArrayList&lt;Integer&gt;, Type[], DbIterator)</a></span> - Constructor for class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#PROJECT">PROJECT</a></span> - Static variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.SubtreeSummary.html#ptrLeft">ptrLeft</a></span> - Variable in class simpledb.<a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.SubtreeSummary.html#ptrRight">ptrRight</a></span> - Variable in class simpledb.<a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:Q">
-<!--   -->
-</a>
-<h2 class="title">Q</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#query">query</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Query.html" title="class in simpledb"><span class="typeNameLink">Query</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Query is a wrapper class to manage the execution of queries.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#Query-simpledb.TransactionId-">Query(TransactionId)</a></span> - Constructor for class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#Query-simpledb.DbIterator-simpledb.TransactionId-">Query(DbIterator, TransactionId)</a></span> - Constructor for class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb"><span class="typeNameLink">QueryPlanVisualizer</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#QueryPlanVisualizer--">QueryPlanVisualizer()</a></span> - Constructor for class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb"><span class="typeNameLink">QueryPlanVisualizer.SubTreeDescriptor</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:R">
-<!--   -->
-</a>
-<h2 class="title">R</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#raf">raf</a></span> - Variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#random">random</a></span> - Variable in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Permissions.html#READ_ONLY">READ_ONLY</a></span> - Static variable in class simpledb.<a href="simpledb/Permissions.html" title="class in simpledb">Permissions</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Permissions.html#READ_WRITE">READ_WRITE</a></span> - Static variable in class simpledb.<a href="simpledb/Permissions.html" title="class in simpledb">Permissions</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/AbstractDbFileIterator.html#readNext--">readNext()</a></span> - Method in class simpledb.<a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></dt>
-<dd>
-<div class="block">Reads the next tuple from the underlying source.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileIterator.html#readNext--">readNext()</a></span> - Method in class simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></dt>
-<dd>
-<div class="block">Read the next tuple either from the current page if it has more tuples or
- from the next page by following the right sibling pointer.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#readNext--">readNext()</a></span> - Method in class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>
-<div class="block">Read the next tuple either from the current page if it has more tuples matching
- the predicate or from the next page by following the right sibling pointer.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#readNextChild-java.io.DataInputStream-int-">readNextChild(DataInputStream, int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Read child pointers from the source file.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#readNextKey-java.io.DataInputStream-int-">readNextKey(DataInputStream, int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Read keys from the source file.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#readNextTuple-java.io.DataInputStream-int-">readNextTuple(DataInputStream, int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Read tuples from the source file.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#readNextTuple-java.io.DataInputStream-int-">readNextTuple(DataInputStream, int)</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>
-<div class="block">Suck up tuples from the source file.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#readPage-simpledb.PageId-">readPage(PageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Read a page from the file on disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFile.html#readPage-simpledb.PageId-">readPage(PageId)</a></span> - Method in interface simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb">DbFile</a></dt>
-<dd>
-<div class="block">Read the specified page from disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#readPage-simpledb.PageId-">readPage(PageId)</a></span> - Method in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#readPageData-java.io.RandomAccessFile-">readPageData(RandomAccessFile)</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#recordId">recordId</a></span> - Variable in class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/RecordId.html" title="class in simpledb"><span class="typeNameLink">RecordId</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A RecordId is a reference to a specific tuple on a specific page of a
- specific table.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/RecordId.html#RecordId-simpledb.PageId-int-">RecordId(PageId, int)</a></span> - Constructor for class simpledb.<a href="simpledb/RecordId.html" title="class in simpledb">RecordId</a></dt>
-<dd>
-<div class="block">Creates a new RecordId referring to the specified PageId and tuple
- number.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#recover--">recover()</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Recover the database system by ensuring that the updates of
-        committed transactions are installed and that the
-        updates of uncommitted transactions are not installed.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#recoveryUndecided">recoveryUndecided</a></span> - Variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#releasePage-simpledb.TransactionId-simpledb.PageId-">releasePage(TransactionId, PageId)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Releases the lock on a page.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageIterator.html#remove--">remove()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPageReverseIterator.html#remove--">remove()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageIterator.html#remove--">remove()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb">BTreeLeafPageIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPageReverseIterator.html#remove--">remove()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb">BTreeLeafPageReverseIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#RENAME">RENAME</a></span> - Static variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#rerun-simpledb.BTreeFile-java.util.concurrent.BlockingQueue-">rerun(BTreeFile, BlockingQueue&lt;ArrayList&lt;Integer&gt;&gt;)</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#rerun-simpledb.BTreeFile-int:A-java.util.concurrent.BlockingQueue-">rerun(BTreeFile, int[], BlockingQueue&lt;ArrayList&lt;Integer&gt;&gt;)</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#reset-int-java.lang.String-">reset(int, String)</a></span> - Method in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>
-<div class="block">Reset the tableid, and tableAlias of this operator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#reset--">reset()</a></span> - Static method in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#reset-int-java.lang.String-">reset(int, String)</a></span> - Method in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>
-<div class="block">Reset the tableid, and tableAlias of this operator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#resetBufferPool-int-">resetBufferPool(int)</a></span> - Static method in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>
-<div class="block">Method used for testing -- create a new instance of the buffer pool and
- return it</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#resetPageSize--">resetPageSize()</a></span> - Static method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#resetTupleDesc-simpledb.TupleDesc-">resetTupleDesc(TupleDesc)</a></span> - Method in class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>
-<div class="block">reset the TupleDesc of thi tuple</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#returnTD">returnTD</a></span> - Variable in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#returnTD">returnTD</a></span> - Variable in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.ReverseEntryComparator.html#ReverseEntryComparator--">ReverseEntryComparator()</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb">BTreeFileEncoder.ReverseEntryComparator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#reverseIterator--">reverseIterator()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#reverseIterator--">reverseIterator()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileIterator.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></dt>
-<dd>
-<div class="block">rewind this iterator back to the beginning of the tuples</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>
-<div class="block">rewind this iterator back to the beginning of the tuples</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFileIterator.html#rewind--">rewind()</a></span> - Method in interface simpledb.<a href="simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></dt>
-<dd>
-<div class="block">Resets the iterator to the start.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbIterator.html#rewind--">rewind()</a></span> - Method in interface simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dt>
-<dd>
-<div class="block">Resets the iterator to the start.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IndexDbIterator.html#rewind-simpledb.IndexPredicate-">rewind(IndexPredicate)</a></span> - Method in interface simpledb.<a href="simpledb/IndexDbIterator.html" title="interface in simpledb">IndexDbIterator</a></dt>
-<dd>
-<div class="block">Begin a new index scan with the specified predicate.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>
-<div class="block">Resets the iterator to the start.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#rewind--">rewind()</a></span> - Method in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#rid">rid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">The record id of this entry</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#rightChild">rightChild</a></span> - Variable in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">The right child page id</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#rightChild">rightChild</a></span> - Variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.SubtreeSummary.html#rightmostId">rightmostId</a></span> - Variable in class simpledb.<a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#rightSibling">rightSibling</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#rollback-simpledb.TransactionId-">rollback(TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Rollback the specified transaction, setting the state of any
-        of pages it updated to their pre-updated state.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#root">root</a></span> - Variable in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#ROOT_PTR">ROOT_PTR</a></span> - Static variable in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#rootCategory">rootCategory</a></span> - Variable in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#run--">run()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#run--">run()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#run--">run()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#run--">run()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:S">
-<!--   -->
-</a>
-<h2 class="title">S</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#SCAN">SCAN</a></span> - Static variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#SELECT">SELECT</a></span> - Static variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#selectList">selectList</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/SeqScan.html" title="class in simpledb"><span class="typeNameLink">SeqScan</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">SeqScan is an implementation of a sequential scan access method that reads
- each tuple of a table in no particular order (e.g., as they are laid out on
- disk).</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#SeqScan-simpledb.TransactionId-int-java.lang.String-">SeqScan(TransactionId, int, String)</a></span> - Constructor for class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>
-<div class="block">Creates a sequential scan over the specified table as a part of the
- specified transaction.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#SeqScan-simpledb.TransactionId-int-">SeqScan(TransactionId, int)</a></span> - Constructor for class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#serialize--">serialize()</a></span> - Method in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>
-<div class="block">Return a representation of this object as an array of
-  integers, for writing to disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Field.html#serialize-java.io.DataOutputStream-">serialize(DataOutputStream)</a></span> - Method in interface simpledb.<a href="simpledb/Field.html" title="interface in simpledb">Field</a></dt>
-<dd>
-<div class="block">Write the bytes representing this field to the specified
- DataOutputStream.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPageId.html#serialize--">serialize()</a></span> - Method in class simpledb.<a href="simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></dt>
-<dd>
-<div class="block">Return a representation of this object as an array of
-  integers, for writing to disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#serialize-java.io.DataOutputStream-">serialize(DataOutputStream)</a></span> - Method in class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/PageId.html#serialize--">serialize()</a></span> - Method in interface simpledb.<a href="simpledb/PageId.html" title="interface in simpledb">PageId</a></dt>
-<dd>
-<div class="block">Return a representation of this page id object as a collection of
-        integers (used for logging)
-
-        This class MUST have a constructor that accepts n integer parameters,
-        where n is the number of integers returned in the array from serialize.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#serialize-java.io.DataOutputStream-">serialize(DataOutputStream)</a></span> - Method in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>
-<div class="block">Write this string to dos.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbException.html#serialVersionUID">serialVersionUID</a></span> - Static variable in exception simpledb.<a href="simpledb/DbException.html" title="class in simpledb">DbException</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DeadlockException.html#serialVersionUID">serialVersionUID</a></span> - Static variable in exception simpledb.<a href="simpledb/DeadlockException.html" title="class in simpledb">DeadlockException</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IndexPredicate.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/JoinPredicate.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/ParsingException.html#serialVersionUID">serialVersionUID</a></span> - Static variable in exception simpledb.<a href="simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/RecordId.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/RecordId.html" title="class in simpledb">RecordId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SeqScan.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TransactionAbortedException.html#serialVersionUID">serialVersionUID</a></span> - Static variable in exception simpledb.<a href="simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TransactionId.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.TDItem.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#setBeforeImage--">setBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#setBeforeImage--">setBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#setBeforeImage--">setBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#setBeforeImage--">setBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#setBeforeImage--">setBeforeImage()</a></span> - Method in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Page.html#setBeforeImage--">setBeforeImage()</a></span> - Method in interface simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#setChildren-simpledb.DbIterator:A-">setChildren(DbIterator[])</a></span> - Method in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#setChildren-simpledb.DbIterator:A-">setChildren(DbIterator[])</a></span> - Method in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Filter.html#setChildren-simpledb.DbIterator:A-">setChildren(DbIterator[])</a></span> - Method in class simpledb.<a href="simpledb/Filter.html" title="class in simpledb">Filter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#setChildren-simpledb.DbIterator:A-">setChildren(DbIterator[])</a></span> - Method in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#setChildren-simpledb.DbIterator:A-">setChildren(DbIterator[])</a></span> - Method in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#setChildren-simpledb.DbIterator:A-">setChildren(DbIterator[])</a></span> - Method in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren(DbIterator[])</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>
-<div class="block">Set the children(child) of this operator.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#setChildren-simpledb.DbIterator:A-">setChildren(DbIterator[])</a></span> - Method in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#setChildren-simpledb.DbIterator:A-">setChildren(DbIterator[])</a></span> - Method in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#setEmptyPage-simpledb.TransactionId-java.util.HashMap-int-">setEmptyPage(TransactionId, HashMap&lt;PageId, Page&gt;, int)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Mark a page in this BTreeFile as empty.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality(int)</a></span> - Method in class simpledb.<a href="simpledb/Operator.html" title="class in simpledb">Operator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#setField-int-simpledb.Field-">setField(int, Field)</a></span> - Method in class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>
-<div class="block">Change the value of the ith field of this tuple.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#setHeaderId-simpledb.BTreePageId-">setHeaderId(BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">Set the page id of the first header page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#setKey-simpledb.Field-">setKey(Field)</a></span> - Method in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">Set the key for this entry.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#setLeftChild-simpledb.BTreePageId-">setLeftChild(BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">Set the left child id for this entry.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#setLeftSiblingId-simpledb.BTreePageId-">setLeftSiblingId(BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Set the left sibling id of this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#setLogicalPlan-simpledb.LogicalPlan-">setLogicalPlan(LogicalPlan)</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#setNextPageId-simpledb.BTreePageId-">setNextPageId(BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Set the page id of the next header page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#setPageSize-int-">setPageSize(int)</a></span> - Static method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#setParentId-simpledb.BTreePageId-">setParentId(BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>
-<div class="block">Set the parent id</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#setParents-simpledb.BTreeFile-simpledb.BTreePageId-simpledb.BTreePageId-">setParents(BTreeFile, BTreePageId, BTreePageId)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Recursive function to set all the parent pointers</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#setPhysicalPlan-simpledb.DbIterator-">setPhysicalPlan(DbIterator)</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeHeaderPage.html#setPrevPageId-simpledb.BTreePageId-">setPrevPageId(BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></dt>
-<dd>
-<div class="block">Set the page id of the previous header page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#setQuery-java.lang.String-">setQuery(String)</a></span> - Method in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>
-<div class="block">Set the text of the query representing this logical plan.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#setRecordId-simpledb.RecordId-">setRecordId(RecordId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">set the record id for this entry</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#setRecordId-simpledb.RecordId-">setRecordId(RecordId)</a></span> - Method in class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>
-<div class="block">Set the RecordId information for this tuple.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#setRightChild-simpledb.BTreePageId-">setRightChild(BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">Set the right child id for this entry.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#setRightSiblingId-simpledb.BTreePageId-">setRightSiblingId(BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>
-<div class="block">Set the right sibling id of this page</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#setRightSiblingPtrs-simpledb.BTreeFile-simpledb.BTreePageId-simpledb.BTreePageId-">setRightSiblingPtrs(BTreeFile, BTreePageId, BTreePageId)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Set all the right sibling pointers by following the left sibling pointers</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeRootPtrPage.html#setRootId-simpledb.BTreePageId-">setRootId(BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></dt>
-<dd>
-<div class="block">Set the id of the root page in this B+ tree</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#setStatsMap-java.util.HashMap-">setStatsMap(HashMap&lt;String, TableStats&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#setTableStats-java.lang.String-simpledb.TableStats-">setTableStats(String, TableStats)</a></span> - Static method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#setTransaction-simpledb.Transaction-">setTransaction(Transaction)</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#shutdown--">shutdown()</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>
-<div class="block">Shutdown the logging system, writing out whatever state
-        is necessary so that start up can happen quickly (without
-        extensive recovery.)</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#shutdown--">shutdown()</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/package-summary.html">simpledb</a> - package simpledb</dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/SimpleDb.html" title="class in simpledb"><span class="typeNameLink">SimpleDb</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/SimpleDb.html#SimpleDb--">SimpleDb()</a></span> - Constructor for class simpledb.<a href="simpledb/SimpleDb.html" title="class in simpledb">SimpleDb</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#SLEEP_TIME">SLEEP_TIME</a></span> - Static variable in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#slock">slock</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#slock">slock</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#slock">slock</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#slock">slock</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.html#SPACE">SPACE</a></span> - Static variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#splitInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.Field-">splitInternalPage(TransactionId, HashMap&lt;PageId, Page&gt;, BTreeInternalPage, Field)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Split an internal page to make room for new entries and recursively split its parent page
- as needed to accommodate a new entry.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#splitLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.Field-">splitLeafPage(TransactionId, HashMap&lt;PageId, Page&gt;, BTreeLeafPage, Field)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Split a leaf page to make room for new tuples and recursively split the parent node
- as needed to accommodate a new entry.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#SQL_COMMANDS">SQL_COMMANDS</a></span> - Static variable in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#start-java.lang.String:A-">start(String[])</a></span> - Method in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#start--">start()</a></span> - Method in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Transaction.html#start--">start()</a></span> - Method in class simpledb.<a href="simpledb/Transaction.html" title="class in simpledb">Transaction</a></dt>
-<dd>
-<div class="block">Start the transaction running</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#started">started</a></span> - Variable in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Transaction.html#started">started</a></span> - Variable in class simpledb.<a href="simpledb/Transaction.html" title="class in simpledb">Transaction</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#statsMap">statsMap</a></span> - Static variable in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#stealFromLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-boolean-">stealFromLeafPage(BTreeLeafPage, BTreeLeafPage, BTreeInternalPage, BTreeEntry, boolean)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Steal tuples from a sibling and copy them to the given page so that both pages are at least
- half full.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#stealFromLeftInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">stealFromLeftInternalPage(TransactionId, HashMap&lt;PageId, Page&gt;, BTreeInternalPage, BTreeInternalPage, BTreeInternalPage, BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Steal entries from the left sibling and copy them to the given page so that both pages are at least
- half full.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#stealFromRightInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">stealFromRightInternalPage(TransactionId, HashMap&lt;PageId, Page&gt;, BTreeInternalPage, BTreeInternalPage, BTreeInternalPage, BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Steal entries from the right sibling and copy them to the given page so that both pages are at least
- half full.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Type.html#STRING_LEN">STRING_LEN</a></span> - Static variable in enum simpledb.<a href="simpledb/Type.html" title="enum in simpledb">Type</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/StringAggregator.html" title="class in simpledb"><span class="typeNameLink">StringAggregator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Knows how to compute some aggregate over a set of StringFields.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.html#StringAggregator-int-simpledb.Type-int-simpledb.Aggregator.Op-">StringAggregator(int, Type, int, Aggregator.Op)</a></span> - Constructor for class simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dt>
-<dd>
-<div class="block">Aggregate constructor</div>
-</dd>
-<dt><a href="simpledb/StringAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">StringAggregator.AggregateFields</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A helper struct to store accumulated aggregate values.</div>
-</dd>
-<dt><a href="simpledb/StringField.html" title="class in simpledb"><span class="typeNameLink">StringField</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Instance of Field that stores a single String of a fixed length.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#StringField-java.lang.String-int-">StringField(String, int)</a></span> - Constructor for class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><a href="simpledb/StringHistogram.html" title="class in simpledb"><span class="typeNameLink">StringHistogram</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A class to represent a fixed-width histogram over a single String-based
- field.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringHistogram.html#StringHistogram-int-">StringHistogram(int)</a></span> - Constructor for class simpledb.<a href="simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></dt>
-<dd>
-<div class="block">Create a new StringHistogram with a specified number of buckets.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringHistogram.html#stringToInt-java.lang.String-">stringToInt(String)</a></span> - Method in class simpledb.<a href="simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></dt>
-<dd>
-<div class="block">Convert a string to an integer, with the property that if the return
- value(s1) < return value(s2), then s1 < s2</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalSubplanJoinNode.html#subPlan">subPlan</a></span> - Variable in class simpledb.<a href="simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a></dt>
-<dd>
-<div class="block">The subplan (used on the inner) of the join</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#subplanMap">subplanMap</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#SubTreeDescriptor-simpledb.QueryPlanVisualizer.SubTreeDescriptor-simpledb.QueryPlanVisualizer.SubTreeDescriptor-">SubTreeDescriptor(QueryPlanVisualizer.SubTreeDescriptor, QueryPlanVisualizer.SubTreeDescriptor)</a></span> - Constructor for class simpledb.<a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.SubtreeSummary.html#SubtreeSummary--">SubtreeSummary()</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeChecker.SubtreeSummary.html#SubtreeSummary-simpledb.BTreeLeafPage-int-">SubtreeSummary(BTreeLeafPage, int)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#succeeded--">succeeded()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#succeeded--">succeeded()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#succeeded--">succeeded()</a></span> - Method in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#success">success</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#success">success</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#success">success</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.AggregateFields.html#sum">sum</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.AggregateFields.html#sumCount">sumCount</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#swapInnerOuter--">swapInnerOuter()</a></span> - Method in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>
-<div class="block">Return a new LogicalJoinNode with the inner and outer (t1.f1
- and t2.f2) tables swapped.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalSubplanJoinNode.html#swapInnerOuter--">swapInnerOuter()</a></span> - Method in class simpledb.<a href="simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:T">
-<!--   -->
-</a>
-<h2 class="title">T</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalScanNode.html#t">t</a></span> - Variable in class simpledb.<a href="simpledb/LogicalScanNode.html" title="class in simpledb">LogicalScanNode</a></dt>
-<dd>
-<div class="block">The table identifier (can be passed to <a href="simpledb/Catalog.html#getDatabaseFile-int-"><code>Catalog.getDatabaseFile(int)</code></a>)
-   to retrieve a DbFile</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#t1">t1</a></span> - Variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Join.html#t1">t1</a></span> - Variable in class simpledb.<a href="simpledb/Join.html" title="class in simpledb">Join</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#t1Alias">t1Alias</a></span> - Variable in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>
-<div class="block">The first table to join (may be null).</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HashEquiJoin.html#t2">t2</a></span> - Variable in class simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#t2Alias">t2Alias</a></span> - Variable in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>
-<div class="block">The second table to join (may be null).</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalFilterNode.html#tableAlias">tableAlias</a></span> - Variable in class simpledb.<a href="simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a></dt>
-<dd>
-<div class="block">The alias of a table (or the name if no alias) over which the filter ranges</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#tableid">tableid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#tableId">tableId</a></span> - Variable in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#tableId">tableId</a></span> - Variable in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Catalog.html#tableIdIterator--">tableIdIterator()</a></span> - Method in class simpledb.<a href="simpledb/Catalog.html" title="class in simpledb">Catalog</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#tableMap">tableMap</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#tablename">tablename</a></span> - Variable in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalPlan.html#tables">tables</a></span> - Variable in class simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/TableStats.html" title="class in simpledb"><span class="typeNameLink">TableStats</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">TableStats represents statistics (e.g., histograms) about base tables in a
- query.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#TableStats-int-int-">TableStats(int, int)</a></span> - Constructor for class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>
-<div class="block">Create a new TableStats object, that keeps track of statistics on each
- column of a table</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregate.html#td">td</a></span> - Variable in class simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#td">td</a></span> - Variable in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePage.html#td">td</a></span> - Variable in class simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#td">td</a></span> - Variable in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OrderBy.html#td">td</a></span> - Variable in class simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Project.html#td">td</a></span> - Variable in class simpledb.<a href="simpledb/Project.html" title="class in simpledb">Project</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#td">td</a></span> - Variable in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.TDItem.html#TDItem-simpledb.Type-java.lang.String-">TDItem(Type, String)</a></span> - Constructor for class simpledb.<a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#text">text</a></span> - Variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#textStartPosition">textStartPosition</a></span> - Variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileIterator.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeScan.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeSearchIterator.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeReader.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeWriter.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Delete.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/Delete.html" title="class in simpledb">Delete</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Insert.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/Insert.html" title="class in simpledb">Insert</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Query.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/Query.html" title="class in simpledb">Query</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Transaction.html#tid">tid</a></span> - Variable in class simpledb.<a href="simpledb/Transaction.html" title="class in simpledb">Transaction</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#tidToFirstLogRecord">tidToFirstLogRecord</a></span> - Variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregator.Op.html#toString--">toString()</a></span> - Method in enum simpledb.<a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeEntry.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></dt>
-<dd>
-<div class="block">Prints a representation of this BTreeEntry</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreePageId.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Field.html#toString--">toString()</a></span> - Method in interface simpledb.<a href="simpledb/Field.html" title="interface in simpledb">Field</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/IntHistogram.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/IntHistogram.html" title="class in simpledb">IntHistogram</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogicalJoinNode.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Permissions.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/Permissions.html" title="class in simpledb">Permissions</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.Op.html#toString--">toString()</a></span> - Method in enum simpledb.<a href="simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a></dt>
-<dd>
-<div class="block">Returns something useful, like "f = field_id op = op_string operand =
- operand_string</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>
-<div class="block">Returns the contents of this Tuple as a string.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.TDItem.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#toString--">toString()</a></span> - Method in class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>
-<div class="block">Returns a String describing this descriptor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#totalRecords">totalRecords</a></span> - Variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TableStats.html#totalTuples--">totalTuples()</a></span> - Method in class simpledb.<a href="simpledb/TableStats.html" title="class in simpledb">TableStats</a></dt>
-<dd>
-<div class="block">return the total number of tuples in this table</div>
-</dd>
-<dt><a href="simpledb/Transaction.html" title="class in simpledb"><span class="typeNameLink">Transaction</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Transaction encapsulates information about the state of
- a transaction and manages transaction commit / abort.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Transaction.html#Transaction--">Transaction()</a></span> - Constructor for class simpledb.<a href="simpledb/Transaction.html" title="class in simpledb">Transaction</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/TransactionAbortedException.html" title="class in simpledb"><span class="typeNameLink">TransactionAbortedException</span></a> - Exception in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Exception that is thrown when a transaction has aborted.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TransactionAbortedException.html#TransactionAbortedException--">TransactionAbortedException()</a></span> - Constructor for exception simpledb.<a href="simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#transactionComplete-simpledb.TransactionId-">transactionComplete(TransactionId)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Release all locks associated with a given transaction.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BufferPool.html#transactionComplete-simpledb.TransactionId-boolean-">transactionComplete(TransactionId, boolean)</a></span> - Method in class simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></dt>
-<dd>
-<div class="block">Commit or abort a given transaction; release all locks associated to
- the transaction.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Transaction.html#transactionComplete-boolean-">transactionComplete(boolean)</a></span> - Method in class simpledb.<a href="simpledb/Transaction.html" title="class in simpledb">Transaction</a></dt>
-<dd>
-<div class="block">Handle the details of transaction commit / abort</div>
-</dd>
-<dt><a href="simpledb/TransactionId.html" title="class in simpledb"><span class="typeNameLink">TransactionId</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">TransactionId is a class that contains the identifier of a transaction.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TransactionId.html#TransactionId--">TransactionId()</a></span> - Constructor for class simpledb.<a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeInserter.html#tupdata">tupdata</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.BTreeDeleter.html#tuple">tuple</a></span> - Variable in class simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Tuple.html" title="class in simpledb"><span class="typeNameLink">Tuple</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Tuple maintains information about the contents of a tuple.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Tuple.html#Tuple-simpledb.TupleDesc-">Tuple(TupleDesc)</a></span> - Constructor for class simpledb.<a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a></dt>
-<dd>
-<div class="block">Create a new tuple with the specified schema (type).</div>
-</dd>
-<dt><a href="simpledb/TupleArrayIterator.html" title="class in simpledb"><span class="typeNameLink">TupleArrayIterator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#TupleArrayIterator-java.util.ArrayList-">TupleArrayIterator(ArrayList&lt;Tuple&gt;)</a></span> - Constructor for class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.TupleComparator.html#TupleComparator-int-">TupleComparator(int)</a></span> - Constructor for class simpledb.<a href="simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb">BTreeFileEncoder.TupleComparator</a></dt>
-<dd>
-<div class="block">Construct a TupleComparator</div>
-</dd>
-<dt><a href="simpledb/TupleComparator.html" title="class in simpledb"><span class="typeNameLink">TupleComparator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleComparator.html#TupleComparator-int-boolean-">TupleComparator(int, boolean)</a></span> - Constructor for class simpledb.<a href="simpledb/TupleComparator.html" title="class in simpledb">TupleComparator</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/TupleDesc.html" title="class in simpledb"><span class="typeNameLink">TupleDesc</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">TupleDesc describes the schema of a tuple.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#TupleDesc-simpledb.Type:A-java.lang.String:A-">TupleDesc(Type[], String[])</a></span> - Constructor for class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>
-<div class="block">Create a new TupleDesc with typeAr.length fields with fields of the
- specified types, with associated named fields.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleDesc.html#TupleDesc-simpledb.Type:A-">TupleDesc(Type[])</a></span> - Constructor for class simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dt>
-<dd>
-<div class="block">Constructor.</div>
-</dd>
-<dt><a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb"><span class="typeNameLink">TupleDesc.TDItem</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">A help class to facilitate organizing the information of each field</div>
-</dd>
-<dt><a href="simpledb/TupleIterator.html" title="class in simpledb"><span class="typeNameLink">TupleIterator</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Implements a DbIterator by wrapping an Iterable<Tuple>.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#TupleIterator-simpledb.TupleDesc-java.lang.Iterable-">TupleIterator(TupleDesc, Iterable&lt;Tuple&gt;)</a></span> - Constructor for class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>
-<div class="block">Constructs an iterator from the specified Iterable, and the specified
- descriptor.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/RecordId.html#tupleno--">tupleno()</a></span> - Method in class simpledb.<a href="simpledb/RecordId.html" title="class in simpledb">RecordId</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeLeafPage.html#tuples">tuples</a></span> - Variable in class simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapPage.html#tuples">tuples</a></span> - Variable in class simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleIterator.html#tuples">tuples</a></span> - Variable in class simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeUtility.html#tupleToList-simpledb.Tuple-">tupleToList(Tuple)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/TupleArrayIterator.html#tups">tups</a></span> - Variable in class simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Type.html" title="enum in simpledb"><span class="typeNameLink">Type</span></a> - Enum in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Class representing a type in SimpleDB.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Type.html#Type--">Type()</a></span> - Constructor for enum simpledb.<a href="simpledb/Type.html" title="enum in simpledb">Type</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:U">
-<!--   -->
-</a>
-<h2 class="title">U</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#upBarPosition">upBarPosition</a></span> - Variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#UPDATE_RECORD">UPDATE_RECORD</a></span> - Static variable in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OperatorCardinality.html#updateAggregateCardinality-simpledb.Aggregate-java.util.Map-java.util.Map-">updateAggregateCardinality(Aggregate, Map&lt;String, Integer&gt;, Map&lt;String, TableStats&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/OperatorCardinality.html" title="class in simpledb">OperatorCardinality</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFileEncoder.html#updateEntries-java.util.ArrayList-simpledb.BTreeFile-simpledb.BTreeEntry-int-int-int-simpledb.Type-int-int-">updateEntries(ArrayList&lt;ArrayList&lt;BTreeEntry&gt;&gt;, BTreeFile, BTreeEntry, int, int, int, Type, int, int)</a></span> - Static method in class simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dt>
-<dd>
-<div class="block">Recursive function to update the entries by adding a new Entry at a particular level</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeInternalPage.html#updateEntry-simpledb.BTreeEntry-">updateEntry(BTreeEntry)</a></span> - Method in class simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></dt>
-<dd>
-<div class="block">Update the key and/or child pointers of an entry at the location specified by its 
- record id.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OperatorCardinality.html#updateFilterCardinality-simpledb.Filter-java.util.Map-java.util.Map-">updateFilterCardinality(Filter, Map&lt;String, Integer&gt;, Map&lt;String, TableStats&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/OperatorCardinality.html" title="class in simpledb">OperatorCardinality</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OperatorCardinality.html#updateHashEquiJoinCardinality-simpledb.HashEquiJoin-java.util.Map-java.util.Map-">updateHashEquiJoinCardinality(HashEquiJoin, Map&lt;String, Integer&gt;, Map&lt;String, TableStats&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/OperatorCardinality.html" title="class in simpledb">OperatorCardinality</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OperatorCardinality.html#updateJoinCardinality-simpledb.Join-java.util.Map-java.util.Map-">updateJoinCardinality(Join, Map&lt;String, Integer&gt;, Map&lt;String, TableStats&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/OperatorCardinality.html" title="class in simpledb">OperatorCardinality</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/OperatorCardinality.html#updateOperatorCardinality-simpledb.Operator-java.util.Map-java.util.Map-">updateOperatorCardinality(Operator, Map&lt;String, Integer&gt;, Map&lt;String, TableStats&gt;)</a></span> - Static method in class simpledb.<a href="simpledb/OperatorCardinality.html" title="class in simpledb">OperatorCardinality</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#updateParentPointer-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.BTreePageId-">updateParentPointer(TransactionId, HashMap&lt;PageId, Page&gt;, BTreePageId, BTreePageId)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Helper function to update the parent pointer of a node.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#updateParentPointers-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-">updateParentPointers(TransactionId, HashMap&lt;PageId, Page&gt;, BTreeInternalPage)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Update the parent pointer of every child of the given page so that it correctly points to
- the parent</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Parser.html#usage">usage</a></span> - Static variable in class simpledb.<a href="simpledb/Parser.html" title="class in simpledb">Parser</a></dt>
-<dd>&nbsp;</dd>
-<dt><a href="simpledb/Utility.html" title="class in simpledb"><span class="typeNameLink">Utility</span></a> - Class in <a href="simpledb/package-summary.html">simpledb</a></dt>
-<dd>
-<div class="block">Helper methods used for testing and implementing random features.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Utility.html#Utility--">Utility()</a></span> - Constructor for class simpledb.<a href="simpledb/Utility.html" title="class in simpledb">Utility</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:V">
-<!--   -->
-</a>
-<h2 class="title">V</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/IntField.html#value">value</a></span> - Variable in class simpledb.<a href="simpledb/IntField.html" title="class in simpledb">IntField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringField.html#value">value</a></span> - Variable in class simpledb.<a href="simpledb/StringField.html" title="class in simpledb">StringField</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregator.Op.html#valueOf-java.lang.String-">valueOf(String)</a></span> - Static method in enum simpledb.<a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></dt>
-<dd>
-<div class="block">Returns the enum constant of this type with the specified name.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.Op.html#valueOf-java.lang.String-">valueOf(String)</a></span> - Static method in enum simpledb.<a href="simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></dt>
-<dd>
-<div class="block">Returns the enum constant of this type with the specified name.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Type.html#valueOf-java.lang.String-">valueOf(String)</a></span> - Static method in enum simpledb.<a href="simpledb/Type.html" title="enum in simpledb">Type</a></dt>
-<dd>
-<div class="block">Returns the enum constant of this type with the specified name.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Aggregator.Op.html#values--">values()</a></span> - Static method in enum simpledb.<a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></dt>
-<dd>
-<div class="block">Returns an array containing the constants of this enum type, in
-the order they are declared.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Predicate.Op.html#values--">values()</a></span> - Static method in enum simpledb.<a href="simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></dt>
-<dd>
-<div class="block">Returns an array containing the constants of this enum type, in
-the order they are declared.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Type.html#values--">values()</a></span> - Static method in enum simpledb.<a href="simpledb/Type.html" title="enum in simpledb">Type</a></dt>
-<dd>
-<div class="block">Returns an array containing the constants of this enum type, in
-the order they are declared.</div>
-</dd>
-</dl>
-<a name="I:W">
-<!--   -->
-</a>
-<h2 class="title">W</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/IntegerAggregator.html#what">what</a></span> - Variable in class simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/StringAggregator.html#what">what</a></span> - Variable in class simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#width">width</a></span> - Variable in class simpledb.<a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/BTreeFile.html#writePage-simpledb.Page-">writePage(Page)</a></span> - Method in class simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></dt>
-<dd>
-<div class="block">Write a page to disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/DbFile.html#writePage-simpledb.Page-">writePage(Page)</a></span> - Method in interface simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb">DbFile</a></dt>
-<dd>
-<div class="block">Push the specified page to disk.</div>
-</dd>
-<dt><span class="memberNameLink"><a href="simpledb/HeapFile.html#writePage-simpledb.Page-">writePage(Page)</a></span> - Method in class simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/LogFile.html#writePageData-java.io.RandomAccessFile-simpledb.Page-">writePageData(RandomAccessFile, Page)</a></span> - Method in class simpledb.<a href="simpledb/LogFile.html" title="class in simpledb">LogFile</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a name="I:Z:Z_">
-<!--   -->
-</a>
-<h2 class="title">_</h2>
-<dl>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#Z:Z_bufferpool">_bufferpool</a></span> - Variable in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#Z:Z_catalog">_catalog</a></span> - Variable in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#Z:Z_instance">_instance</a></span> - Static variable in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>&nbsp;</dd>
-<dt><span class="memberNameLink"><a href="simpledb/Database.html#Z:Z_logfile">_logfile</a></span> - Variable in class simpledb.<a href="simpledb/Database.html" title="class in simpledb">Database</a></dt>
-<dd>&nbsp;</dd>
-</dl>
-<a href="#I:A">A</a>&nbsp;<a href="#I:B">B</a>&nbsp;<a href="#I:C">C</a>&nbsp;<a href="#I:D">D</a>&nbsp;<a href="#I:E">E</a>&nbsp;<a href="#I:F">F</a>&nbsp;<a href="#I:G">G</a>&nbsp;<a href="#I:H">H</a>&nbsp;<a href="#I:I">I</a>&nbsp;<a href="#I:J">J</a>&nbsp;<a href="#I:K">K</a>&nbsp;<a href="#I:L">L</a>&nbsp;<a href="#I:M">M</a>&nbsp;<a href="#I:N">N</a>&nbsp;<a href="#I:O">O</a>&nbsp;<a href="#I:P">P</a>&nbsp;<a href="#I:Q">Q</a>&nbsp;<a href="#I:R">R</a>&nbsp;<a href="#I:S">S</a>&nbsp;<a href="#I:T">T</a>&nbsp;<a href="#I:U">U</a>&nbsp;<a href="#I:V">V</a>&nbsp;<a href="#I:W">W</a>&nbsp;<a href="#I:Z:Z_">_</a>&nbsp;</div>
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li class="navBarCell1Rev">Index</li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?index-all.html" target="_top">Frames</a></li>
-<li><a href="index-all.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/index.html lab4/javadoc/index.html
--- lab3/javadoc/index.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/index.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,71 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Generated Documentation (Untitled)</title>
-<script type="text/javascript">
-    targetPage = "" + window.location.search;
-    if (targetPage != "" && targetPage != "undefined")
-        targetPage = targetPage.substring(1);
-    if (targetPage.indexOf(":") != -1 || (targetPage != "" && !validURL(targetPage)))
-        targetPage = "undefined";
-    function validURL(url) {
-        try {
-            url = decodeURIComponent(url);
-        }
-        catch (error) {
-            return false;
-        }
-        var pos = url.indexOf(".html");
-        if (pos == -1 || pos != url.length - 5)
-            return false;
-        var allowNumber = false;
-        var allowSep = false;
-        var seenDot = false;
-        for (var i = 0; i < url.length - 5; i++) {
-            var ch = url.charAt(i);
-            if ('a' <= ch && ch <= 'z' ||
-                    'A' <= ch && ch <= 'Z' ||
-                    ch == '$' ||
-                    ch == '_' ||
-                    ch.charCodeAt(0) > 127) {
-                allowNumber = true;
-                allowSep = true;
-            } else if ('0' <= ch && ch <= '9'
-                    || ch == '-') {
-                if (!allowNumber)
-                     return false;
-            } else if (ch == '/' || ch == '.') {
-                if (!allowSep)
-                    return false;
-                allowNumber = false;
-                allowSep = false;
-                if (ch == '.')
-                     seenDot = true;
-                if (ch == '/' && seenDot)
-                     return false;
-            } else {
-                return false;
-            }
-        }
-        return true;
-    }
-    function loadFrames() {
-        if (targetPage != "" && targetPage != "undefined")
-             top.classFrame.location = top.targetPage;
-    }
-</script>
-</head>
-<frameset cols="20%,80%" title="Documentation frame" onload="top.loadFrames()">
-<frame src="allclasses-frame.html" name="packageFrame" title="All classes and interfaces (except non-static nested types)">
-<frame src="simpledb/package-summary.html" name="classFrame" title="Package, class and interface descriptions" scrolling="yes">
-<noframes>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<h2>Frame Alert</h2>
-<p>This document is designed to be viewed using the frames feature. If you see this message, you are using a non-frame-capable web client. Link to <a href="simpledb/package-summary.html">Non-frame version</a>.</p>
-</noframes>
-</frameset>
-</html>
diff -ruN lab3/javadoc/overview-tree.html lab4/javadoc/overview-tree.html
--- lab3/javadoc/overview-tree.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/overview-tree.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,276 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Class Hierarchy</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
-<script type="text/javascript" src="script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Class Hierarchy";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li class="navBarCell1Rev">Tree</li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li><a href="index-all.html">Index</a></li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?overview-tree.html" target="_top">Frames</a></li>
-<li><a href="overview-tree.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<div class="header">
-<h1 class="title">Hierarchy For All Packages</h1>
-<span class="packageHierarchyLabel">Package Hierarchies:</span>
-<ul class="horizontal">
-<li><a href="simpledb/package-tree.html">simpledb</a></li>
-</ul>
-</div>
-<div class="contentContainer">
-<h2 title="Class Hierarchy">Class Hierarchy</h2>
-<ul>
-<li type="circle">java.lang.Object
-<ul>
-<li type="circle">simpledb.<a href="simpledb/AbstractDbFileIterator.html" title="class in simpledb"><span class="typeNameLink">AbstractDbFileIterator</span></a> (implements simpledb.<a href="simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a>)
-<ul>
-<li type="circle">simpledb.<a href="simpledb/BTreeFileIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileIterator</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/BTreeSearchIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeSearchIterator</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeChecker.html" title="class in simpledb"><span class="typeNameLink">BTreeChecker</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb"><span class="typeNameLink">BTreeChecker.SubtreeSummary</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/BTreeEntry.html" title="class in simpledb"><span class="typeNameLink">BTreeEntry</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeFile.html" title="class in simpledb"><span class="typeNameLink">BTreeFile</span></a> (implements simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb">DbFile</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeFileEncoder.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder.EntryComparator</span></a> (implements java.util.Comparator&lt;T&gt;)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder.ReverseEntryComparator</span></a> (implements java.util.Comparator&lt;T&gt;)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder.TupleComparator</span></a> (implements java.util.Comparator&lt;T&gt;)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeHeaderPage.html" title="class in simpledb"><span class="typeNameLink">BTreeHeaderPage</span></a> (implements simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeInternalPageIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeInternalPageIterator</span></a> (implements java.util.Iterator&lt;E&gt;)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeInternalPageReverseIterator</span></a> (implements java.util.Iterator&lt;E&gt;)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeLeafPageIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeLeafPageIterator</span></a> (implements java.util.Iterator&lt;E&gt;)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeLeafPageReverseIterator</span></a> (implements java.util.Iterator&lt;E&gt;)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreePage.html" title="class in simpledb"><span class="typeNameLink">BTreePage</span></a> (implements simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a>)
-<ul>
-<li type="circle">simpledb.<a href="simpledb/BTreeInternalPage.html" title="class in simpledb"><span class="typeNameLink">BTreeInternalPage</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/BTreeLeafPage.html" title="class in simpledb"><span class="typeNameLink">BTreeLeafPage</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="simpledb/BTreePageId.html" title="class in simpledb"><span class="typeNameLink">BTreePageId</span></a> (implements simpledb.<a href="simpledb/PageId.html" title="interface in simpledb">PageId</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeRootPtrPage.html" title="class in simpledb"><span class="typeNameLink">BTreeRootPtrPage</span></a> (implements simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeScan.html" title="class in simpledb"><span class="typeNameLink">BTreeScan</span></a> (implements simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/BTreeUtility.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/BufferPool.html" title="class in simpledb"><span class="typeNameLink">BufferPool</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Catalog.html" title="class in simpledb"><span class="typeNameLink">Catalog</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/CostCard.html" title="class in simpledb"><span class="typeNameLink">CostCard</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Database.html" title="class in simpledb"><span class="typeNameLink">Database</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Debug.html" title="class in simpledb"><span class="typeNameLink">Debug</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/HeapFile.html" title="class in simpledb"><span class="typeNameLink">HeapFile</span></a> (implements simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb">DbFile</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/HeapFileEncoder.html" title="class in simpledb"><span class="typeNameLink">HeapFileEncoder</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/HeapPage.html" title="class in simpledb"><span class="typeNameLink">HeapPage</span></a> (implements simpledb.<a href="simpledb/Page.html" title="interface in simpledb">Page</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/HeapPageId.html" title="class in simpledb"><span class="typeNameLink">HeapPageId</span></a> (implements simpledb.<a href="simpledb/PageId.html" title="interface in simpledb">PageId</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/IndexPredicate.html" title="class in simpledb"><span class="typeNameLink">IndexPredicate</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/IntegerAggregator.html" title="class in simpledb"><span class="typeNameLink">IntegerAggregator</span></a> (implements simpledb.<a href="simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">IntegerAggregator.AggregateFields</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/IntField.html" title="class in simpledb"><span class="typeNameLink">IntField</span></a> (implements simpledb.<a href="simpledb/Field.html" title="interface in simpledb">Field</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/IntHistogram.html" title="class in simpledb"><span class="typeNameLink">IntHistogram</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/JoinOptimizer.html" title="class in simpledb"><span class="typeNameLink">JoinOptimizer</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/JoinPredicate.html" title="class in simpledb"><span class="typeNameLink">JoinPredicate</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/LogFile.html" title="class in simpledb"><span class="typeNameLink">LogFile</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/LogicalFilterNode.html" title="class in simpledb"><span class="typeNameLink">LogicalFilterNode</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/LogicalJoinNode.html" title="class in simpledb"><span class="typeNameLink">LogicalJoinNode</span></a>
-<ul>
-<li type="circle">simpledb.<a href="simpledb/LogicalSubplanJoinNode.html" title="class in simpledb"><span class="typeNameLink">LogicalSubplanJoinNode</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="simpledb/LogicalPlan.html" title="class in simpledb"><span class="typeNameLink">LogicalPlan</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/LogicalScanNode.html" title="class in simpledb"><span class="typeNameLink">LogicalScanNode</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/LogicalSelectListNode.html" title="class in simpledb"><span class="typeNameLink">LogicalSelectListNode</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Operator.html" title="class in simpledb"><span class="typeNameLink">Operator</span></a> (implements simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)
-<ul>
-<li type="circle">simpledb.<a href="simpledb/Aggregate.html" title="class in simpledb"><span class="typeNameLink">Aggregate</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Delete.html" title="class in simpledb"><span class="typeNameLink">Delete</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Filter.html" title="class in simpledb"><span class="typeNameLink">Filter</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/HashEquiJoin.html" title="class in simpledb"><span class="typeNameLink">HashEquiJoin</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Insert.html" title="class in simpledb"><span class="typeNameLink">Insert</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Join.html" title="class in simpledb"><span class="typeNameLink">Join</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/OrderBy.html" title="class in simpledb"><span class="typeNameLink">OrderBy</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Project.html" title="class in simpledb"><span class="typeNameLink">Project</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="simpledb/OperatorCardinality.html" title="class in simpledb"><span class="typeNameLink">OperatorCardinality</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Parser.html" title="class in simpledb"><span class="typeNameLink">Parser</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Permissions.html" title="class in simpledb"><span class="typeNameLink">Permissions</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/PlanCache.html" title="class in simpledb"><span class="typeNameLink">PlanCache</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Predicate.html" title="class in simpledb"><span class="typeNameLink">Predicate</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/Query.html" title="class in simpledb"><span class="typeNameLink">Query</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/QueryPlanVisualizer.html" title="class in simpledb"><span class="typeNameLink">QueryPlanVisualizer</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb"><span class="typeNameLink">QueryPlanVisualizer.SubTreeDescriptor</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/RecordId.html" title="class in simpledb"><span class="typeNameLink">RecordId</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/SeqScan.html" title="class in simpledb"><span class="typeNameLink">SeqScan</span></a> (implements simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/SimpleDb.html" title="class in simpledb"><span class="typeNameLink">SimpleDb</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/StringAggregator.html" title="class in simpledb"><span class="typeNameLink">StringAggregator</span></a> (implements simpledb.<a href="simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/StringAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">StringAggregator.AggregateFields</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/StringField.html" title="class in simpledb"><span class="typeNameLink">StringField</span></a> (implements simpledb.<a href="simpledb/Field.html" title="interface in simpledb">Field</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/StringHistogram.html" title="class in simpledb"><span class="typeNameLink">StringHistogram</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/TableStats.html" title="class in simpledb"><span class="typeNameLink">TableStats</span></a></li>
-<li type="circle">java.lang.Thread (implements java.lang.Runnable)
-<ul>
-<li type="circle">simpledb.<a href="simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeDeleter</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeInserter</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeReader</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeWriter</span></a></li>
-</ul>
-</li>
-<li type="circle">java.lang.Throwable (implements java.io.Serializable)
-<ul>
-<li type="circle">java.lang.Exception
-<ul>
-<li type="circle">simpledb.<a href="simpledb/DbException.html" title="class in simpledb"><span class="typeNameLink">DbException</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/DeadlockException.html" title="class in simpledb"><span class="typeNameLink">DeadlockException</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/ParsingException.html" title="class in simpledb"><span class="typeNameLink">ParsingException</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/TransactionAbortedException.html" title="class in simpledb"><span class="typeNameLink">TransactionAbortedException</span></a></li>
-</ul>
-</li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="simpledb/Transaction.html" title="class in simpledb"><span class="typeNameLink">Transaction</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/TransactionId.html" title="class in simpledb"><span class="typeNameLink">TransactionId</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/Tuple.html" title="class in simpledb"><span class="typeNameLink">Tuple</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/TupleArrayIterator.html" title="class in simpledb"><span class="typeNameLink">TupleArrayIterator</span></a> (implements simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/TupleComparator.html" title="class in simpledb"><span class="typeNameLink">TupleComparator</span></a> (implements java.util.Comparator&lt;T&gt;)</li>
-<li type="circle">simpledb.<a href="simpledb/TupleDesc.html" title="class in simpledb"><span class="typeNameLink">TupleDesc</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb"><span class="typeNameLink">TupleDesc.TDItem</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/TupleIterator.html" title="class in simpledb"><span class="typeNameLink">TupleIterator</span></a> (implements simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)</li>
-<li type="circle">simpledb.<a href="simpledb/Utility.html" title="class in simpledb"><span class="typeNameLink">Utility</span></a></li>
-</ul>
-</li>
-</ul>
-<h2 title="Interface Hierarchy">Interface Hierarchy</h2>
-<ul>
-<li type="circle">simpledb.<a href="simpledb/DbFile.html" title="interface in simpledb"><span class="typeNameLink">DbFile</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/DbFileIterator.html" title="interface in simpledb"><span class="typeNameLink">DbFileIterator</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/Page.html" title="interface in simpledb"><span class="typeNameLink">Page</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/PageId.html" title="interface in simpledb"><span class="typeNameLink">PageId</span></a></li>
-<li type="circle">java.io.Serializable
-<ul>
-<li type="circle">simpledb.<a href="simpledb/Aggregator.html" title="interface in simpledb"><span class="typeNameLink">Aggregator</span></a></li>
-<li type="circle">simpledb.<a href="simpledb/DbIterator.html" title="interface in simpledb"><span class="typeNameLink">DbIterator</span></a>
-<ul>
-<li type="circle">simpledb.<a href="simpledb/IndexDbIterator.html" title="interface in simpledb"><span class="typeNameLink">IndexDbIterator</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="simpledb/Field.html" title="interface in simpledb"><span class="typeNameLink">Field</span></a></li>
-</ul>
-</li>
-</ul>
-<h2 title="Enum Hierarchy">Enum Hierarchy</h2>
-<ul>
-<li type="circle">java.lang.Object
-<ul>
-<li type="circle">java.lang.Enum&lt;E&gt; (implements java.lang.Comparable&lt;T&gt;, java.io.Serializable)
-<ul>
-<li type="circle">simpledb.<a href="simpledb/Aggregator.Op.html" title="enum in simpledb"><span class="typeNameLink">Aggregator.Op</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/Predicate.Op.html" title="enum in simpledb"><span class="typeNameLink">Predicate.Op</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="simpledb/Type.html" title="enum in simpledb"><span class="typeNameLink">Type</span></a> (implements java.io.Serializable)</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li class="navBarCell1Rev">Tree</li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li><a href="index-all.html">Index</a></li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?overview-tree.html" target="_top">Frames</a></li>
-<li><a href="overview-tree.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/package-list lab4/javadoc/package-list
--- lab3/javadoc/package-list	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/package-list	1969-12-31 18:00:00.000000000 -0600
@@ -1 +0,0 @@
-simpledb
diff -ruN lab3/javadoc/script.js lab4/javadoc/script.js
--- lab3/javadoc/script.js	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/script.js	1969-12-31 18:00:00.000000000 -0600
@@ -1,30 +0,0 @@
-function show(type)
-{
-    count = 0;
-    for (var key in methods) {
-        var row = document.getElementById(key);
-        if ((methods[key] &  type) != 0) {
-            row.style.display = '';
-            row.className = (count++ % 2) ? rowColor : altColor;
-        }
-        else
-            row.style.display = 'none';
-    }
-    updateTabs(type);
-}
-
-function updateTabs(type)
-{
-    for (var value in tabs) {
-        var sNode = document.getElementById(tabs[value][0]);
-        var spanNode = sNode.firstChild;
-        if (value == type) {
-            sNode.className = activeTableTab;
-            spanNode.innerHTML = tabs[value][1];
-        }
-        else {
-            sNode.className = tableTab;
-            spanNode.innerHTML = "<a href=\"javascript:show("+ value + ");\">" + tabs[value][1] + "</a>";
-        }
-    }
-}
diff -ruN lab3/javadoc/serialized-form.html lab4/javadoc/serialized-form.html
--- lab3/javadoc/serialized-form.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/serialized-form.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,882 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Serialized Form</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
-<script type="text/javascript" src="script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Serialized Form";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li><a href="index-all.html">Index</a></li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?serialized-form.html" target="_top">Frames</a></li>
-<li><a href="serialized-form.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<div class="header">
-<h1 title="Serialized Form" class="title">Serialized Form</h1>
-</div>
-<div class="serializedFormContainer">
-<ul class="blockList">
-<li class="blockList">
-<h2 title="Package">Package&nbsp;simpledb</h2>
-<ul class="blockList">
-<li class="blockList"><a name="simpledb.Aggregate">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Aggregate.html" title="class in simpledb">simpledb.Aggregate</a> extends <a href="simpledb/Operator.html" title="class in simpledb">Operator</a> implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>td</h4>
-<pre><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-<li class="blockList">
-<h4>child</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-<li class="blockList">
-<h4>it</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> it</pre>
-</li>
-<li class="blockList">
-<h4>agg</h4>
-<pre><a href="simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a> agg</pre>
-</li>
-<li class="blockList">
-<h4>aop</h4>
-<pre><a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> aop</pre>
-</li>
-<li class="blockList">
-<h4>gFieldName</h4>
-<pre>java.lang.String gFieldName</pre>
-</li>
-<li class="blockList">
-<h4>aFieldName</h4>
-<pre>java.lang.String aFieldName</pre>
-</li>
-<li class="blockList">
-<h4>afield</h4>
-<pre>int afield</pre>
-</li>
-<li class="blockListLast">
-<h4>gfield</h4>
-<pre>int gfield</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.BTreeEntry">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/BTreeEntry.html" title="class in simpledb">simpledb.BTreeEntry</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>key</h4>
-<pre><a href="simpledb/Field.html" title="interface in simpledb">Field</a> key</pre>
-<div class="block">The key of this entry</div>
-</li>
-<li class="blockList">
-<h4>leftChild</h4>
-<pre><a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> leftChild</pre>
-<div class="block">The left child page id</div>
-</li>
-<li class="blockList">
-<h4>rightChild</h4>
-<pre><a href="simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> rightChild</pre>
-<div class="block">The right child page id</div>
-</li>
-<li class="blockListLast">
-<h4>rid</h4>
-<pre><a href="simpledb/RecordId.html" title="class in simpledb">RecordId</a> rid</pre>
-<div class="block">The record id of this entry</div>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.BTreeScan">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/BTreeScan.html" title="class in simpledb">simpledb.BTreeScan</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>isOpen</h4>
-<pre>boolean isOpen</pre>
-</li>
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-<li class="blockList">
-<h4>myTd</h4>
-<pre><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> myTd</pre>
-</li>
-<li class="blockList">
-<h4>ipred</h4>
-<pre><a href="simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a> ipred</pre>
-</li>
-<li class="blockList">
-<h4>tablename</h4>
-<pre>java.lang.String tablename</pre>
-</li>
-<li class="blockListLast">
-<h4>alias</h4>
-<pre>java.lang.String alias</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.DbException">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/DbException.html" title="class in simpledb">simpledb.DbException</a> extends java.lang.Exception implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-</li>
-<li class="blockList"><a name="simpledb.DeadlockException">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/DeadlockException.html" title="class in simpledb">simpledb.DeadlockException</a> extends java.lang.Exception implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-</li>
-<li class="blockList"><a name="simpledb.Delete">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Delete.html" title="class in simpledb">simpledb.Delete</a> extends <a href="simpledb/Operator.html" title="class in simpledb">Operator</a> implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>child</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-<li class="blockList">
-<h4>returnTD</h4>
-<pre><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> returnTD</pre>
-</li>
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-<li class="blockListLast">
-<h4>processed</h4>
-<pre>boolean processed</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.Filter">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Filter.html" title="class in simpledb">simpledb.Filter</a> extends <a href="simpledb/Operator.html" title="class in simpledb">Operator</a> implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>pred</h4>
-<pre><a href="simpledb/Predicate.html" title="class in simpledb">Predicate</a> pred</pre>
-</li>
-<li class="blockListLast">
-<h4>child</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.HashEquiJoin">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/HashEquiJoin.html" title="class in simpledb">simpledb.HashEquiJoin</a> extends <a href="simpledb/Operator.html" title="class in simpledb">Operator</a> implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>pred</h4>
-<pre><a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a> pred</pre>
-</li>
-<li class="blockList">
-<h4>child1</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child1</pre>
-</li>
-<li class="blockList">
-<h4>child2</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child2</pre>
-</li>
-<li class="blockList">
-<h4>comboTD</h4>
-<pre><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> comboTD</pre>
-</li>
-<li class="blockListLast">
-<h4>map</h4>
-<pre>java.util.HashMap&lt;K,V&gt; map</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.IndexPredicate">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/IndexPredicate.html" title="class in simpledb">simpledb.IndexPredicate</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>op</h4>
-<pre><a href="simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> op</pre>
-</li>
-<li class="blockListLast">
-<h4>fieldvalue</h4>
-<pre><a href="simpledb/Field.html" title="interface in simpledb">Field</a> fieldvalue</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.Insert">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Insert.html" title="class in simpledb">simpledb.Insert</a> extends <a href="simpledb/Operator.html" title="class in simpledb">Operator</a> implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>child</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-<li class="blockList">
-<h4>tableId</h4>
-<pre>int tableId</pre>
-</li>
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-<li class="blockList">
-<h4>returnTD</h4>
-<pre><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> returnTD</pre>
-</li>
-<li class="blockListLast">
-<h4>processed</h4>
-<pre>boolean processed</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.IntegerAggregator">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/IntegerAggregator.html" title="class in simpledb">simpledb.IntegerAggregator</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>what</h4>
-<pre><a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> what</pre>
-</li>
-<li class="blockList">
-<h4>gbfield</h4>
-<pre>int gbfield</pre>
-</li>
-<li class="blockList">
-<h4>gbfieldtype</h4>
-<pre><a href="simpledb/Type.html" title="enum in simpledb">Type</a> gbfieldtype</pre>
-</li>
-<li class="blockList">
-<h4>afield</h4>
-<pre>int afield</pre>
-</li>
-<li class="blockListLast">
-<h4>groups</h4>
-<pre>java.util.HashMap&lt;K,V&gt; groups</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.IntField">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/IntField.html" title="class in simpledb">simpledb.IntField</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockListLast">
-<h4>value</h4>
-<pre>int value</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.Join">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Join.html" title="class in simpledb">simpledb.Join</a> extends <a href="simpledb/Operator.html" title="class in simpledb">Operator</a> implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>pred</h4>
-<pre><a href="simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a> pred</pre>
-</li>
-<li class="blockList">
-<h4>child1</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child1</pre>
-</li>
-<li class="blockList">
-<h4>child2</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child2</pre>
-</li>
-<li class="blockList">
-<h4>comboTD</h4>
-<pre><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> comboTD</pre>
-</li>
-<li class="blockListLast">
-<h4>t1</h4>
-<pre><a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a> t1</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.JoinPredicate">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/JoinPredicate.html" title="class in simpledb">simpledb.JoinPredicate</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>op</h4>
-<pre><a href="simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> op</pre>
-</li>
-<li class="blockList">
-<h4>field1</h4>
-<pre>int field1</pre>
-</li>
-<li class="blockListLast">
-<h4>field2</h4>
-<pre>int field2</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.Operator">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Operator.html" title="class in simpledb">simpledb.Operator</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre><a href="simpledb/Tuple.html" title="class in simpledb">Tuple</a> next</pre>
-</li>
-<li class="blockList">
-<h4>open</h4>
-<pre>boolean open</pre>
-</li>
-<li class="blockListLast">
-<h4>estimatedCardinality</h4>
-<pre>int estimatedCardinality</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.OrderBy">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/OrderBy.html" title="class in simpledb">simpledb.OrderBy</a> extends <a href="simpledb/Operator.html" title="class in simpledb">Operator</a> implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>child</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-<li class="blockList">
-<h4>td</h4>
-<pre><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-<li class="blockList">
-<h4>childTups</h4>
-<pre>java.util.ArrayList&lt;E&gt; childTups</pre>
-</li>
-<li class="blockList">
-<h4>orderByField</h4>
-<pre>int orderByField</pre>
-</li>
-<li class="blockList">
-<h4>orderByFieldName</h4>
-<pre>java.lang.String orderByFieldName</pre>
-</li>
-<li class="blockList">
-<h4>it</h4>
-<pre>java.util.Iterator&lt;E&gt; it</pre>
-</li>
-<li class="blockListLast">
-<h4>asc</h4>
-<pre>boolean asc</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.ParsingException">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/ParsingException.html" title="class in simpledb">simpledb.ParsingException</a> extends java.lang.Exception implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-</li>
-<li class="blockList"><a name="simpledb.Predicate">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Predicate.html" title="class in simpledb">simpledb.Predicate</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>op</h4>
-<pre><a href="simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> op</pre>
-</li>
-<li class="blockList">
-<h4>field</h4>
-<pre>int field</pre>
-</li>
-<li class="blockListLast">
-<h4>operand</h4>
-<pre><a href="simpledb/Field.html" title="interface in simpledb">Field</a> operand</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.Project">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Project.html" title="class in simpledb">simpledb.Project</a> extends <a href="simpledb/Operator.html" title="class in simpledb">Operator</a> implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>child</h4>
-<pre><a href="simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-<li class="blockList">
-<h4>td</h4>
-<pre><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-<li class="blockListLast">
-<h4>outFieldIds</h4>
-<pre>java.util.ArrayList&lt;E&gt; outFieldIds</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.Query">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Query.html" title="class in simpledb">simpledb.Query</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockListLast">
-<h4>tid</h4>
-<pre><a href="simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.RecordId">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/RecordId.html" title="class in simpledb">simpledb.RecordId</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-</li>
-<li class="blockList"><a name="simpledb.SeqScan">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/SeqScan.html" title="class in simpledb">simpledb.SeqScan</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-</li>
-<li class="blockList"><a name="simpledb.StringAggregator">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/StringAggregator.html" title="class in simpledb">simpledb.StringAggregator</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>what</h4>
-<pre><a href="simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> what</pre>
-</li>
-<li class="blockList">
-<h4>gbfield</h4>
-<pre>int gbfield</pre>
-</li>
-<li class="blockList">
-<h4>gbfieldtype</h4>
-<pre><a href="simpledb/Type.html" title="enum in simpledb">Type</a> gbfieldtype</pre>
-</li>
-<li class="blockList">
-<h4>afield</h4>
-<pre>int afield</pre>
-</li>
-<li class="blockListLast">
-<h4>groups</h4>
-<pre>java.util.HashMap&lt;K,V&gt; groups</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.StringField">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/StringField.html" title="class in simpledb">simpledb.StringField</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>value</h4>
-<pre>java.lang.String value</pre>
-</li>
-<li class="blockListLast">
-<h4>maxSize</h4>
-<pre>int maxSize</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.TransactionAbortedException">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/TransactionAbortedException.html" title="class in simpledb">simpledb.TransactionAbortedException</a> extends java.lang.Exception implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-</li>
-<li class="blockList"><a name="simpledb.TransactionId">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/TransactionId.html" title="class in simpledb">simpledb.TransactionId</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockListLast">
-<h4>myid</h4>
-<pre>long myid</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.Tuple">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/Tuple.html" title="class in simpledb">simpledb.Tuple</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-</li>
-<li class="blockList"><a name="simpledb.TupleDesc">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/TupleDesc.html" title="class in simpledb">simpledb.TupleDesc</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-</li>
-<li class="blockList"><a name="simpledb.TupleDesc.TDItem">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/TupleDesc.TDItem.html" title="class in simpledb">simpledb.TupleDesc.TDItem</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>fieldType</h4>
-<pre><a href="simpledb/Type.html" title="enum in simpledb">Type</a> fieldType</pre>
-<div class="block">The type of the field</div>
-</li>
-<li class="blockListLast">
-<h4>fieldName</h4>
-<pre>java.lang.String fieldName</pre>
-<div class="block">The name of the field</div>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-<li class="blockList"><a name="simpledb.TupleIterator">
-<!--   -->
-</a>
-<h3>Class <a href="simpledb/TupleIterator.html" title="class in simpledb">simpledb.TupleIterator</a> extends java.lang.Object implements Serializable</h3>
-<dl class="nameValue">
-<dt>serialVersionUID:</dt>
-<dd>1L</dd>
-</dl>
-<ul class="blockList">
-<li class="blockList">
-<h3>Serialized Fields</h3>
-<ul class="blockList">
-<li class="blockList">
-<h4>i</h4>
-<pre>java.util.Iterator&lt;E&gt; i</pre>
-</li>
-<li class="blockList">
-<h4>td</h4>
-<pre><a href="simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-<li class="blockListLast">
-<h4>tuples</h4>
-<pre>java.lang.Iterable&lt;T&gt; tuples</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="overview-tree.html">Tree</a></li>
-<li><a href="deprecated-list.html">Deprecated</a></li>
-<li><a href="index-all.html">Index</a></li>
-<li><a href="help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="index.html?serialized-form.html" target="_top">Frames</a></li>
-<li><a href="serialized-form.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/AbstractDbFileIterator.html lab4/javadoc/simpledb/AbstractDbFileIterator.html
--- lab3/javadoc/simpledb/AbstractDbFileIterator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/AbstractDbFileIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,408 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>AbstractDbFileIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="AbstractDbFileIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":6};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev&nbsp;Class</li>
-<li><a href="../simpledb/Aggregate.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/AbstractDbFileIterator.html" target="_top">Frames</a></li>
-<li><a href="AbstractDbFileIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class AbstractDbFileIterator" class="title">Class AbstractDbFileIterator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.AbstractDbFileIterator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></dd>
-</dl>
-<dl>
-<dt>Direct Known Subclasses:</dt>
-<dd><a href="../simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a>, <a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public abstract class <span class="typeNameLabel">AbstractDbFileIterator</span>
-extends java.lang.Object
-implements <a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></pre>
-<div class="block">Helper for implementing DbFileIterators. Handles hasNext()/next() logic.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/AbstractDbFileIterator.html#next">next</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/AbstractDbFileIterator.html#AbstractDbFileIterator--">AbstractDbFileIterator</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/AbstractDbFileIterator.html#close--">close</a></span>()</code>
-<div class="block">If subclasses override this, they should call super.close().</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/AbstractDbFileIterator.html#hasNext--">hasNext</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/AbstractDbFileIterator.html#next--">next</a></span>()</code>
-<div class="block">Gets the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>protected abstract <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/AbstractDbFileIterator.html#readNext--">readNext</a></span>()</code>
-<div class="block">Reads the next tuple from the underlying source.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.DbFileIterator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;simpledb.<a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></h3>
-<code><a href="../simpledb/DbFileIterator.html#open--">open</a>, <a href="../simpledb/DbFileIterator.html#rewind--">rewind</a></code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="next">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>next</h4>
-<pre>private&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a> next</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="AbstractDbFileIterator--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>AbstractDbFileIterator</h4>
-<pre>public&nbsp;AbstractDbFileIterator()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()
-                throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                       <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFileIterator.html#hasNext--">hasNext</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if there are more tuples available, false if no more tuples or iterator isn't open.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()
-           throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                  java.util.NoSuchElementException</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbFileIterator.html#next--">DbFileIterator</a></code></span></div>
-<div class="block">Gets the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFileIterator.html#next--">next</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The next tuple in the iterator.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if there are no more tuples</dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block">If subclasses override this, they should call super.close().</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFileIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="readNext--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>readNext</h4>
-<pre>protected abstract&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;readNext()
-                           throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Reads the next tuple from the underlying source.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next Tuple in the iterator, null if the iteration is finished.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev&nbsp;Class</li>
-<li><a href="../simpledb/Aggregate.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/AbstractDbFileIterator.html" target="_top">Frames</a></li>
-<li><a href="AbstractDbFileIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Aggregate.html lab4/javadoc/simpledb/Aggregate.html
--- lab3/javadoc/simpledb/Aggregate.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/Aggregate.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,748 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>Aggregate</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Aggregate";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":9,"i10":10,"i11":10,"i12":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Aggregator.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Aggregate.html" target="_top">Frames</a></li>
-<li><a href="Aggregate.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Aggregate" class="title">Class Aggregate</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/Operator.html" title="class in simpledb">simpledb.Operator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Aggregate</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Aggregate</span>
-extends <a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></pre>
-<div class="block">The Aggregation operator that computes an aggregate (e.g., sum, avg, max,
- min). Note that we only support aggregates over a single column, grouped by a
- single column.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Aggregate">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#afield">afield</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#aFieldName">aFieldName</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#agg">agg</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#aop">aop</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#child">child</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#gfield">gfield</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#gFieldName">gFieldName</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#it">it</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#td">td</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#Aggregate-simpledb.DbIterator-int-int-simpledb.Aggregator.Op-">Aggregate</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child,
-         int&nbsp;afield,
-         int&nbsp;gfield,
-         <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;aop)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#aggregateField--">aggregateField</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#aggregateFieldName--">aggregateFieldName</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#aggregateOp--">aggregateOp</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#close--">close</a></span>()</code>
-<div class="block">Closes this iterator.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#fetchNext--">fetchNext</a></span>()</code>
-<div class="block">Returns the next tuple.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#getChildren--">getChildren</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc of this Aggregate.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#groupField--">groupField</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#groupFieldName--">groupFieldName</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#nameOfAggregatorOp-simpledb.Aggregator.Op-">nameOfAggregatorOp</a></span>(<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;aop)</code>&nbsp;</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregate.html#setChildren-simpledb.DbIterator:A-">setChildren</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</code>
-<div class="block">Set the children(child) of this operator.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.Operator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></h3>
-<code><a href="../simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality</a>, <a href="../simpledb/Operator.html#hasNext--">hasNext</a>, <a href="../simpledb/Operator.html#next--">next</a>, <a href="../simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Aggregate.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="td">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>td</h4>
-<pre>private&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-</ul>
-<a name="child">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>child</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-</ul>
-<a name="it">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>it</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> it</pre>
-</li>
-</ul>
-<a name="agg">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>agg</h4>
-<pre>private&nbsp;<a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a> agg</pre>
-</li>
-</ul>
-<a name="aop">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>aop</h4>
-<pre>private&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> aop</pre>
-</li>
-</ul>
-<a name="gFieldName">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>gFieldName</h4>
-<pre>private&nbsp;java.lang.String gFieldName</pre>
-</li>
-</ul>
-<a name="aFieldName">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>aFieldName</h4>
-<pre>private&nbsp;java.lang.String aFieldName</pre>
-</li>
-</ul>
-<a name="afield">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>afield</h4>
-<pre>private&nbsp;int afield</pre>
-</li>
-</ul>
-<a name="gfield">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>gfield</h4>
-<pre>private&nbsp;int gfield</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Aggregate-simpledb.DbIterator-int-int-simpledb.Aggregator.Op-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Aggregate</h4>
-<pre>public&nbsp;Aggregate(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child,
-                 int&nbsp;afield,
-                 int&nbsp;gfield,
-                 <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;aop)</pre>
-<div class="block">Constructor.
- 
- Implementation hint: depending on the type of afield, you will want to
- construct an <code>IntAggregator</code> or <a href="../simpledb/StringAggregator.html" title="class in simpledb"><code>StringAggregator</code></a> to help
- you with your implementation of readNext().</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>child</code> - The DbIterator that is feeding us tuples.</dd>
-<dd><code>afield</code> - The column over which we are computing an aggregate.</dd>
-<dd><code>gfield</code> - The column over which we are grouping the result, or -1 if
-            there is no grouping</dd>
-<dd><code>aop</code> - The aggregation operator to use</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="groupField--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>groupField</h4>
-<pre>public&nbsp;int&nbsp;groupField()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>If this aggregate is accompanied by a groupby, return the groupby
-         field index in the <b>INPUT</b> tuples. If not, return
-         <a href="../simpledb/Aggregator.html#NO_GROUPING"><code>Aggregator.NO_GROUPING</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="groupFieldName--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>groupFieldName</h4>
-<pre>public&nbsp;java.lang.String&nbsp;groupFieldName()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>If this aggregate is accompanied by a group by, return the name
-         of the groupby field in the <b>OUTPUT</b> tuples If not, return
-         null;</dd>
-</dl>
-</li>
-</ul>
-<a name="aggregateField--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>aggregateField</h4>
-<pre>public&nbsp;int&nbsp;aggregateField()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the aggregate field</dd>
-</dl>
-</li>
-</ul>
-<a name="aggregateFieldName--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>aggregateFieldName</h4>
-<pre>public&nbsp;java.lang.String&nbsp;aggregateFieldName()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the name of the aggregate field in the <b>OUTPUT</b>
-         tuples</dd>
-</dl>
-</li>
-</ul>
-<a name="aggregateOp--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>aggregateOp</h4>
-<pre>public&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;aggregateOp()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the aggregate operator</dd>
-</dl>
-</li>
-</ul>
-<a name="nameOfAggregatorOp-simpledb.Aggregator.Op-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>nameOfAggregatorOp</h4>
-<pre>public static&nbsp;java.lang.String&nbsp;nameOfAggregatorOp(<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;aop)</pre>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws java.util.NoSuchElementException,
-                 <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#open--">open</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="fetchNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fetchNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;fetchNext()
-                   throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Returns the next tuple. If there is a group by field, then the first
- field is the field by which we are grouping, and the second field is the
- result of computing the aggregate, If there is no group by field, then
- the result tuple should contain one field representing the result of the
- aggregate. Should return null if there are no more tuples.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#fetchNext--">fetchNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next Tuple in the iterator, or null if the iteration is
-         finished.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block">Returns the TupleDesc of this Aggregate. If there is no group by field,
- this will have one field - the aggregate column. If there is a group by
- field, the first field will be the group by field, and the second will be
- the aggregate value column.
- 
- The name of an aggregate column should be informative. For example:
- "aggName(aop) (child_td.getFieldName(afield))" where aop and afield are
- given in the constructor, and child_td is the TupleDesc of the child
- iterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the TupleDesc of the output tuples of this operator</dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#close--">Operator</a></code></span></div>
-<div class="block">Closes this iterator. If overridden by a subclass, they should call
- super.close() in order for Operator's internal state to be consistent.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildren--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getChildren</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;getChildren()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getChildren--">getChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the children DbIterators of this operator. If there is
-         only one child, return an array of only one element. For join
-         operators, the order of the children is not important. But they
-         should be consistent among multiple calls.</dd>
-</dl>
-</li>
-</ul>
-<a name="setChildren-simpledb.DbIterator:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setChildren</h4>
-<pre>public&nbsp;void&nbsp;setChildren(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">Operator</a></code></span></div>
-<div class="block">Set the children(child) of this operator. If the operator has only one
- child, children[0] should be used. If the operator is a join, children[0]
- and children[1] should be used.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>children</code> - the DbIterators which are to be set as the children(child) of
-            this operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Aggregator.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Aggregate.html" target="_top">Frames</a></li>
-<li><a href="Aggregate.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Aggregator.Op.html lab4/javadoc/simpledb/Aggregator.Op.html
--- lab3/javadoc/simpledb/Aggregator.Op.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/Aggregator.Op.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,476 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>Aggregator.Op</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Aggregator.Op";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9,"i2":10,"i3":9,"i4":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Aggregator.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeChecker.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Aggregator.Op.html" target="_top">Frames</a></li>
-<li><a href="Aggregator.Op.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#enum.constant.summary">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#enum.constant.detail">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Enum Aggregator.Op" class="title">Enum Aggregator.Op</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Enum&lt;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&gt;</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Aggregator.Op</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, java.lang.Comparable&lt;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&gt;</dd>
-</dl>
-<dl>
-<dt>Enclosing interface:</dt>
-<dd><a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public static enum <span class="typeNameLabel">Aggregator.Op</span>
-extends java.lang.Enum&lt;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&gt;
-implements java.io.Serializable</pre>
-<div class="block">SUM_COUNT and SC_AVG will
- only be used in lab7, you are not required
- to implement them until then.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== ENUM CONSTANT SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="enum.constant.summary">
-<!--   -->
-</a>
-<h3>Enum Constant Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Enum Constant Summary table, listing enum constants, and an explanation">
-<caption><span>Enum Constants</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Enum Constant and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#AVG">AVG</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#COUNT">COUNT</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#MAX">MAX</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#MIN">MIN</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#SC_AVG">SC_AVG</a></span></code>
-<div class="block">SC_AVG: compute the avg of a set of SUM_COUNT tuples,
- will be used to compute distributed avg in lab7.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#SUM">SUM</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#SUM_COUNT">SUM_COUNT</a></span></code>
-<div class="block">SUM_COUNT: compute sum and count simultaneously, will be
- needed to compute distributed avg in lab7.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#getOp-int-">getOp</a></span>(int&nbsp;i)</code>
-<div class="block">Interface to access operations by integer value for command-line
- convenience.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#getOp-java.lang.String-">getOp</a></span>(java.lang.String&nbsp;s)</code>
-<div class="block">Interface to access operations by a string containing an integer
- index for command-line convenience.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#valueOf-java.lang.String-">valueOf</a></span>(java.lang.String&nbsp;name)</code>
-<div class="block">Returns the enum constant of this type with the specified name.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html#values--">values</a></span>()</code>
-<div class="block">Returns an array containing the constants of this enum type, in
-the order they are declared.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Enum">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Enum</h3>
-<code>clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>getClass, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ ENUM CONSTANT DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="enum.constant.detail">
-<!--   -->
-</a>
-<h3>Enum Constant Detail</h3>
-<a name="MIN">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>MIN</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> MIN</pre>
-</li>
-</ul>
-<a name="MAX">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>MAX</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> MAX</pre>
-</li>
-</ul>
-<a name="SUM">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>SUM</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> SUM</pre>
-</li>
-</ul>
-<a name="AVG">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>AVG</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> AVG</pre>
-</li>
-</ul>
-<a name="COUNT">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>COUNT</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> COUNT</pre>
-</li>
-</ul>
-<a name="SUM_COUNT">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>SUM_COUNT</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> SUM_COUNT</pre>
-<div class="block">SUM_COUNT: compute sum and count simultaneously, will be
- needed to compute distributed avg in lab7.</div>
-</li>
-</ul>
-<a name="SC_AVG">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>SC_AVG</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> SC_AVG</pre>
-<div class="block">SC_AVG: compute the avg of a set of SUM_COUNT tuples,
- will be used to compute distributed avg in lab7.</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="values--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>values</h4>
-<pre>public static&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>[]&nbsp;values()</pre>
-<div class="block">Returns an array containing the constants of this enum type, in
-the order they are declared.  This method may be used to iterate
-over the constants as follows:
-<pre>
-for (Aggregator.Op c : Aggregator.Op.values())
-&nbsp;   System.out.println(c);
-</pre></div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an array containing the constants of this enum type, in the order they are declared</dd>
-</dl>
-</li>
-</ul>
-<a name="valueOf-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>valueOf</h4>
-<pre>public static&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;valueOf(java.lang.String&nbsp;name)</pre>
-<div class="block">Returns the enum constant of this type with the specified name.
-The string must match <i>exactly</i> an identifier used to declare an
-enum constant in this type.  (Extraneous whitespace characters are 
-not permitted.)</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>name</code> - the name of the enum constant to be returned.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the enum constant with the specified name</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.lang.IllegalArgumentException</code> - if this enum type has no constant with the specified name</dd>
-<dd><code>java.lang.NullPointerException</code> - if the argument is null</dd>
-</dl>
-</li>
-</ul>
-<a name="getOp-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOp</h4>
-<pre>public static&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;getOp(java.lang.String&nbsp;s)</pre>
-<div class="block">Interface to access operations by a string containing an integer
- index for command-line convenience.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>s</code> - a string containing a valid integer Op index</dd>
-</dl>
-</li>
-</ul>
-<a name="getOp-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOp</h4>
-<pre>public static&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;getOp(int&nbsp;i)</pre>
-<div class="block">Interface to access operations by integer value for command-line
- convenience.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - a valid integer Op index</dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Enum&lt;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Aggregator.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeChecker.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Aggregator.Op.html" target="_top">Frames</a></li>
-<li><a href="Aggregator.Op.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#enum.constant.summary">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#enum.constant.detail">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Aggregator.html lab4/javadoc/simpledb/Aggregator.html
--- lab3/javadoc/simpledb/Aggregator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/Aggregator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,322 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>Aggregator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Aggregator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":6,"i1":6};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Aggregate.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Aggregator.Op.html" title="enum in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Aggregator.html" target="_top">Frames</a></li>
-<li><a href="Aggregator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Interface Aggregator" class="title">Interface Aggregator</h2>
-</div>
-<div class="contentContainer">
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Superinterfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<dl>
-<dt>All Known Implementing Classes:</dt>
-<dd><a href="../simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a>, <a href="../simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public interface <span class="typeNameLabel">Aggregator</span>
-extends java.io.Serializable</pre>
-<div class="block">The common interface for any class that can compute an aggregate over a
- list of Tuples.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Interface and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></span></code>
-<div class="block">SUM_COUNT and SC_AVG will
- only be used in lab7, you are not required
- to implement them until then.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.html#NO_GROUPING">NO_GROUPING</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.html#iterator--">iterator</a></span>()</code>
-<div class="block">Create a DbIterator over group aggregate results.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Aggregator.html#mergeTupleIntoGroup-simpledb.Tuple-">mergeTupleIntoGroup</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tup)</code>
-<div class="block">Merge a new tuple into the aggregate for a distinct group value;
- creates a new group aggregate result if the group value has not yet
- been encountered.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="NO_GROUPING">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>NO_GROUPING</h4>
-<pre>static final&nbsp;int NO_GROUPING</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Aggregator.NO_GROUPING">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="mergeTupleIntoGroup-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>mergeTupleIntoGroup</h4>
-<pre>void&nbsp;mergeTupleIntoGroup(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tup)</pre>
-<div class="block">Merge a new tuple into the aggregate for a distinct group value;
- creates a new group aggregate result if the group value has not yet
- been encountered.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tup</code> - the Tuple containing an aggregate field and a group-by field</dd>
-</dl>
-</li>
-</ul>
-<a name="iterator--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>iterator</h4>
-<pre><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;iterator()</pre>
-<div class="block">Create a DbIterator over group aggregate results.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/TupleIterator.html" title="class in simpledb"><code>for a possible helper</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Aggregate.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Aggregator.Op.html" title="enum in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Aggregator.html" target="_top">Frames</a></li>
-<li><a href="Aggregator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeChecker.SubtreeSummary.html lab4/javadoc/simpledb/BTreeChecker.SubtreeSummary.html
--- lab3/javadoc/simpledb/BTreeChecker.SubtreeSummary.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeChecker.SubtreeSummary.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,376 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeChecker.SubtreeSummary</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeChecker.SubtreeSummary";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeChecker.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeEntry.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeChecker.SubtreeSummary.html" target="_top">Frames</a></li>
-<li><a href="BTreeChecker.SubtreeSummary.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeChecker.SubtreeSummary" class="title">Class BTreeChecker.SubtreeSummary</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeChecker.SubtreeSummary</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/BTreeChecker.html" title="class in simpledb">BTreeChecker</a></dd>
-</dl>
-<hr>
-<br>
-<pre>static class <span class="typeNameLabel">BTreeChecker.SubtreeSummary</span>
-extends java.lang.Object</pre>
-<div class="block">This class is only used for error-checking code.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.SubtreeSummary.html#depth">depth</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.SubtreeSummary.html#leftmostId">leftmostId</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.SubtreeSummary.html#ptrLeft">ptrLeft</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.SubtreeSummary.html#ptrRight">ptrRight</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.SubtreeSummary.html#rightmostId">rightmostId</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.SubtreeSummary.html#SubtreeSummary--">SubtreeSummary</a></span>()</code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.SubtreeSummary.html#SubtreeSummary-simpledb.BTreeLeafPage-int-">SubtreeSummary</a></span>(<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;base,
-              int&nbsp;depth)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>(package private) static <a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.SubtreeSummary.html#checkAndMerge-simpledb.BTreeChecker.SubtreeSummary-simpledb.BTreeChecker.SubtreeSummary-">checkAndMerge</a></span>(<a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a>&nbsp;accleft,
-             <a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a>&nbsp;right)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="depth">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>depth</h4>
-<pre>public&nbsp;int depth</pre>
-</li>
-</ul>
-<a name="ptrLeft">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>ptrLeft</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> ptrLeft</pre>
-</li>
-</ul>
-<a name="leftmostId">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>leftmostId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> leftmostId</pre>
-</li>
-</ul>
-<a name="ptrRight">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>ptrRight</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> ptrRight</pre>
-</li>
-</ul>
-<a name="rightmostId">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>rightmostId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> rightmostId</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="SubtreeSummary--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>SubtreeSummary</h4>
-<pre>SubtreeSummary()</pre>
-</li>
-</ul>
-<a name="SubtreeSummary-simpledb.BTreeLeafPage-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>SubtreeSummary</h4>
-<pre>SubtreeSummary(<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;base,
-               int&nbsp;depth)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="checkAndMerge-simpledb.BTreeChecker.SubtreeSummary-simpledb.BTreeChecker.SubtreeSummary-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>checkAndMerge</h4>
-<pre>static&nbsp;<a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a>&nbsp;checkAndMerge(<a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a>&nbsp;accleft,
-                                                 <a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a>&nbsp;right)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeChecker.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeEntry.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeChecker.SubtreeSummary.html" target="_top">Frames</a></li>
-<li><a href="BTreeChecker.SubtreeSummary.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeChecker.html lab4/javadoc/simpledb/BTreeChecker.html
--- lab3/javadoc/simpledb/BTreeChecker.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeChecker.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,349 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeChecker</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeChecker";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Aggregator.Op.html" title="enum in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeChecker.html" target="_top">Frames</a></li>
-<li><a href="BTreeChecker.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeChecker" class="title">Class BTreeChecker</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeChecker</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeChecker</span>
-extends java.lang.Object</pre>
-<div class="block">Created by orm on 10/7/15.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Class and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></span></code>
-<div class="block">This class is only used for error-checking code.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.html#BTreeChecker--">BTreeChecker</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.html#checkRep-simpledb.BTreeFile-simpledb.TransactionId-java.util.HashMap-boolean-">checkRep</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bt,
-        <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-        java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-        boolean&nbsp;checkOccupancy)</code>
-<div class="block">checks the integrity of the tree:
- 1) parent pointers.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>(package private) static <a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeChecker.html#checkSubTree-simpledb.BTreeFile-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Field-simpledb.Field-simpledb.BTreePageId-boolean-int-">checkSubTree</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bt,
-            <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-            java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-            <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pageId,
-            <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;lowerBound,
-            <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;upperBound,
-            <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;parentId,
-            boolean&nbsp;checkOccupancy,
-            int&nbsp;depth)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeChecker--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeChecker</h4>
-<pre>public&nbsp;BTreeChecker()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="checkRep-simpledb.BTreeFile-simpledb.TransactionId-java.util.HashMap-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>checkRep</h4>
-<pre>public static&nbsp;void&nbsp;checkRep(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bt,
-                            <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                            java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                            boolean&nbsp;checkOccupancy)
-                     throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                            java.io.IOException,
-                            <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">checks the integrity of the tree:
- 1) parent pointers.
- 2) sibling pointers.
- 3) range invariants.
- 4) record to page pointers.
- 5) occupancy invariants. (if enabled)</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="checkSubTree-simpledb.BTreeFile-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Field-simpledb.Field-simpledb.BTreePageId-boolean-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>checkSubTree</h4>
-<pre>static&nbsp;<a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a>&nbsp;checkSubTree(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bt,
-                                                <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                                java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                                <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pageId,
-                                                <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;lowerBound,
-                                                <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;upperBound,
-                                                <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;parentId,
-                                                boolean&nbsp;checkOccupancy,
-                                                int&nbsp;depth)
-                                         throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                                                <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Aggregator.Op.html" title="enum in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeChecker.html" target="_top">Frames</a></li>
-<li><a href="BTreeChecker.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeEntry.html lab4/javadoc/simpledb/BTreeEntry.html
--- lab3/javadoc/simpledb/BTreeEntry.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeEntry.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,575 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeEntry</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeEntry";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFile.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeEntry.html" target="_top">Frames</a></li>
-<li><a href="BTreeEntry.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeEntry" class="title">Class BTreeEntry</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeEntry</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeEntry</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">Each instance of BTreeEntry stores one key and two child page ids. It is used
- by BTreeInternalPage as an abstraction to iterate through the entries stored inside. 
- All of the entries or tuples in the left child page should be less than or equal to 
- the key, and all of the entries or tuples in the right child page should be greater 
- than or equal to the key.
- 
- Note that updating a BTreeEntry does not actually change the data stored on the page 
- identified by its recordId. After updating a BTreeEntry object, you must call 
- BTreeInternalPage.updateEntry() in order for the changes to take effect.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb"><code>BTreeInternalPage</code></a>, 
-<a href="../simpledb/BTreeInternalPage.html#updateEntry-simpledb.BTreeEntry-"><code>BTreeInternalPage.updateEntry(BTreeEntry)</code></a>, 
-<a href="../serialized-form.html#simpledb.BTreeEntry">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#key">key</a></span></code>
-<div class="block">The key of this entry</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#leftChild">leftChild</a></span></code>
-<div class="block">The left child page id</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#rid">rid</a></span></code>
-<div class="block">The record id of this entry</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#rightChild">rightChild</a></span></code>
-<div class="block">The right child page id</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#BTreeEntry-simpledb.Field-simpledb.BTreePageId-simpledb.BTreePageId-">BTreeEntry</a></span>(<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;key,
-          <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;leftChild,
-          <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;rightChild)</code>
-<div class="block">Constructor to create a new BTreeEntry</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#getKey--">getKey</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#getLeftChild--">getLeftChild</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#getRecordId--">getRecordId</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#getRightChild--">getRightChild</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#setKey-simpledb.Field-">setKey</a></span>(<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;key)</code>
-<div class="block">Set the key for this entry.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#setLeftChild-simpledb.BTreePageId-">setLeftChild</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;leftChild)</code>
-<div class="block">Set the left child id for this entry.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#setRecordId-simpledb.RecordId-">setRecordId</a></span>(<a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a>&nbsp;rid)</code>
-<div class="block">set the record id for this entry</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#setRightChild-simpledb.BTreePageId-">setRightChild</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;rightChild)</code>
-<div class="block">Set the right child id for this entry.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeEntry.html#toString--">toString</a></span>()</code>
-<div class="block">Prints a representation of this BTreeEntry</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BTreeEntry.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="key">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>key</h4>
-<pre>private&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a> key</pre>
-<div class="block">The key of this entry</div>
-</li>
-</ul>
-<a name="leftChild">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>leftChild</h4>
-<pre>private&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> leftChild</pre>
-<div class="block">The left child page id</div>
-</li>
-</ul>
-<a name="rightChild">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rightChild</h4>
-<pre>private&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> rightChild</pre>
-<div class="block">The right child page id</div>
-</li>
-</ul>
-<a name="rid">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>rid</h4>
-<pre>private&nbsp;<a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a> rid</pre>
-<div class="block">The record id of this entry</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeEntry-simpledb.Field-simpledb.BTreePageId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeEntry</h4>
-<pre>public&nbsp;BTreeEntry(<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;key,
-                  <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;leftChild,
-                  <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;rightChild)</pre>
-<div class="block">Constructor to create a new BTreeEntry</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>key</code> - - the key</dd>
-<dd><code>leftChild</code> - - page id of the left child</dd>
-<dd><code>rightChild</code> - - page id of the right child</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getKey--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getKey</h4>
-<pre>public&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;getKey()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the key</dd>
-</dl>
-</li>
-</ul>
-<a name="getLeftChild--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getLeftChild</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getLeftChild()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the left child page id</dd>
-</dl>
-</li>
-</ul>
-<a name="getRightChild--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getRightChild</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getRightChild()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the right child page id</dd>
-</dl>
-</li>
-</ul>
-<a name="getRecordId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getRecordId</h4>
-<pre>public&nbsp;<a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a>&nbsp;getRecordId()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the record id of this entry, representing the location of this entry
- in a BTreeFile. May be null if this entry is not stored on any page in the file</dd>
-</dl>
-</li>
-</ul>
-<a name="setKey-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setKey</h4>
-<pre>public&nbsp;void&nbsp;setKey(<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;key)</pre>
-<div class="block">Set the key for this entry. Note that updating a BTreeEntry does not 
- actually change the data stored on the page identified by its recordId.  After
- calling this method, you must call BTreeInternalPage.updateEntry() in order for
- it to take effect.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>key</code> - - the new key</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeInternalPage.html#updateEntry-simpledb.BTreeEntry-"><code>BTreeInternalPage.updateEntry(BTreeEntry)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="setLeftChild-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setLeftChild</h4>
-<pre>public&nbsp;void&nbsp;setLeftChild(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;leftChild)</pre>
-<div class="block">Set the left child id for this entry.  Note that updating a BTreeEntry does not 
- actually change the data stored on the page identified by its recordId.  After
- calling this method, you must call BTreeInternalPage.updateEntry() in order for
- it to take effect.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>leftChild</code> - - the new left child</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeInternalPage.html#updateEntry-simpledb.BTreeEntry-"><code>BTreeInternalPage.updateEntry(BTreeEntry)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="setRightChild-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setRightChild</h4>
-<pre>public&nbsp;void&nbsp;setRightChild(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;rightChild)</pre>
-<div class="block">Set the right child id for this entry.  Note that updating a BTreeEntry does not 
- actually change the data stored on the page identified by its recordId.  After
- calling this method, you must call BTreeInternalPage.updateEntry() in order for
- it to take effect.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>rightChild</code> - - the new right child</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeInternalPage.html#updateEntry-simpledb.BTreeEntry-"><code>BTreeInternalPage.updateEntry(BTreeEntry)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="setRecordId-simpledb.RecordId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setRecordId</h4>
-<pre>public&nbsp;void&nbsp;setRecordId(<a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a>&nbsp;rid)</pre>
-<div class="block">set the record id for this entry</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>rid</code> - - the new record id</dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<div class="block">Prints a representation of this BTreeEntry</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFile.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeEntry.html" target="_top">Frames</a></li>
-<li><a href="BTreeEntry.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeFile.html lab4/javadoc/simpledb/BTreeFile.html
--- lab3/javadoc/simpledb/BTreeFile.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeFile.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,1534 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeFile</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeFile";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeEntry.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileEncoder.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFile.html" target="_top">Frames</a></li>
-<li><a href="BTreeFile.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeFile" class="title">Class BTreeFile</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeFile</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeFile</span>
-extends java.lang.Object
-implements <a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></pre>
-<div class="block">BTreeFile is an implementation of a DbFile that stores a B+ tree.
- Specifically, it stores a pointer to a root page,
- a set of internal pages, and a set of leaf pages, which contain a collection of tuples
- in sorted order. BTreeFile works closely with BTreeLeafPage, BTreeInternalPage,
- and BTreeRootPtrPage. The format of these pages is described in their constructors.</div>
-<dl>
-<dt><span class="simpleTagLabel">Author:</span></dt>
-<dd>Becca Taft</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeLeafPage.html#BTreeLeafPage-simpledb.BTreePageId-byte:A-int-"><code>BTreeLeafPage.BTreeLeafPage(simpledb.BTreePageId, byte[], int)</code></a>, 
-<a href="../simpledb/BTreeInternalPage.html#BTreeInternalPage-simpledb.BTreePageId-byte:A-int-"><code>BTreeInternalPage.BTreeInternalPage(simpledb.BTreePageId, byte[], int)</code></a>, 
-<a href="../simpledb/BTreeHeaderPage.html#BTreeHeaderPage-simpledb.BTreePageId-byte:A-"><code>BTreeHeaderPage.BTreeHeaderPage(simpledb.BTreePageId, byte[])</code></a>, 
-<a href="../simpledb/BTreeRootPtrPage.html#BTreeRootPtrPage-simpledb.BTreePageId-byte:A-"><code>BTreeRootPtrPage.BTreeRootPtrPage(simpledb.BTreePageId, byte[])</code></a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.io.File</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#f">f</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#keyField">keyField</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#tableid">tableid</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#td">td</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#BTreeFile-java.io.File-int-simpledb.TupleDesc-">BTreeFile</a></span>(java.io.File&nbsp;f,
-         int&nbsp;key,
-         <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td)</code>
-<div class="block">Constructs a B+ tree file backed by the specified file.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#deleteParentEntry-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">deleteParentEntry</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                 java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                 <a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a>&nbsp;leftPage,
-                 <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                 <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)</code>
-<div class="block">Method to encapsulate the process of deleting an entry (specifically the key and right child) 
- from a parent node.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Delete a tuple from this BTreeFile.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#findLeafPage-simpledb.TransactionId-simpledb.BTreePageId-simpledb.Permissions-simpledb.Field-">findLeafPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-            <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-            <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a>&nbsp;perm,
-            <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;f)</code>
-<div class="block">Convenience method to find a leaf page when there is no dirtypages HashMap.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#findLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Permissions-simpledb.Field-">findLeafPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-            java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-            <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-            <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a>&nbsp;perm,
-            <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;f)</code>
-<div class="block">Recursive function which finds and locks the leaf page in the B+ tree corresponding to
- the left-most page possibly containing the key field f.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#getEmptyPage-simpledb.TransactionId-java.util.HashMap-int-">getEmptyPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-            java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-            int&nbsp;pgcateg)</code>
-<div class="block">Method to encapsulate the process of creating a new page.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>protected int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#getEmptyPageNo-simpledb.TransactionId-java.util.HashMap-">getEmptyPageNo</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-              java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages)</code>
-<div class="block">Get the page number of the first empty page in this BTreeFile.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>java.io.File</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#getFile--">getFile</a></span>()</code>
-<div class="block">Returns the File backing this BTreeFile on disk.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#getId--">getId</a></span>()</code>
-<div class="block">Returns an ID uniquely identifying this BTreeFile.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#getPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Permissions-">getPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-       java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-       <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-       <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a>&nbsp;perm)</code>
-<div class="block">Method to encapsulate the process of locking/fetching a page.</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#getParentWithEmptySlots-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Field-">getParentWithEmptySlots</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                       java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                       <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;parentId,
-                       <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;field)</code>
-<div class="block">Method to encapsulate the process of getting a parent page ready to accept new entries.</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#getRootPtrPage-simpledb.TransactionId-java.util.HashMap-">getRootPtrPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-              java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages)</code>
-<div class="block">Get a read lock on the root pointer page.</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc of the table stored in this DbFile.</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#handleMinOccupancyInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-simpledb.BTreeEntry-">handleMinOccupancyInternalPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                              java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                              <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page,
-                              <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                              <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;leftEntry,
-                              <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;rightEntry)</code>
-<div class="block">Handle the case when an internal page becomes less than half full due to deletions.</div>
-</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#handleMinOccupancyLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-simpledb.BTreeEntry-">handleMinOccupancyLeafPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                          java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                          <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;page,
-                          <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                          <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;leftEntry,
-                          <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;rightEntry)</code>
-<div class="block">Handle the case when a leaf page becomes less than half full due to deletions.</div>
-</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#handleMinOccupancyPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-">handleMinOccupancyPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                      java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                      <a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a>&nbsp;page)</code>
-<div class="block">Handle the case when a B+ tree page becomes less than half full due to deletions.</div>
-</td>
-</tr>
-<tr id="i15" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#indexIterator-simpledb.TransactionId-simpledb.IndexPredicate-">indexIterator</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-             <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</code>
-<div class="block">get the specified tuples from the file based on its IndexPredicate value on
- behalf of the specified transaction.</div>
-</td>
-</tr>
-<tr id="i16" class="altColor">
-<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#insertTuple-simpledb.TransactionId-simpledb.Tuple-">insertTuple</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Insert a tuple into this BTreeFile, keeping the tuples in sorted order.</div>
-</td>
-</tr>
-<tr id="i17" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#iterator-simpledb.TransactionId-">iterator</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Get an iterator for all tuples in this B+ tree file in sorted order.</div>
-</td>
-</tr>
-<tr id="i18" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#keyField--">keyField</a></span>()</code>
-<div class="block">Returns the index of the field that this B+ tree is keyed on</div>
-</td>
-</tr>
-<tr id="i19" class="rowColor">
-<td class="colFirst"><code>protected void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#mergeInternalPages-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">mergeInternalPages</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                  java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                  <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;leftPage,
-                  <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;rightPage,
-                  <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                  <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)</code>
-<div class="block">Merge two internal pages by moving all entries from the right page to the left page 
- and "pulling down" the corresponding key from the parent entry.</div>
-</td>
-</tr>
-<tr id="i20" class="altColor">
-<td class="colFirst"><code>protected void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#mergeLeafPages-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">mergeLeafPages</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-              java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-              <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;leftPage,
-              <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;rightPage,
-              <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-              <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)</code>
-<div class="block">Merge two leaf pages by moving all tuples from the right page to the left page.</div>
-</td>
-</tr>
-<tr id="i21" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#numPages--">numPages</a></span>()</code>
-<div class="block">Returns the number of pages in this BTreeFile.</div>
-</td>
-</tr>
-<tr id="i22" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#readPage-simpledb.PageId-">readPage</a></span>(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)</code>
-<div class="block">Read a page from the file on disk.</div>
-</td>
-</tr>
-<tr id="i23" class="rowColor">
-<td class="colFirst"><code>protected void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#setEmptyPage-simpledb.TransactionId-java.util.HashMap-int-">setEmptyPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-            java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-            int&nbsp;emptyPageNo)</code>
-<div class="block">Mark a page in this BTreeFile as empty.</div>
-</td>
-</tr>
-<tr id="i24" class="altColor">
-<td class="colFirst"><code>protected <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#splitInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.Field-">splitInternalPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                 java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                 <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page,
-                 <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;field)</code>
-<div class="block">Split an internal page to make room for new entries and recursively split its parent page
- as needed to accommodate a new entry.</div>
-</td>
-</tr>
-<tr id="i25" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#splitLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.Field-">splitLeafPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-             java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-             <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;page,
-             <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;field)</code>
-<div class="block">Split a leaf page to make room for new tuples and recursively split the parent node
- as needed to accommodate a new entry.</div>
-</td>
-</tr>
-<tr id="i26" class="altColor">
-<td class="colFirst"><code>protected void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#stealFromLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-boolean-">stealFromLeafPage</a></span>(<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;page,
-                 <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;sibling,
-                 <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                 <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;entry,
-                 boolean&nbsp;isRightSibling)</code>
-<div class="block">Steal tuples from a sibling and copy them to the given page so that both pages are at least
- half full.</div>
-</td>
-</tr>
-<tr id="i27" class="rowColor">
-<td class="colFirst"><code>protected void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#stealFromLeftInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">stealFromLeftInternalPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                         java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                         <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page,
-                         <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;leftSibling,
-                         <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                         <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)</code>
-<div class="block">Steal entries from the left sibling and copy them to the given page so that both pages are at least
- half full.</div>
-</td>
-</tr>
-<tr id="i28" class="altColor">
-<td class="colFirst"><code>protected void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#stealFromRightInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">stealFromRightInternalPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                          java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                          <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page,
-                          <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;rightSibling,
-                          <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                          <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)</code>
-<div class="block">Steal entries from the right sibling and copy them to the given page so that both pages are at least
- half full.</div>
-</td>
-</tr>
-<tr id="i29" class="rowColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#updateParentPointer-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.BTreePageId-">updateParentPointer</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                   java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                   <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                   <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;child)</code>
-<div class="block">Helper function to update the parent pointer of a node.</div>
-</td>
-</tr>
-<tr id="i30" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#updateParentPointers-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-">updateParentPointers</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                    java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                    <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page)</code>
-<div class="block">Update the parent pointer of every child of the given page so that it correctly points to
- the parent</div>
-</td>
-</tr>
-<tr id="i31" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFile.html#writePage-simpledb.Page-">writePage</a></span>(<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;page)</code>
-<div class="block">Write a page to disk.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="f">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>f</h4>
-<pre>private final&nbsp;java.io.File f</pre>
-</li>
-</ul>
-<a name="td">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>td</h4>
-<pre>private final&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-</ul>
-<a name="tableid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tableid</h4>
-<pre>private final&nbsp;int tableid</pre>
-</li>
-</ul>
-<a name="keyField">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>keyField</h4>
-<pre>private&nbsp;int keyField</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeFile-java.io.File-int-simpledb.TupleDesc-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeFile</h4>
-<pre>public&nbsp;BTreeFile(java.io.File&nbsp;f,
-                 int&nbsp;key,
-                 <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td)</pre>
-<div class="block">Constructs a B+ tree file backed by the specified file.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>f</code> - - the file that stores the on-disk backing store for this B+ tree
-            file.</dd>
-<dd><code>key</code> - - the field which index is keyed on</dd>
-<dd><code>td</code> - - the tuple descriptor of tuples in the file</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getFile--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getFile</h4>
-<pre>public&nbsp;java.io.File&nbsp;getFile()</pre>
-<div class="block">Returns the File backing this BTreeFile on disk.</div>
-</li>
-</ul>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>public&nbsp;int&nbsp;getId()</pre>
-<div class="block">Returns an ID uniquely identifying this BTreeFile. Implementation note:
- you will need to generate this tableid somewhere and ensure that each
- BTreeFile has a "unique id," and that you always return the same value for
- a particular BTreeFile. We suggest hashing the absolute file name of the
- file underlying the BTreeFile, i.e. f.getAbsoluteFile().hashCode().</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#getId--">getId</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an ID uniquely identifying this BTreeFile.</dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block">Returns the TupleDesc of the table stored in this DbFile.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>TupleDesc of this DbFile.</dd>
-</dl>
-</li>
-</ul>
-<a name="readPage-simpledb.PageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readPage</h4>
-<pre>public&nbsp;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;readPage(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)</pre>
-<div class="block">Read a page from the file on disk. This should not be called directly
- but should be called from the BufferPool via getPage()</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#readPage-simpledb.PageId-">readPage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - - the id of the page to read from disk</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the page constructed from the contents on disk</dd>
-</dl>
-</li>
-</ul>
-<a name="writePage-simpledb.Page-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>writePage</h4>
-<pre>public&nbsp;void&nbsp;writePage(<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;page)
-               throws java.io.IOException</pre>
-<div class="block">Write a page to disk.  This should not be called directly but should 
- be called from the BufferPool when pages are flushed to disk</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#writePage-simpledb.Page-">writePage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>page</code> - - the page to write to disk</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code> - if the write fails</dd>
-</dl>
-</li>
-</ul>
-<a name="numPages--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>numPages</h4>
-<pre>public&nbsp;int&nbsp;numPages()</pre>
-<div class="block">Returns the number of pages in this BTreeFile.</div>
-</li>
-</ul>
-<a name="keyField--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>keyField</h4>
-<pre>public&nbsp;int&nbsp;keyField()</pre>
-<div class="block">Returns the index of the field that this B+ tree is keyed on</div>
-</li>
-</ul>
-<a name="findLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Permissions-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>findLeafPage</h4>
-<pre>private&nbsp;<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;findLeafPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                   java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                   <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                   <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a>&nbsp;perm,
-                                   <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;f)
-                            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Recursive function which finds and locks the leaf page in the B+ tree corresponding to
- the left-most page possibly containing the key field f. It locks all internal
- nodes along the path to the leaf node with READ_ONLY permission, and locks the 
- leaf node with permission perm.
- 
- If f is null, it finds the left-most leaf page -- used for the iterator</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>pid</code> - - the current page being searched</dd>
-<dd><code>perm</code> - - the permissions with which to lock the leaf page</dd>
-<dd><code>f</code> - - the field to search for</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the left-most leaf page possibly containing the key field f</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="findLeafPage-simpledb.TransactionId-simpledb.BTreePageId-simpledb.Permissions-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>findLeafPage</h4>
-<pre><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;findLeafPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                           <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                           <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a>&nbsp;perm,
-                           <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;f)
-                    throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                           <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Convenience method to find a leaf page when there is no dirtypages HashMap.
- Used by the BTreeFile iterator.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>pid</code> - - the current page being searched</dd>
-<dd><code>perm</code> - - the permissions with which to lock the leaf page</dd>
-<dd><code>f</code> - - the field to search for</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the left-most leaf page possibly containing the key field f</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#findLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Permissions-simpledb.Field-"><code>findLeafPage(TransactionId, HashMap, BTreePageId, Permissions, Field)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="splitLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>splitLeafPage</h4>
-<pre>protected&nbsp;<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;splitLeafPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                      java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                      <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;page,
-                                      <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;field)
-                               throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                      java.io.IOException,
-                                      <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Split a leaf page to make room for new tuples and recursively split the parent node
- as needed to accommodate a new entry. The new entry should have a key matching the key field
- of the first tuple in the right-hand page (the key is "copied up"), and child pointers 
- pointing to the two leaf pages resulting from the split.  Update sibling pointers and parent 
- pointers as needed.  
- 
- Return the leaf page into which a new tuple with key field "field" should be inserted.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>page</code> - - the leaf page to split</dd>
-<dd><code>field</code> - - the key field of the tuple to be inserted after the split is complete. Necessary to know
- which of the two pages to return.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the leaf page into which the new tuple should be inserted</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#getParentWithEmptySlots-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Field-"><code>getParentWithEmptySlots(TransactionId, HashMap, BTreePageId, Field)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="splitInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>splitInternalPage</h4>
-<pre>protected&nbsp;<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;splitInternalPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                              java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                              <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page,
-                                              <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;field)
-                                       throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                              java.io.IOException,
-                                              <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Split an internal page to make room for new entries and recursively split its parent page
- as needed to accommodate a new entry. The new entry for the parent should have a key matching 
- the middle key in the original internal page being split (this key is "pushed up" to the parent). 
- The child pointers of the new parent entry should point to the two internal pages resulting 
- from the split. Update parent pointers as needed.
- 
- Return the internal page into which an entry with key field "field" should be inserted</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>page</code> - - the internal page to split</dd>
-<dd><code>field</code> - - the key field of the entry to be inserted after the split is complete. Necessary to know
- which of the two pages to return.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the internal page into which the new entry should be inserted</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#getParentWithEmptySlots-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Field-"><code>getParentWithEmptySlots(TransactionId, HashMap, BTreePageId, Field)</code></a>, 
-<a href="../simpledb/BTreeFile.html#updateParentPointers-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-"><code>updateParentPointers(TransactionId, HashMap, BTreeInternalPage)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="getParentWithEmptySlots-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getParentWithEmptySlots</h4>
-<pre>private&nbsp;<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;getParentWithEmptySlots(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                                  java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                                  <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;parentId,
-                                                  <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;field)
-                                           throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                                  java.io.IOException,
-                                                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Method to encapsulate the process of getting a parent page ready to accept new entries.
- This may mean creating a page to become the new root of the tree, splitting the existing 
- parent page if there are no empty slots, or simply locking and returning the existing parent page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>parentId</code> - - the id of the parent. May be an internal page or the RootPtr page</dd>
-<dd><code>field</code> - - the key of the entry which will be inserted. Needed in case the parent must be split
- to accommodate the new entry</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the parent page, guaranteed to have at least one empty slot</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#splitInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.Field-"><code>splitInternalPage(TransactionId, HashMap, BTreeInternalPage, Field)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="updateParentPointer-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>updateParentPointer</h4>
-<pre>private&nbsp;void&nbsp;updateParentPointer(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                 java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                 <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                 <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;child)
-                          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                 java.io.IOException,
-                                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Helper function to update the parent pointer of a node.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>pid</code> - - id of the parent node</dd>
-<dd><code>child</code> - - id of the child node to be updated with the parent pointer</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="updateParentPointers-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>updateParentPointers</h4>
-<pre>private&nbsp;void&nbsp;updateParentPointers(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                  java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                  <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page)
-                           throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                  java.io.IOException,
-                                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Update the parent pointer of every child of the given page so that it correctly points to
- the parent</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>page</code> - - the parent page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#updateParentPointer-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.BTreePageId-"><code>updateParentPointer(TransactionId, HashMap, BTreePageId, BTreePageId)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="getPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePageId-simpledb.Permissions-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPage</h4>
-<pre><a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;getPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-             java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-             <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-             <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a>&nbsp;perm)
-      throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-             <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Method to encapsulate the process of locking/fetching a page.  First the method checks the local 
- cache ("dirtypages"), and if it can't find the requested page there, it fetches it from the buffer pool.  
- It also adds pages to the dirtypages cache if they are fetched with read-write permission, since 
- presumably they will soon be dirtied by this transaction.
- 
- This method is needed to ensure that page updates are not lost if the same pages are
- accessed multiple times.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>pid</code> - - the id of the requested page</dd>
-<dd><code>perm</code> - - the requested permissions on the page</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the requested page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="insertTuple-simpledb.TransactionId-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>insertTuple</h4>
-<pre>public&nbsp;java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;insertTuple(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                             <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                                      throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                             java.io.IOException,
-                                             <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Insert a tuple into this BTreeFile, keeping the tuples in sorted order. 
- May cause pages to split if the page where tuple t belongs is full.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#insertTuple-simpledb.TransactionId-simpledb.Tuple-">insertTuple</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>t</code> - - the tuple to insert</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a list of all pages that were dirtied by this operation. Could include
- many pages since parent pointers will need to be updated when an internal node splits.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the tuple cannot be added</dd>
-<dd><code>java.io.IOException</code> - if the needed file can't be read/written</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#splitLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.Field-"><code>splitLeafPage(TransactionId, HashMap, BTreeLeafPage, Field)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="handleMinOccupancyPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>handleMinOccupancyPage</h4>
-<pre>private&nbsp;void&nbsp;handleMinOccupancyPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                    java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                    <a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a>&nbsp;page)
-                             throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                    java.io.IOException,
-                                    <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Handle the case when a B+ tree page becomes less than half full due to deletions.
- If one of its siblings has extra tuples/entries, redistribute those tuples/entries.
- Otherwise merge with one of the siblings. Update pointers as needed.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>page</code> - - the page which is less than half full</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#handleMinOccupancyLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-simpledb.BTreeEntry-"><code>handleMinOccupancyLeafPage(TransactionId, HashMap, BTreeLeafPage, BTreeInternalPage, BTreeEntry, BTreeEntry)</code></a>, 
-<a href="../simpledb/BTreeFile.html#handleMinOccupancyInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-simpledb.BTreeEntry-"><code>handleMinOccupancyInternalPage(TransactionId, HashMap, BTreeInternalPage, BTreeInternalPage, BTreeEntry, BTreeEntry)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="handleMinOccupancyLeafPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>handleMinOccupancyLeafPage</h4>
-<pre>private&nbsp;void&nbsp;handleMinOccupancyLeafPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                        java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                        <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;page,
-                                        <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                                        <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;leftEntry,
-                                        <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;rightEntry)
-                                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                        java.io.IOException,
-                                        <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Handle the case when a leaf page becomes less than half full due to deletions.
- If one of its siblings has extra tuples, redistribute those tuples.
- Otherwise merge with one of the siblings. Update pointers as needed.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>page</code> - - the leaf page which is less than half full</dd>
-<dd><code>parent</code> - - the parent of the leaf page</dd>
-<dd><code>leftEntry</code> - - the entry in the parent pointing to the given page and its left-sibling</dd>
-<dd><code>rightEntry</code> - - the entry in the parent pointing to the given page and its right-sibling</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#mergeLeafPages-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-"><code>mergeLeafPages(TransactionId, HashMap, BTreeLeafPage, BTreeLeafPage, BTreeInternalPage, BTreeEntry)</code></a>, 
-<a href="../simpledb/BTreeFile.html#stealFromLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-boolean-"><code>stealFromLeafPage(BTreeLeafPage, BTreeLeafPage, BTreeInternalPage,  BTreeEntry, boolean)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="stealFromLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>stealFromLeafPage</h4>
-<pre>protected&nbsp;void&nbsp;stealFromLeafPage(<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;page,
-                                 <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;sibling,
-                                 <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                                 <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;entry,
-                                 boolean&nbsp;isRightSibling)
-                          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Steal tuples from a sibling and copy them to the given page so that both pages are at least
- half full.  Update the parent's entry so that the key matches the key field of the first
- tuple in the right-hand page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>page</code> - - the leaf page which is less than half full</dd>
-<dd><code>sibling</code> - - the sibling which has tuples to spare</dd>
-<dd><code>parent</code> - - the parent of the two leaf pages</dd>
-<dd><code>entry</code> - - the entry in the parent pointing to the two leaf pages</dd>
-<dd><code>isRightSibling</code> - - whether the sibling is a right-sibling</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="handleMinOccupancyInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>handleMinOccupancyInternalPage</h4>
-<pre>private&nbsp;void&nbsp;handleMinOccupancyInternalPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                            java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                            <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page,
-                                            <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                                            <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;leftEntry,
-                                            <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;rightEntry)
-                                     throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                            java.io.IOException,
-                                            <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Handle the case when an internal page becomes less than half full due to deletions.
- If one of its siblings has extra entries, redistribute those entries.
- Otherwise merge with one of the siblings. Update pointers as needed.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>page</code> - - the internal page which is less than half full</dd>
-<dd><code>parent</code> - - the parent of the internal page</dd>
-<dd><code>leftEntry</code> - - the entry in the parent pointing to the given page and its left-sibling</dd>
-<dd><code>rightEntry</code> - - the entry in the parent pointing to the given page and its right-sibling</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#mergeInternalPages-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-"><code>mergeInternalPages(TransactionId, HashMap, BTreeInternalPage, BTreeInternalPage, BTreeInternalPage, BTreeEntry)</code></a>, 
-<a href="../simpledb/BTreeFile.html#stealFromLeftInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-"><code>stealFromLeftInternalPage(TransactionId, HashMap, BTreeInternalPage, BTreeInternalPage, BTreeInternalPage, BTreeEntry)</code></a>, 
-<a href="../simpledb/BTreeFile.html#stealFromRightInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-"><code>stealFromRightInternalPage(TransactionId, HashMap, BTreeInternalPage, BTreeInternalPage, BTreeInternalPage, BTreeEntry)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="stealFromLeftInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>stealFromLeftInternalPage</h4>
-<pre>protected&nbsp;void&nbsp;stealFromLeftInternalPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                         java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                         <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page,
-                                         <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;leftSibling,
-                                         <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                                         <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)
-                                  throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                         java.io.IOException,
-                                         <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Steal entries from the left sibling and copy them to the given page so that both pages are at least
- half full. Keys can be thought of as rotating through the parent entry, so the original key in the 
- parent is "pulled down" to the right-hand page, and the last key in the left-hand page is "pushed up"
- to the parent.  Update parent pointers as needed.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>page</code> - - the internal page which is less than half full</dd>
-<dd><code>leftSibling</code> - - the left sibling which has entries to spare</dd>
-<dd><code>parent</code> - - the parent of the two internal pages</dd>
-<dd><code>parentEntry</code> - - the entry in the parent pointing to the two internal pages</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#updateParentPointers-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-"><code>updateParentPointers(TransactionId, HashMap, BTreeInternalPage)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="stealFromRightInternalPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>stealFromRightInternalPage</h4>
-<pre>protected&nbsp;void&nbsp;stealFromRightInternalPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                          java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                          <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;page,
-                                          <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;rightSibling,
-                                          <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                                          <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)
-                                   throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                          java.io.IOException,
-                                          <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Steal entries from the right sibling and copy them to the given page so that both pages are at least
- half full. Keys can be thought of as rotating through the parent entry, so the original key in the 
- parent is "pulled down" to the left-hand page, and the last key in the right-hand page is "pushed up"
- to the parent.  Update parent pointers as needed.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>page</code> - - the internal page which is less than half full</dd>
-<dd><code>rightSibling</code> - - the right sibling which has entries to spare</dd>
-<dd><code>parent</code> - - the parent of the two internal pages</dd>
-<dd><code>parentEntry</code> - - the entry in the parent pointing to the two internal pages</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#updateParentPointers-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-"><code>updateParentPointers(TransactionId, HashMap, BTreeInternalPage)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="mergeLeafPages-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeLeafPage-simpledb.BTreeLeafPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>mergeLeafPages</h4>
-<pre>protected&nbsp;void&nbsp;mergeLeafPages(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                              java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                              <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;leftPage,
-                              <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;rightPage,
-                              <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                              <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)
-                       throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                              java.io.IOException,
-                              <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Merge two leaf pages by moving all tuples from the right page to the left page. 
- Delete the corresponding key and right child pointer from the parent, and recursively 
- handle the case when the parent gets below minimum occupancy.
- Update sibling pointers as needed, and make the right page available for reuse.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>leftPage</code> - - the left leaf page</dd>
-<dd><code>rightPage</code> - - the right leaf page</dd>
-<dd><code>parent</code> - - the parent of the two pages</dd>
-<dd><code>parentEntry</code> - - the entry in the parent corresponding to the leftPage and rightPage</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#deleteParentEntry-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-"><code>deleteParentEntry(TransactionId, HashMap, BTreePage, BTreeInternalPage, BTreeEntry)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="mergeInternalPages-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>mergeInternalPages</h4>
-<pre>protected&nbsp;void&nbsp;mergeInternalPages(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                  java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                                  <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;leftPage,
-                                  <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;rightPage,
-                                  <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                                  <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)
-                           throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                  java.io.IOException,
-                                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Merge two internal pages by moving all entries from the right page to the left page 
- and "pulling down" the corresponding key from the parent entry. 
- Delete the corresponding key and right child pointer from the parent, and recursively 
- handle the case when the parent gets below minimum occupancy.
- Update parent pointers as needed, and make the right page available for reuse.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>leftPage</code> - - the left internal page</dd>
-<dd><code>rightPage</code> - - the right internal page</dd>
-<dd><code>parent</code> - - the parent of the two pages</dd>
-<dd><code>parentEntry</code> - - the entry in the parent corresponding to the leftPage and rightPage</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#deleteParentEntry-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-"><code>deleteParentEntry(TransactionId, HashMap, BTreePage, BTreeInternalPage, BTreeEntry)</code></a>, 
-<a href="../simpledb/BTreeFile.html#updateParentPointers-simpledb.TransactionId-java.util.HashMap-simpledb.BTreeInternalPage-"><code>updateParentPointers(TransactionId, HashMap, BTreeInternalPage)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="deleteParentEntry-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-simpledb.BTreeInternalPage-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteParentEntry</h4>
-<pre>private&nbsp;void&nbsp;deleteParentEntry(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                               java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                               <a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a>&nbsp;leftPage,
-                               <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;parent,
-                               <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;parentEntry)
-                        throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                               java.io.IOException,
-                               <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Method to encapsulate the process of deleting an entry (specifically the key and right child) 
- from a parent node.  If the parent becomes empty (no keys remaining), that indicates that it 
- was the root node and should be replaced by its one remaining child.  Otherwise, if it gets 
- below minimum occupancy for non-root internal nodes, it should steal from one of its siblings or 
- merge with a sibling.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>leftPage</code> - - the child remaining after the key and right child are deleted</dd>
-<dd><code>parent</code> - - the parent containing the entry to be deleted</dd>
-<dd><code>parentEntry</code> - - the entry to be deleted</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#handleMinOccupancyPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-"><code>handleMinOccupancyPage(TransactionId, HashMap, BTreePage)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="deleteTuple-simpledb.TransactionId-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteTuple</h4>
-<pre>public&nbsp;java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;deleteTuple(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                             <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                                      throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                             java.io.IOException,
-                                             <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Delete a tuple from this BTreeFile. 
- May cause pages to merge or redistribute entries/tuples if the pages 
- become less than half full.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>t</code> - - the tuple to delete</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a list of all pages that were dirtied by this operation. Could include
- many pages since parent pointers will need to be updated when an internal node merges.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the tuple cannot be deleted or is not a member
-   of the file</dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#handleMinOccupancyPage-simpledb.TransactionId-java.util.HashMap-simpledb.BTreePage-"><code>handleMinOccupancyPage(TransactionId, HashMap, BTreePage)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="getRootPtrPage-simpledb.TransactionId-java.util.HashMap-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getRootPtrPage</h4>
-<pre><a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a>&nbsp;getRootPtrPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages)
-                         throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                java.io.IOException,
-                                <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Get a read lock on the root pointer page. Create the root pointer page and root page
- if necessary.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the root pointer page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getEmptyPageNo-simpledb.TransactionId-java.util.HashMap-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getEmptyPageNo</h4>
-<pre>protected&nbsp;int&nbsp;getEmptyPageNo(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                             java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages)
-                      throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                             java.io.IOException,
-                             <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Get the page number of the first empty page in this BTreeFile.
- Creates a new page if none of the existing pages are empty.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the page number of the first empty page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getEmptyPage-simpledb.TransactionId-java.util.HashMap-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getEmptyPage</h4>
-<pre>private&nbsp;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;getEmptyPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                          java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                          int&nbsp;pgcateg)
-                   throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                          java.io.IOException,
-                          <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Method to encapsulate the process of creating a new page.  It reuses old pages if possible,
- and creates a new page if none are available.  It wipes the page on disk and in the cache and 
- returns a clean copy locked with read-write permission</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>pgcateg</code> - - the BTreePageId category of the new page.  Either LEAF, INTERNAL, or HEADER</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the new empty page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#getEmptyPageNo-simpledb.TransactionId-java.util.HashMap-"><code>getEmptyPageNo(TransactionId, HashMap)</code></a>, 
-<a href="../simpledb/BTreeFile.html#setEmptyPage-simpledb.TransactionId-java.util.HashMap-int-"><code>setEmptyPage(TransactionId, HashMap, int)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="setEmptyPage-simpledb.TransactionId-java.util.HashMap-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setEmptyPage</h4>
-<pre>protected&nbsp;void&nbsp;setEmptyPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                            java.util.HashMap&lt;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>,<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;dirtypages,
-                            int&nbsp;emptyPageNo)
-                     throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                            java.io.IOException,
-                            <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Mark a page in this BTreeFile as empty. Find the corresponding header page 
- (create it if needed), and mark the corresponding slot in the header page as empty.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>dirtypages</code> - - the list of dirty pages which should be updated with all new dirty pages</dd>
-<dd><code>emptyPageNo</code> - - the page number of the empty page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html#getEmptyPage-simpledb.TransactionId-java.util.HashMap-int-"><code>getEmptyPage(TransactionId, HashMap, int)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="indexIterator-simpledb.TransactionId-simpledb.IndexPredicate-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>indexIterator</h4>
-<pre>public&nbsp;<a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a>&nbsp;indexIterator(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                    <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</pre>
-<div class="block">get the specified tuples from the file based on its IndexPredicate value on
- behalf of the specified transaction. This method will acquire a read lock on
- the affected pages of the file, and may block until the lock can be
- acquired.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>ipred</code> - - the index predicate value to filter on</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an iterator for the filtered tuples</dd>
-</dl>
-</li>
-</ul>
-<a name="iterator-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>iterator</h4>
-<pre>public&nbsp;<a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a>&nbsp;iterator(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</pre>
-<div class="block">Get an iterator for all tuples in this B+ tree file in sorted order. This method 
- will acquire a read lock on the affected pages of the file, and may block until 
- the lock can be acquired.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#iterator-simpledb.TransactionId-">iterator</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - - the transaction id</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an iterator for all the tuples in this file</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeEntry.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileEncoder.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFile.html" target="_top">Frames</a></li>
-<li><a href="BTreeFile.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeFileEncoder.EntryComparator.html lab4/javadoc/simpledb/BTreeFileEncoder.EntryComparator.html
--- lab3/javadoc/simpledb/BTreeFileEncoder.EntryComparator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeFileEncoder.EntryComparator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,295 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeFileEncoder.EntryComparator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeFileEncoder.EntryComparator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileEncoder.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileEncoder.EntryComparator.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileEncoder.EntryComparator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeFileEncoder.EntryComparator" class="title">Class BTreeFileEncoder.EntryComparator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeFileEncoder.EntryComparator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.util.Comparator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</dd>
-</dl>
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public static class <span class="typeNameLabel">BTreeFileEncoder.EntryComparator</span>
-extends java.lang.Object
-implements java.util.Comparator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</pre>
-<div class="block">Comparator to sort BTreeEntry objects by key</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.EntryComparator.html#EntryComparator--">EntryComparator</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.EntryComparator.html#compare-simpledb.BTreeEntry-simpledb.BTreeEntry-">compare</a></span>(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e1,
-       <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e2)</code>
-<div class="block">Compare two entries based on their key field</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.util.Comparator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;java.util.Comparator</h3>
-<code>comparing, comparing, comparingDouble, comparingInt, comparingLong, equals, naturalOrder, nullsFirst, nullsLast, reversed, reverseOrder, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="EntryComparator--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>EntryComparator</h4>
-<pre>public&nbsp;EntryComparator()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="compare-simpledb.BTreeEntry-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>compare</h4>
-<pre>public&nbsp;int&nbsp;compare(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e1,
-                   <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e2)</pre>
-<div class="block">Compare two entries based on their key field</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>compare</code>&nbsp;in interface&nbsp;<code>java.util.Comparator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>-1 if e1 < e2, 1 if e1 > e2, 0 if e1 == e2</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileEncoder.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileEncoder.EntryComparator.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileEncoder.EntryComparator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeFileEncoder.ReverseEntryComparator.html lab4/javadoc/simpledb/BTreeFileEncoder.ReverseEntryComparator.html
--- lab3/javadoc/simpledb/BTreeFileEncoder.ReverseEntryComparator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeFileEncoder.ReverseEntryComparator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,295 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeFileEncoder.ReverseEntryComparator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeFileEncoder.ReverseEntryComparator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileEncoder.ReverseEntryComparator.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileEncoder.ReverseEntryComparator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeFileEncoder.ReverseEntryComparator" class="title">Class BTreeFileEncoder.ReverseEntryComparator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeFileEncoder.ReverseEntryComparator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.util.Comparator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</dd>
-</dl>
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public static class <span class="typeNameLabel">BTreeFileEncoder.ReverseEntryComparator</span>
-extends java.lang.Object
-implements java.util.Comparator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</pre>
-<div class="block">Comparator to sort BTreeEntry objects by key in descending order</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.ReverseEntryComparator.html#ReverseEntryComparator--">ReverseEntryComparator</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.ReverseEntryComparator.html#compare-simpledb.BTreeEntry-simpledb.BTreeEntry-">compare</a></span>(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e1,
-       <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e2)</code>
-<div class="block">Compare two entries based on their key field</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.util.Comparator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;java.util.Comparator</h3>
-<code>comparing, comparing, comparingDouble, comparingInt, comparingLong, equals, naturalOrder, nullsFirst, nullsLast, reversed, reverseOrder, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="ReverseEntryComparator--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>ReverseEntryComparator</h4>
-<pre>public&nbsp;ReverseEntryComparator()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="compare-simpledb.BTreeEntry-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>compare</h4>
-<pre>public&nbsp;int&nbsp;compare(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e1,
-                   <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e2)</pre>
-<div class="block">Compare two entries based on their key field</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>compare</code>&nbsp;in interface&nbsp;<code>java.util.Comparator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>-1 if e1 > e2, 1 if e1 < e2, 0 if e1 == e2</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileEncoder.ReverseEntryComparator.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileEncoder.ReverseEntryComparator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeFileEncoder.TupleComparator.html lab4/javadoc/simpledb/BTreeFileEncoder.TupleComparator.html
--- lab3/javadoc/simpledb/BTreeFileEncoder.TupleComparator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeFileEncoder.TupleComparator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,338 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeFileEncoder.TupleComparator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeFileEncoder.TupleComparator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileEncoder.TupleComparator.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileEncoder.TupleComparator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeFileEncoder.TupleComparator" class="title">Class BTreeFileEncoder.TupleComparator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeFileEncoder.TupleComparator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.util.Comparator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</dd>
-</dl>
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public static class <span class="typeNameLabel">BTreeFileEncoder.TupleComparator</span>
-extends java.lang.Object
-implements java.util.Comparator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</pre>
-<div class="block">comparator to sort Tuples by key field</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.TupleComparator.html#keyField">keyField</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.TupleComparator.html#TupleComparator-int-">TupleComparator</a></span>(int&nbsp;keyField)</code>
-<div class="block">Construct a TupleComparator</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.TupleComparator.html#compare-simpledb.Tuple-simpledb.Tuple-">compare</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t1,
-       <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t2)</code>
-<div class="block">Compare two tuples based on their key field</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.util.Comparator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;java.util.Comparator</h3>
-<code>comparing, comparing, comparingDouble, comparingInt, comparingLong, equals, naturalOrder, nullsFirst, nullsLast, reversed, reverseOrder, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="keyField">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>keyField</h4>
-<pre>private&nbsp;int keyField</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="TupleComparator-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>TupleComparator</h4>
-<pre>public&nbsp;TupleComparator(int&nbsp;keyField)</pre>
-<div class="block">Construct a TupleComparator</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>keyField</code> - - the index of the field the tuples are keyed on</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="compare-simpledb.Tuple-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>compare</h4>
-<pre>public&nbsp;int&nbsp;compare(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t1,
-                   <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t2)</pre>
-<div class="block">Compare two tuples based on their key field</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>compare</code>&nbsp;in interface&nbsp;<code>java.util.Comparator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>-1 if t1 < t2, 1 if t1 > t2, 0 if t1 == t2</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileEncoder.TupleComparator.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileEncoder.TupleComparator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeFileEncoder.html lab4/javadoc/simpledb/BTreeFileEncoder.html
--- lab3/javadoc/simpledb/BTreeFileEncoder.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeFileEncoder.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,716 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeFileEncoder</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeFileEncoder";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9,"i5":9,"i6":9,"i7":9,"i8":9,"i9":9,"i10":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFile.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileEncoder.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileEncoder.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeFileEncoder" class="title">Class BTreeFileEncoder</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeFileEncoder</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeFileEncoder</span>
-extends java.lang.Object</pre>
-<div class="block">BTreeFileEncoder reads a comma delimited text file and converts it to
- pages of binary data in the appropriate format for simpledb B+ tree
- pages.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Class and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb">BTreeFileEncoder.EntryComparator</a></span></code>
-<div class="block">Comparator to sort BTreeEntry objects by key</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb">BTreeFileEncoder.ReverseEntryComparator</a></span></code>
-<div class="block">Comparator to sort BTreeEntry objects by key in descending order</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb">BTreeFileEncoder.TupleComparator</a></span></code>
-<div class="block">comparator to sort Tuples by key field</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#BTreeFileEncoder--">BTreeFileEncoder</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>private static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#cleanUpEntries-java.util.ArrayList-simpledb.BTreeFile-int-int-simpledb.Type-int-int-">cleanUpEntries</a></span>(java.util.ArrayList&lt;java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&gt;&nbsp;entries,
-              <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-              int&nbsp;nentries,
-              int&nbsp;npagebytes,
-              <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;keyType,
-              int&nbsp;tableid,
-              int&nbsp;keyField)</code>
-<div class="block">Write out any remaining entries and update the parent pointers.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#convert-java.util.ArrayList-java.io.File-java.io.File-int-int-">convert</a></span>(java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-       java.io.File&nbsp;hFile,
-       java.io.File&nbsp;bFile,
-       int&nbsp;keyField,
-       int&nbsp;numFields)</code>
-<div class="block">Encode the file using the BTreeFile's Insert method.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#convert-java.util.ArrayList-java.io.File-java.io.File-int-int-simpledb.Type:A-char-int-">convert</a></span>(java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-       java.io.File&nbsp;hFile,
-       java.io.File&nbsp;bFile,
-       int&nbsp;npagebytes,
-       int&nbsp;numFields,
-       <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-       char&nbsp;fieldSeparator,
-       int&nbsp;keyField)</code>
-<div class="block">Faster method to encode the B+ tree file</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#convert-java.io.File-java.io.File-java.io.File-int-int-">convert</a></span>(java.io.File&nbsp;inFile,
-       java.io.File&nbsp;hFile,
-       java.io.File&nbsp;bFile,
-       int&nbsp;keyField,
-       int&nbsp;numFields)</code>
-<div class="block">Encode the file using the BTreeFile's Insert method.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#convert-java.io.File-java.io.File-java.io.File-int-int-simpledb.Type:A-char-int-">convert</a></span>(java.io.File&nbsp;inFile,
-       java.io.File&nbsp;hFile,
-       java.io.File&nbsp;bFile,
-       int&nbsp;npagebytes,
-       int&nbsp;numFields,
-       <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-       char&nbsp;fieldSeparator,
-       int&nbsp;keyField)</code>
-<div class="block">Faster method to encode the B+ tree file</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>static byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#convertToInternalPage-java.util.ArrayList-int-simpledb.Type-int-">convertToInternalPage</a></span>(java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&nbsp;entries,
-                     int&nbsp;npagebytes,
-                     <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;keyType,
-                     int&nbsp;childPageCategory)</code>
-<div class="block">Convert a set of entries to a byte array in the format of a BTreeInternalPage</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>static byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#convertToLeafPage-java.util.ArrayList-int-int-simpledb.Type:A-int-">convertToLeafPage</a></span>(java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;tuples,
-                 int&nbsp;npagebytes,
-                 int&nbsp;numFields,
-                 <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-                 int&nbsp;keyField)</code>
-<div class="block">Convert a set of tuples to a byte array in the format of a BTreeLeafPage</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>static byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#convertToRootPtrPage-int-int-int-">convertToRootPtrPage</a></span>(int&nbsp;root,
-                    int&nbsp;rootCategory,
-                    int&nbsp;header)</code>
-<div class="block">Create a byte array in the format of a BTreeRootPtrPage</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>private static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#setParents-simpledb.BTreeFile-simpledb.BTreePageId-simpledb.BTreePageId-">setParents</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-          <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-          <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;parent)</code>
-<div class="block">Recursive function to set all the parent pointers</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>private static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#setRightSiblingPtrs-simpledb.BTreeFile-simpledb.BTreePageId-simpledb.BTreePageId-">setRightSiblingPtrs</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                   <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                   <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;rightSiblingId)</code>
-<div class="block">Set all the right sibling pointers by following the left sibling pointers</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>private static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileEncoder.html#updateEntries-java.util.ArrayList-simpledb.BTreeFile-simpledb.BTreeEntry-int-int-int-simpledb.Type-int-int-">updateEntries</a></span>(java.util.ArrayList&lt;java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&gt;&nbsp;entries,
-             <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-             <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e,
-             int&nbsp;level,
-             int&nbsp;nentries,
-             int&nbsp;npagebytes,
-             <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;keyType,
-             int&nbsp;tableid,
-             int&nbsp;keyField)</code>
-<div class="block">Recursive function to update the entries by adding a new Entry at a particular level</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeFileEncoder--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeFileEncoder</h4>
-<pre>public&nbsp;BTreeFileEncoder()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="convert-java.util.ArrayList-java.io.File-java.io.File-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>convert</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;convert(java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                                java.io.File&nbsp;hFile,
-                                java.io.File&nbsp;bFile,
-                                int&nbsp;keyField,
-                                int&nbsp;numFields)
-                         throws java.io.IOException</pre>
-<div class="block">Encode the file using the BTreeFile's Insert method.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tuples</code> - - list of tuples to add to the file</dd>
-<dd><code>hFile</code> - - the file to temporarily store the data as a heap file on disk</dd>
-<dd><code>bFile</code> - - the file on disk to back the resulting BTreeFile</dd>
-<dd><code>keyField</code> - - the index of the key field for this B+ tree</dd>
-<dd><code>numFields</code> - - the number of fields in each tuple</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the BTreeFile</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="convert-java.io.File-java.io.File-java.io.File-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>convert</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;convert(java.io.File&nbsp;inFile,
-                                java.io.File&nbsp;hFile,
-                                java.io.File&nbsp;bFile,
-                                int&nbsp;keyField,
-                                int&nbsp;numFields)
-                         throws java.io.IOException</pre>
-<div class="block">Encode the file using the BTreeFile's Insert method.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>inFile</code> - - the raw text file containing the tuples</dd>
-<dd><code>hFile</code> - - the file to temporarily store the data as a heap file on disk</dd>
-<dd><code>bFile</code> - - the file on disk to back the resulting BTreeFile</dd>
-<dd><code>keyField</code> - - the index of the key field for this B+ tree</dd>
-<dd><code>numFields</code> - - the number of fields in each tuple</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the BTreeFile</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="convert-java.util.ArrayList-java.io.File-java.io.File-int-int-simpledb.Type:A-char-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>convert</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;convert(java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                                java.io.File&nbsp;hFile,
-                                java.io.File&nbsp;bFile,
-                                int&nbsp;npagebytes,
-                                int&nbsp;numFields,
-                                <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-                                char&nbsp;fieldSeparator,
-                                int&nbsp;keyField)
-                         throws java.io.IOException,
-                                <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Faster method to encode the B+ tree file</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tuples</code> - - list of tuples to add to the file</dd>
-<dd><code>hFile</code> - - the file to temporarily store the data as a heap file on disk</dd>
-<dd><code>bFile</code> - - the file on disk to back the resulting BTreeFile</dd>
-<dd><code>npagebytes</code> - - number of bytes per page</dd>
-<dd><code>numFields</code> - - number of fields per tuple</dd>
-<dd><code>typeAr</code> - - array containing the types of the tuples</dd>
-<dd><code>fieldSeparator</code> - - character separating fields in the raw data file</dd>
-<dd><code>keyField</code> - - the field of the tuples the B+ tree will be keyed on</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the BTreeFile</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="convert-java.io.File-java.io.File-java.io.File-int-int-simpledb.Type:A-char-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>convert</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;convert(java.io.File&nbsp;inFile,
-                                java.io.File&nbsp;hFile,
-                                java.io.File&nbsp;bFile,
-                                int&nbsp;npagebytes,
-                                int&nbsp;numFields,
-                                <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-                                char&nbsp;fieldSeparator,
-                                int&nbsp;keyField)
-                         throws java.io.IOException,
-                                <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Faster method to encode the B+ tree file</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>inFile</code> - - the file containing the raw data</dd>
-<dd><code>hFile</code> - - the data file for the HeapFile to be used as an intermediate conversion step</dd>
-<dd><code>bFile</code> - - the data file for the BTreeFile</dd>
-<dd><code>npagebytes</code> - - number of bytes per page</dd>
-<dd><code>numFields</code> - - number of fields per tuple</dd>
-<dd><code>typeAr</code> - - array containing the types of the tuples</dd>
-<dd><code>fieldSeparator</code> - - character separating fields in the raw data file</dd>
-<dd><code>keyField</code> - - the field of the tuples the B+ tree will be keyed on</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the B+ tree file</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="setRightSiblingPtrs-simpledb.BTreeFile-simpledb.BTreePageId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setRightSiblingPtrs</h4>
-<pre>private static&nbsp;void&nbsp;setRightSiblingPtrs(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                                        <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                        <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;rightSiblingId)
-                                 throws java.io.IOException,
-                                        <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Set all the right sibling pointers by following the left sibling pointers</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>bf</code> - - the BTreeFile</dd>
-<dd><code>pid</code> - - the id of the page to update with the right sibling pointer</dd>
-<dd><code>rightSiblingId</code> - - the id of the page's right sibling</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="setParents-simpledb.BTreeFile-simpledb.BTreePageId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setParents</h4>
-<pre>private static&nbsp;void&nbsp;setParents(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                               <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                               <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;parent)
-                        throws java.io.IOException,
-                               <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Recursive function to set all the parent pointers</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>bf</code> - - the BTreeFile</dd>
-<dd><code>pid</code> - - id of the page to update with the parent pointer</dd>
-<dd><code>parent</code> - - the id of the page's parent</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="cleanUpEntries-java.util.ArrayList-simpledb.BTreeFile-int-int-simpledb.Type-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>cleanUpEntries</h4>
-<pre>private static&nbsp;void&nbsp;cleanUpEntries(java.util.ArrayList&lt;java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&gt;&nbsp;entries,
-                                   <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                                   int&nbsp;nentries,
-                                   int&nbsp;npagebytes,
-                                   <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;keyType,
-                                   int&nbsp;tableid,
-                                   int&nbsp;keyField)
-                            throws java.io.IOException</pre>
-<div class="block">Write out any remaining entries and update the parent pointers.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>entries</code> - - the list of remaining entries</dd>
-<dd><code>bf</code> - - the BTreeFile</dd>
-<dd><code>nentries</code> - - number of entries per page</dd>
-<dd><code>npagebytes</code> - - number of bytes per page</dd>
-<dd><code>keyType</code> - - the type of the key field</dd>
-<dd><code>tableid</code> - - the table id of this BTreeFile</dd>
-<dd><code>keyField</code> - - the index of the key field</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="updateEntries-java.util.ArrayList-simpledb.BTreeFile-simpledb.BTreeEntry-int-int-int-simpledb.Type-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>updateEntries</h4>
-<pre>private static&nbsp;void&nbsp;updateEntries(java.util.ArrayList&lt;java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&gt;&nbsp;entries,
-                                  <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                                  <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e,
-                                  int&nbsp;level,
-                                  int&nbsp;nentries,
-                                  int&nbsp;npagebytes,
-                                  <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;keyType,
-                                  int&nbsp;tableid,
-                                  int&nbsp;keyField)
-                           throws java.io.IOException</pre>
-<div class="block">Recursive function to update the entries by adding a new Entry at a particular level</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>entries</code> - - the list of entries</dd>
-<dd><code>bf</code> - - the BTreefile</dd>
-<dd><code>e</code> - - the new entry</dd>
-<dd><code>level</code> - - the level of the new entry (0 is closest to the leaf pages)</dd>
-<dd><code>nentries</code> - - number of entries per page</dd>
-<dd><code>npagebytes</code> - - number of bytes per page</dd>
-<dd><code>keyType</code> - - the type of the key field</dd>
-<dd><code>tableid</code> - - the table id of this BTreeFile</dd>
-<dd><code>keyField</code> - - the index of the key field</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="convertToLeafPage-java.util.ArrayList-int-int-simpledb.Type:A-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>convertToLeafPage</h4>
-<pre>public static&nbsp;byte[]&nbsp;convertToLeafPage(java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;tuples,
-                                       int&nbsp;npagebytes,
-                                       int&nbsp;numFields,
-                                       <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-                                       int&nbsp;keyField)
-                                throws java.io.IOException</pre>
-<div class="block">Convert a set of tuples to a byte array in the format of a BTreeLeafPage</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tuples</code> - - the set of tuples</dd>
-<dd><code>npagebytes</code> - - number of bytes per page</dd>
-<dd><code>numFields</code> - - number of fields in each tuple</dd>
-<dd><code>typeAr</code> - - array containing the types of the tuples</dd>
-<dd><code>keyField</code> - - the field of the tuples the B+ tree will be keyed on</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a byte array which can be passed to the BTreeLeafPage constructor</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="convertToInternalPage-java.util.ArrayList-int-simpledb.Type-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>convertToInternalPage</h4>
-<pre>public static&nbsp;byte[]&nbsp;convertToInternalPage(java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&nbsp;entries,
-                                           int&nbsp;npagebytes,
-                                           <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;keyType,
-                                           int&nbsp;childPageCategory)
-                                    throws java.io.IOException</pre>
-<div class="block">Convert a set of entries to a byte array in the format of a BTreeInternalPage</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>entries</code> - - the set of entries</dd>
-<dd><code>npagebytes</code> - - number of bytes per page</dd>
-<dd><code>keyType</code> - - the type of the key field</dd>
-<dd><code>childPageCategory</code> - - the category of the child pages (either internal or leaf)</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a byte array which can be passed to the BTreeInternalPage constructor</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="convertToRootPtrPage-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>convertToRootPtrPage</h4>
-<pre>public static&nbsp;byte[]&nbsp;convertToRootPtrPage(int&nbsp;root,
-                                          int&nbsp;rootCategory,
-                                          int&nbsp;header)
-                                   throws java.io.IOException</pre>
-<div class="block">Create a byte array in the format of a BTreeRootPtrPage</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>root</code> - - the page number of the root page</dd>
-<dd><code>rootCategory</code> - - the category of the root page (leaf or internal)</dd>
-<dd><code>header</code> - - the page number of the first header page</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a byte array which can be passed to the BTreeRootPtrPage constructor</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFile.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileEncoder.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileEncoder.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeFileIterator.html lab4/javadoc/simpledb/BTreeFileIterator.html
--- lab3/javadoc/simpledb/BTreeFileIterator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeFileIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,453 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeFileIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeFileIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeHeaderPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeFileIterator" class="title">Class BTreeFileIterator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">simpledb.AbstractDbFileIterator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeFileIterator</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>class <span class="typeNameLabel">BTreeFileIterator</span>
-extends <a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></pre>
-<div class="block">Helper class that implements the Java Iterator for tuples on a BTreeFile</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileIterator.html#curp">curp</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileIterator.html#f">f</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileIterator.html#it">it</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileIterator.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileIterator.html#BTreeFileIterator-simpledb.BTreeFile-simpledb.TransactionId-">BTreeFileIterator</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;f,
-                 <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Constructor for this iterator</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileIterator.html#close--">close</a></span>()</code>
-<div class="block">close the iterator</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileIterator.html#open--">open</a></span>()</code>
-<div class="block">Open this iterator by getting an iterator on the first leaf page</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileIterator.html#readNext--">readNext</a></span>()</code>
-<div class="block">Read the next tuple either from the current page if it has more tuples or
- from the next page by following the right sibling pointer.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeFileIterator.html#rewind--">rewind</a></span>()</code>
-<div class="block">rewind this iterator back to the beginning of the tuples</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.AbstractDbFileIterator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></h3>
-<code><a href="../simpledb/AbstractDbFileIterator.html#hasNext--">hasNext</a>, <a href="../simpledb/AbstractDbFileIterator.html#next--">next</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="it">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>it</h4>
-<pre>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt; it</pre>
-</li>
-</ul>
-<a name="curp">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>curp</h4>
-<pre><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a> curp</pre>
-</li>
-</ul>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="f">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>f</h4>
-<pre><a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a> f</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeFileIterator-simpledb.BTreeFile-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeFileIterator</h4>
-<pre>public&nbsp;BTreeFileIterator(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;f,
-                         <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</pre>
-<div class="block">Constructor for this iterator</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>f</code> - - the BTreeFile containing the tuples</dd>
-<dd><code>tid</code> - - the transaction id</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Open this iterator by getting an iterator on the first leaf page</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="readNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;readNext()
-                  throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                         <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Read the next tuple either from the current page if it has more tuples or
- from the next page by following the right sibling pointer.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/AbstractDbFileIterator.html#readNext--">readNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next tuple, or null if none exists</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">rewind this iterator back to the beginning of the tuples</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - When rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block">close the iterator</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFileIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/AbstractDbFileIterator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeHeaderPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeFileIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeFileIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeHeaderPage.html lab4/javadoc/simpledb/BTreeHeaderPage.html
--- lab3/javadoc/simpledb/BTreeHeaderPage.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeHeaderPage.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,786 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeHeaderPage</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeHeaderPage";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":10,"i2":10,"i3":9,"i4":10,"i5":10,"i6":9,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeHeaderPage.html" target="_top">Frames</a></li>
-<li><a href="BTreeHeaderPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeHeaderPage" class="title">Class BTreeHeaderPage</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeHeaderPage</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeHeaderPage</span>
-extends java.lang.Object
-implements <a href="../simpledb/Page.html" title="interface in simpledb">Page</a></pre>
-<div class="block">Each instance of BTreeHeaderPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html" title="class in simpledb"><code>BTreeFile</code></a>, 
-<a href="../simpledb/BufferPool.html" title="class in simpledb"><code>BufferPool</code></a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#dirtier">dirtier</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#dirty">dirty</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#header">header</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#INDEX_SIZE">INDEX_SIZE</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#nextPage">nextPage</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#numSlots">numSlots</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#oldData">oldData</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.lang.Byte</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#oldDataLock">oldDataLock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#pid">pid</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#prevPage">prevPage</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#BTreeHeaderPage-simpledb.BTreePageId-byte:A-">BTreeHeaderPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-               byte[]&nbsp;data)</code>
-<div class="block">Create a BTreeHeaderPage from a set of bytes of data read from disk.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#createEmptyPageData--">createEmptyPageData</a></span>()</code>
-<div class="block">Static method to generate a byte array corresponding to an empty
- BTreeHeaderPage.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#getBeforeImage--">getBeforeImage</a></span>()</code>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#getEmptySlot--">getEmptySlot</a></span>()</code>
-<div class="block">get the index of the first empty slot</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>private static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#getHeaderSize--">getHeaderSize</a></span>()</code>
-<div class="block">Computes the number of bytes in the header while saving room for pointers</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#getId--">getId</a></span>()</code>
-<div class="block">Return the id of this page.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#getNextPageId--">getNextPageId</a></span>()</code>
-<div class="block">Get the page id of the next header page</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#getNumSlots--">getNumSlots</a></span>()</code>
-<div class="block">Computes the number of slots in the header</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#getPageData--">getPageData</a></span>()</code>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#getPrevPageId--">getPrevPageId</a></span>()</code>
-<div class="block">Get the page id of the previous header page</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#init--">init</a></span>()</code>
-<div class="block">Initially mark all slots in the header used.</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#isDirty--">isDirty</a></span>()</code>
-<div class="block">Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#isSlotUsed-int-">isSlotUsed</a></span>(int&nbsp;i)</code>
-<div class="block">Returns true if the page of the BTreeFile associated with slot i is used</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a></span>(boolean&nbsp;dirty,
-         <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Marks this page as dirty/not dirty and record that transaction
- that did the dirtying</div>
-</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#markSlotUsed-int-boolean-">markSlotUsed</a></span>(int&nbsp;i,
-            boolean&nbsp;value)</code>
-<div class="block">Abstraction to mark a page of the BTreeFile used or unused</div>
-</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#setBeforeImage--">setBeforeImage</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i15" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#setNextPageId-simpledb.BTreePageId-">setNextPageId</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)</code>
-<div class="block">Set the page id of the next header page</div>
-</td>
-</tr>
-<tr id="i16" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeHeaderPage.html#setPrevPageId-simpledb.BTreePageId-">setPrevPageId</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)</code>
-<div class="block">Set the page id of the previous header page</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="dirty">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>dirty</h4>
-<pre>private volatile&nbsp;boolean dirty</pre>
-</li>
-</ul>
-<a name="dirtier">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>dirtier</h4>
-<pre>private volatile&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> dirtier</pre>
-</li>
-</ul>
-<a name="INDEX_SIZE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>INDEX_SIZE</h4>
-<pre>static final&nbsp;int INDEX_SIZE</pre>
-</li>
-</ul>
-<a name="pid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pid</h4>
-<pre>final&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> pid</pre>
-</li>
-</ul>
-<a name="header">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>header</h4>
-<pre>final&nbsp;byte[] header</pre>
-</li>
-</ul>
-<a name="numSlots">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>numSlots</h4>
-<pre>final&nbsp;int numSlots</pre>
-</li>
-</ul>
-<a name="nextPage">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>nextPage</h4>
-<pre>private&nbsp;int nextPage</pre>
-</li>
-</ul>
-<a name="prevPage">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>prevPage</h4>
-<pre>private&nbsp;int prevPage</pre>
-</li>
-</ul>
-<a name="oldData">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>oldData</h4>
-<pre>byte[] oldData</pre>
-</li>
-</ul>
-<a name="oldDataLock">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>oldDataLock</h4>
-<pre>private final&nbsp;java.lang.Byte oldDataLock</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeHeaderPage-simpledb.BTreePageId-byte:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeHeaderPage</h4>
-<pre>public&nbsp;BTreeHeaderPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-                       byte[]&nbsp;data)
-                throws java.io.IOException</pre>
-<div class="block">Create a BTreeHeaderPage from a set of bytes of data read from disk.
- The format of a BTreeHeaderPage is two pointers to the next and previous
- header pages, followed by a set of bytes indicating which pages in the file
- are used or available</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BufferPool.html#getPageSize--"><code>BufferPool.getPageSize()</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="init--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>init</h4>
-<pre>public&nbsp;void&nbsp;init()</pre>
-<div class="block">Initially mark all slots in the header used.</div>
-</li>
-</ul>
-<a name="getHeaderSize--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getHeaderSize</h4>
-<pre>private static&nbsp;int&nbsp;getHeaderSize()</pre>
-<div class="block">Computes the number of bytes in the header while saving room for pointers</div>
-</li>
-</ul>
-<a name="getNumSlots--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumSlots</h4>
-<pre>public static&nbsp;int&nbsp;getNumSlots()</pre>
-<div class="block">Computes the number of slots in the header</div>
-</li>
-</ul>
-<a name="getBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBeforeImage</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a>&nbsp;getBeforeImage()</pre>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getBeforeImage--">getBeforeImage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="setBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setBeforeImage</h4>
-<pre>public&nbsp;void&nbsp;setBeforeImage()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#setBeforeImage--">setBeforeImage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getId()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Page.html#getId--">Page</a></code></span></div>
-<div class="block">Return the id of this page.  The id is a unique identifier for a page
- that can be used to look up the page on disk or determine if the page
- is resident in the buffer pool.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getId--">getId</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the PageId associated with this page.</dd>
-</dl>
-</li>
-</ul>
-<a name="getPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPageData</h4>
-<pre>public&nbsp;byte[]&nbsp;getPageData()</pre>
-<div class="block">Generates a byte array representing the contents of this page.
- Used to serialize this page to disk.
- <p>
- The invariant here is that it should be possible to pass the byte
- array generated by getPageData to the BTreeHeaderPage constructor and
- have it produce an identical BTreeHeaderPage object.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getPageData--">getPageData</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A byte array correspond to the bytes of this page.</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeHeaderPage.html#BTreeHeaderPage-simpledb.BTreePageId-byte:A-"><code>BTreeHeaderPage(simpledb.BTreePageId, byte[])</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="createEmptyPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createEmptyPageData</h4>
-<pre>public static&nbsp;byte[]&nbsp;createEmptyPageData()</pre>
-<div class="block">Static method to generate a byte array corresponding to an empty
- BTreeHeaderPage.
- Used to add new, empty pages to the file. Passing the results of
- this method to the BTreeHeaderPage constructor will create a BTreeHeaderPage with
- no valid data in it.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The returned ByteArray.</dd>
-</dl>
-</li>
-</ul>
-<a name="getPrevPageId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPrevPageId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getPrevPageId()</pre>
-<div class="block">Get the page id of the previous header page</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the page id of the previous header page</dd>
-</dl>
-</li>
-</ul>
-<a name="getNextPageId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNextPageId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getNextPageId()</pre>
-<div class="block">Get the page id of the next header page</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the page id of the next header page</dd>
-</dl>
-</li>
-</ul>
-<a name="setPrevPageId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setPrevPageId</h4>
-<pre>public&nbsp;void&nbsp;setPrevPageId(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)
-                   throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Set the page id of the previous header page</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the page id of the previous header page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="setNextPageId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setNextPageId</h4>
-<pre>public&nbsp;void&nbsp;setNextPageId(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)
-                   throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Set the page id of the next header page</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the page id of the next header page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="markDirty-boolean-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>markDirty</h4>
-<pre>public&nbsp;void&nbsp;markDirty(boolean&nbsp;dirty,
-                      <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</pre>
-<div class="block">Marks this page as dirty/not dirty and record that transaction
- that did the dirtying</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="isDirty--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isDirty</h4>
-<pre>public&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;isDirty()</pre>
-<div class="block">Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#isDirty--">isDirty</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The id of the transaction that last dirtied this page, or null</dd>
-</dl>
-</li>
-</ul>
-<a name="isSlotUsed-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isSlotUsed</h4>
-<pre>public&nbsp;boolean&nbsp;isSlotUsed(int&nbsp;i)</pre>
-<div class="block">Returns true if the page of the BTreeFile associated with slot i is used</div>
-</li>
-</ul>
-<a name="markSlotUsed-int-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>markSlotUsed</h4>
-<pre>public&nbsp;void&nbsp;markSlotUsed(int&nbsp;i,
-                         boolean&nbsp;value)</pre>
-<div class="block">Abstraction to mark a page of the BTreeFile used or unused</div>
-</li>
-</ul>
-<a name="getEmptySlot--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getEmptySlot</h4>
-<pre>public&nbsp;int&nbsp;getEmptySlot()</pre>
-<div class="block">get the index of the first empty slot</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the index of the first empty slot or -1 if none exists</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeFileIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeHeaderPage.html" target="_top">Frames</a></li>
-<li><a href="BTreeHeaderPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeInternalPage.html lab4/javadoc/simpledb/BTreeInternalPage.html
--- lab3/javadoc/simpledb/BTreeInternalPage.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeInternalPage.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,883 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeInternalPage</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeInternalPage";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeHeaderPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeInternalPageIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeInternalPage.html" target="_top">Frames</a></li>
-<li><a href="BTreeInternalPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeInternalPage" class="title">Class BTreeInternalPage</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/BTreePage.html" title="class in simpledb">simpledb.BTreePage</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeInternalPage</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeInternalPage</span>
-extends <a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></pre>
-<div class="block">Each instance of BTreeInternalPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html" title="class in simpledb"><code>BTreeFile</code></a>, 
-<a href="../simpledb/BufferPool.html" title="class in simpledb"><code>BufferPool</code></a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#childCategory">childCategory</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#children">children</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#header">header</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#keys">keys</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#numSlots">numSlots</a></span></code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="fields.inherited.from.class.simpledb.BTreePage">
-<!--   -->
-</a>
-<h3>Fields inherited from class&nbsp;simpledb.<a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></h3>
-<code><a href="../simpledb/BTreePage.html#dirtier">dirtier</a>, <a href="../simpledb/BTreePage.html#dirty">dirty</a>, <a href="../simpledb/BTreePage.html#INDEX_SIZE">INDEX_SIZE</a>, <a href="../simpledb/BTreePage.html#keyField">keyField</a>, <a href="../simpledb/BTreePage.html#oldData">oldData</a>, <a href="../simpledb/BTreePage.html#oldDataLock">oldDataLock</a>, <a href="../simpledb/BTreePage.html#parent">parent</a>, <a href="../simpledb/BTreePage.html#pid">pid</a>, <a href="../simpledb/BTreePage.html#td">td</a></code></li>
-</ul>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#BTreeInternalPage-simpledb.BTreePageId-byte:A-int-">BTreeInternalPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-                 byte[]&nbsp;data,
-                 int&nbsp;key)</code>
-<div class="block">Create a BTreeInternalPage from a set of bytes of data read from disk.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#checkRep-simpledb.Field-simpledb.Field-boolean-int-">checkRep</a></span>(<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;lowerBound,
-        <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;upperBound,
-        boolean&nbsp;checkOccupancy,
-        int&nbsp;depth)</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#deleteEntry-simpledb.BTreeEntry-boolean-">deleteEntry</a></span>(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e,
-           boolean&nbsp;deleteRightChild)</code>
-<div class="block">Delete the specified entry (key + 1 child pointer) from the page.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#deleteKeyAndLeftChild-simpledb.BTreeEntry-">deleteKeyAndLeftChild</a></span>(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e)</code>
-<div class="block">Delete the specified entry (key + left child pointer) from the page.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#deleteKeyAndRightChild-simpledb.BTreeEntry-">deleteKeyAndRightChild</a></span>(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e)</code>
-<div class="block">Delete the specified entry (key + right child pointer) from the page.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#getBeforeImage--">getBeforeImage</a></span>()</code>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#getChildId-int-">getChildId</a></span>(int&nbsp;i)</code>
-<div class="block">protected method used by the iterator to get the ith child page id out of this page</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#getHeaderSize--">getHeaderSize</a></span>()</code>
-<div class="block">Computes the number of bytes in the header of a B+ internal page with each entry occupying entrySize bytes</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#getKey-int-">getKey</a></span>(int&nbsp;i)</code>
-<div class="block">protected method used by the iterator to get the ith key out of this page</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#getMaxEntries--">getMaxEntries</a></span>()</code>
-<div class="block">Retrieve the maximum number of entries this page can hold.</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#getNumEmptySlots--">getNumEmptySlots</a></span>()</code>
-<div class="block">Returns the number of empty slots on this page.</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#getNumEntries--">getNumEntries</a></span>()</code>
-<div class="block">Returns the number of entries (keys) currently stored on this page</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#getPageData--">getPageData</a></span>()</code>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#insertEntry-simpledb.BTreeEntry-">insertEntry</a></span>(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e)</code>
-<div class="block">Adds the specified entry to the page; the entry's recordId should be updated to 
- reflect that it is now stored on this page.</div>
-</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#isSlotUsed-int-">isSlotUsed</a></span>(int&nbsp;i)</code>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#iterator--">iterator</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i15" class="rowColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#markSlotUsed-int-boolean-">markSlotUsed</a></span>(int&nbsp;i,
-            boolean&nbsp;value)</code>
-<div class="block">Abstraction to fill or clear a slot on this page.</div>
-</td>
-</tr>
-<tr id="i16" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#moveEntry-int-int-">moveEntry</a></span>(int&nbsp;from,
-         int&nbsp;to)</code>
-<div class="block">Move an entry from one slot to another slot, and update the corresponding
- headers</div>
-</td>
-</tr>
-<tr id="i17" class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#readNextChild-java.io.DataInputStream-int-">readNextChild</a></span>(java.io.DataInputStream&nbsp;dis,
-             int&nbsp;slotId)</code>
-<div class="block">Read child pointers from the source file.</div>
-</td>
-</tr>
-<tr id="i18" class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#readNextKey-java.io.DataInputStream-int-">readNextKey</a></span>(java.io.DataInputStream&nbsp;dis,
-           int&nbsp;slotId)</code>
-<div class="block">Read keys from the source file.</div>
-</td>
-</tr>
-<tr id="i19" class="rowColor">
-<td class="colFirst"><code>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#reverseIterator--">reverseIterator</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i20" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#setBeforeImage--">setBeforeImage</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i21" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPage.html#updateEntry-simpledb.BTreeEntry-">updateEntry</a></span>(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e)</code>
-<div class="block">Update the key and/or child pointers of an entry at the location specified by its 
- record id.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.BTreePage">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></h3>
-<code><a href="../simpledb/BTreePage.html#createEmptyPageData--">createEmptyPageData</a>, <a href="../simpledb/BTreePage.html#getId--">getId</a>, <a href="../simpledb/BTreePage.html#getParentId--">getParentId</a>, <a href="../simpledb/BTreePage.html#isDirty--">isDirty</a>, <a href="../simpledb/BTreePage.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a>, <a href="../simpledb/BTreePage.html#setParentId-simpledb.BTreePageId-">setParentId</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="header">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>header</h4>
-<pre>private final&nbsp;byte[] header</pre>
-</li>
-</ul>
-<a name="keys">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>keys</h4>
-<pre>private final&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>[] keys</pre>
-</li>
-</ul>
-<a name="children">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>children</h4>
-<pre>private final&nbsp;int[] children</pre>
-</li>
-</ul>
-<a name="numSlots">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>numSlots</h4>
-<pre>private final&nbsp;int numSlots</pre>
-</li>
-</ul>
-<a name="childCategory">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>childCategory</h4>
-<pre>private&nbsp;int childCategory</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeInternalPage-simpledb.BTreePageId-byte:A-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeInternalPage</h4>
-<pre>public&nbsp;BTreeInternalPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-                         byte[]&nbsp;data,
-                         int&nbsp;key)
-                  throws java.io.IOException</pre>
-<div class="block">Create a BTreeInternalPage from a set of bytes of data read from disk.
- The format of a BTreeInternalPage is a set of header bytes indicating
- the slots of the page that are in use, some number of entry slots, and extra
- bytes for the parent pointer, one extra child pointer (a node with m entries 
- has m+1 pointers to children), and the category of all child pages (either 
- leaf or internal).
-  Specifically, the number of entries is equal to: <p>
-          floor((BufferPool.getPageSize()*8 - extra bytes*8) / (entry size * 8 + 1))
- <p> where entry size is the size of entries in this index node
- (key + child pointer), which can be determined via the key field and 
- <a href="../simpledb/Catalog.html#getTupleDesc-int-"><code>Catalog.getTupleDesc(int)</code></a>.
- The number of 8-bit header words is equal to:
- <p>
-      ceiling((no. entry slots + 1) / 8)
- <p></div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the id of this page</dd>
-<dd><code>data</code> - - the raw data of this page</dd>
-<dd><code>key</code> - - the field which the index is keyed on</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Database.html#getCatalog--"><code>Database.getCatalog()</code></a>, 
-<a href="../simpledb/Catalog.html#getTupleDesc-int-"><code>Catalog.getTupleDesc(int)</code></a>, 
-<a href="../simpledb/BufferPool.html#getPageSize--"><code>BufferPool.getPageSize()</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="checkRep-simpledb.Field-simpledb.Field-boolean-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>checkRep</h4>
-<pre>public&nbsp;void&nbsp;checkRep(<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;lowerBound,
-                     <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;upperBound,
-                     boolean&nbsp;checkOccupancy,
-                     int&nbsp;depth)</pre>
-</li>
-</ul>
-<a name="getMaxEntries--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getMaxEntries</h4>
-<pre>public&nbsp;int&nbsp;getMaxEntries()</pre>
-<div class="block">Retrieve the maximum number of entries this page can hold. (The number of keys)</div>
-</li>
-</ul>
-<a name="getHeaderSize--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getHeaderSize</h4>
-<pre>private&nbsp;int&nbsp;getHeaderSize()</pre>
-<div class="block">Computes the number of bytes in the header of a B+ internal page with each entry occupying entrySize bytes</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the number of bytes in the header</dd>
-</dl>
-</li>
-</ul>
-<a name="getBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBeforeImage</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;getBeforeImage()</pre>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</li>
-</ul>
-<a name="setBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setBeforeImage</h4>
-<pre>public&nbsp;void&nbsp;setBeforeImage()</pre>
-</li>
-</ul>
-<a name="readNextKey-java.io.DataInputStream-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readNextKey</h4>
-<pre>private&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;readNextKey(java.io.DataInputStream&nbsp;dis,
-                          int&nbsp;slotId)
-                   throws java.util.NoSuchElementException</pre>
-<div class="block">Read keys from the source file.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="readNextChild-java.io.DataInputStream-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readNextChild</h4>
-<pre>private&nbsp;int&nbsp;readNextChild(java.io.DataInputStream&nbsp;dis,
-                          int&nbsp;slotId)
-                   throws java.util.NoSuchElementException</pre>
-<div class="block">Read child pointers from the source file.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="getPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPageData</h4>
-<pre>public&nbsp;byte[]&nbsp;getPageData()</pre>
-<div class="block">Generates a byte array representing the contents of this page.
- Used to serialize this page to disk.
- <p>
- The invariant here is that it should be possible to pass the byte
- array generated by getPageData to the BTreeInternalPage constructor and
- have it produce an identical BTreeInternalPage object.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A byte array correspond to the bytes of this page.</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeInternalPage.html#BTreeInternalPage-simpledb.BTreePageId-byte:A-int-"><code>BTreeInternalPage(simpledb.BTreePageId, byte[], int)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="deleteEntry-simpledb.BTreeEntry-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteEntry</h4>
-<pre>private&nbsp;void&nbsp;deleteEntry(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e,
-                         boolean&nbsp;deleteRightChild)
-                  throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Delete the specified entry (key + 1 child pointer) from the page. The recordId
- is used to find the specified entry, so it must not be null. After deletion, the 
- entry's recordId should be set to null to reflect that it is no longer stored on 
- any page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>e</code> - The entry to delete</dd>
-<dd><code>deleteRightChild</code> - - if true, delete the right child. Otherwise
-        delete the left child</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if this entry is not on this page, or entry slot is
-         already empty.</dd>
-</dl>
-</li>
-</ul>
-<a name="deleteKeyAndRightChild-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteKeyAndRightChild</h4>
-<pre>public&nbsp;void&nbsp;deleteKeyAndRightChild(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e)
-                            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Delete the specified entry (key + right child pointer) from the page. The recordId
- is used to find the specified entry, so it must not be null. After deletion, the 
- entry's recordId should be set to null to reflect that it is no longer stored on 
- any page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>e</code> - The entry to delete</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if this entry is not on this page, or entry slot is
-         already empty.</dd>
-</dl>
-</li>
-</ul>
-<a name="deleteKeyAndLeftChild-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteKeyAndLeftChild</h4>
-<pre>public&nbsp;void&nbsp;deleteKeyAndLeftChild(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e)
-                           throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Delete the specified entry (key + left child pointer) from the page. The recordId
- is used to find the specified entry, so it must not be null. After deletion, the 
- entry's recordId should be set to null to reflect that it is no longer stored on 
- any page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>e</code> - The entry to delete</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if this entry is not on this page, or entry slot is
-         already empty.</dd>
-</dl>
-</li>
-</ul>
-<a name="updateEntry-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>updateEntry</h4>
-<pre>public&nbsp;void&nbsp;updateEntry(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Update the key and/or child pointers of an entry at the location specified by its 
- record id.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>e</code> - - the entry with updated key and/or child pointers</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if this entry is not on this page, entry slot is
-         already empty, or updating this key would put the entry out of 
-         order on the page</dd>
-</dl>
-</li>
-</ul>
-<a name="insertEntry-simpledb.BTreeEntry-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>insertEntry</h4>
-<pre>public&nbsp;void&nbsp;insertEntry(<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;e)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Adds the specified entry to the page; the entry's recordId should be updated to 
- reflect that it is now stored on this page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>e</code> - The entry to add.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the page is full (no empty slots) or key field type,
-         table id, or child page category is a mismatch, or the entry is invalid</dd>
-</dl>
-</li>
-</ul>
-<a name="moveEntry-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>moveEntry</h4>
-<pre>private&nbsp;void&nbsp;moveEntry(int&nbsp;from,
-                       int&nbsp;to)</pre>
-<div class="block">Move an entry from one slot to another slot, and update the corresponding
- headers</div>
-</li>
-</ul>
-<a name="getNumEntries--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumEntries</h4>
-<pre>public&nbsp;int&nbsp;getNumEntries()</pre>
-<div class="block">Returns the number of entries (keys) currently stored on this page</div>
-</li>
-</ul>
-<a name="getNumEmptySlots--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumEmptySlots</h4>
-<pre>public&nbsp;int&nbsp;getNumEmptySlots()</pre>
-<div class="block">Returns the number of empty slots on this page.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/BTreePage.html#getNumEmptySlots--">getNumEmptySlots</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="isSlotUsed-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isSlotUsed</h4>
-<pre>public&nbsp;boolean&nbsp;isSlotUsed(int&nbsp;i)</pre>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/BTreePage.html#isSlotUsed-int-">isSlotUsed</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="markSlotUsed-int-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>markSlotUsed</h4>
-<pre>private&nbsp;void&nbsp;markSlotUsed(int&nbsp;i,
-                          boolean&nbsp;value)</pre>
-<div class="block">Abstraction to fill or clear a slot on this page.</div>
-</li>
-</ul>
-<a name="iterator--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>iterator</h4>
-<pre>public&nbsp;java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&nbsp;iterator()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an iterator over all entries on this page (calling remove on this iterator throws an UnsupportedOperationException)
- (note that this iterator shouldn't return entries in empty slots!)</dd>
-</dl>
-</li>
-</ul>
-<a name="reverseIterator--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>reverseIterator</h4>
-<pre>public&nbsp;java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&nbsp;reverseIterator()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a reverse iterator over all entries on this page (calling remove on this iterator throws an UnsupportedOperationException)
- (note that this iterator shouldn't return entries in empty slots!)</dd>
-</dl>
-</li>
-</ul>
-<a name="getKey-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getKey</h4>
-<pre>protected&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;getKey(int&nbsp;i)
-                throws java.util.NoSuchElementException</pre>
-<div class="block">protected method used by the iterator to get the ith key out of this page</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - - the index of the key</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the ith key</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildId-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getChildId</h4>
-<pre>protected&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getChildId(int&nbsp;i)
-                          throws java.util.NoSuchElementException</pre>
-<div class="block">protected method used by the iterator to get the ith child page id out of this page</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - - the index of the child page id</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the ith child page id</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeHeaderPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeInternalPageIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeInternalPage.html" target="_top">Frames</a></li>
-<li><a href="BTreeInternalPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeInternalPageIterator.html lab4/javadoc/simpledb/BTreeInternalPageIterator.html
--- lab3/javadoc/simpledb/BTreeInternalPageIterator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeInternalPageIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,393 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeInternalPageIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeInternalPageIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeInternalPageIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeInternalPageIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeInternalPageIterator" class="title">Class BTreeInternalPageIterator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeInternalPageIterator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</dd>
-</dl>
-<hr>
-<br>
-<pre>class <span class="typeNameLabel">BTreeInternalPageIterator</span>
-extends java.lang.Object
-implements java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</pre>
-<div class="block">Helper class that implements the Java Iterator for entries on a BTreeInternalPage.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageIterator.html#curEntry">curEntry</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageIterator.html#nextToReturn">nextToReturn</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageIterator.html#p">p</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageIterator.html#prevChildId">prevChildId</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageIterator.html#BTreeInternalPageIterator-simpledb.BTreeInternalPage-">BTreeInternalPageIterator</a></span>(<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;p)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageIterator.html#hasNext--">hasNext</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageIterator.html#next--">next</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageIterator.html#remove--">remove</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.util.Iterator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;java.util.Iterator</h3>
-<code>forEachRemaining</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="curEntry">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>curEntry</h4>
-<pre>int curEntry</pre>
-</li>
-</ul>
-<a name="prevChildId">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>prevChildId</h4>
-<pre><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> prevChildId</pre>
-</li>
-</ul>
-<a name="nextToReturn">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>nextToReturn</h4>
-<pre><a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a> nextToReturn</pre>
-</li>
-</ul>
-<a name="p">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>p</h4>
-<pre><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a> p</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeInternalPageIterator-simpledb.BTreeInternalPage-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeInternalPageIterator</h4>
-<pre>public&nbsp;BTreeInternalPageIterator(<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;p)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>hasNext</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;next()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>next</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-<a name="remove--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>remove</h4>
-<pre>public&nbsp;void&nbsp;remove()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>remove</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeInternalPageIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeInternalPageIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeInternalPageReverseIterator.html lab4/javadoc/simpledb/BTreeInternalPageReverseIterator.html
--- lab3/javadoc/simpledb/BTreeInternalPageReverseIterator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeInternalPageReverseIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,419 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeInternalPageReverseIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeInternalPageReverseIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeInternalPageIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeInternalPageReverseIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeInternalPageReverseIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeInternalPageReverseIterator" class="title">Class BTreeInternalPageReverseIterator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeInternalPageReverseIterator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</dd>
-</dl>
-<hr>
-<br>
-<pre>class <span class="typeNameLabel">BTreeInternalPageReverseIterator</span>
-extends java.lang.Object
-implements java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</pre>
-<div class="block">Helper class that implements the Java Iterator for entries on a BTreeInternalPage in reverse.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#childId">childId</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#curEntry">curEntry</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#key">key</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#nextToReturn">nextToReturn</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#p">p</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#recordId">recordId</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#BTreeInternalPageReverseIterator-simpledb.BTreeInternalPage-">BTreeInternalPageReverseIterator</a></span>(<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;p)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#hasNext--">hasNext</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#next--">next</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeInternalPageReverseIterator.html#remove--">remove</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.util.Iterator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;java.util.Iterator</h3>
-<code>forEachRemaining</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="curEntry">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>curEntry</h4>
-<pre>int curEntry</pre>
-</li>
-</ul>
-<a name="childId">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>childId</h4>
-<pre><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> childId</pre>
-</li>
-</ul>
-<a name="key">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>key</h4>
-<pre><a href="../simpledb/Field.html" title="interface in simpledb">Field</a> key</pre>
-</li>
-</ul>
-<a name="recordId">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>recordId</h4>
-<pre><a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a> recordId</pre>
-</li>
-</ul>
-<a name="nextToReturn">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>nextToReturn</h4>
-<pre><a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a> nextToReturn</pre>
-</li>
-</ul>
-<a name="p">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>p</h4>
-<pre><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a> p</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeInternalPageReverseIterator-simpledb.BTreeInternalPage-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeInternalPageReverseIterator</h4>
-<pre>public&nbsp;BTreeInternalPageReverseIterator(<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;p)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>hasNext</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;next()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>next</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-<a name="remove--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>remove</h4>
-<pre>public&nbsp;void&nbsp;remove()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>remove</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeInternalPageIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeInternalPageReverseIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeInternalPageReverseIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeLeafPage.html lab4/javadoc/simpledb/BTreeLeafPage.html
--- lab3/javadoc/simpledb/BTreeLeafPage.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeLeafPage.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,832 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeLeafPage</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeLeafPage";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeLeafPageIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeLeafPage.html" target="_top">Frames</a></li>
-<li><a href="BTreeLeafPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeLeafPage" class="title">Class BTreeLeafPage</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/BTreePage.html" title="class in simpledb">simpledb.BTreePage</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeLeafPage</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeLeafPage</span>
-extends <a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></pre>
-<div class="block">Each instance of BTreeLeafPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html" title="class in simpledb"><code>BTreeFile</code></a>, 
-<a href="../simpledb/BufferPool.html" title="class in simpledb"><code>BufferPool</code></a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#header">header</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#leftSibling">leftSibling</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#numSlots">numSlots</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#rightSibling">rightSibling</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#tuples">tuples</a></span></code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="fields.inherited.from.class.simpledb.BTreePage">
-<!--   -->
-</a>
-<h3>Fields inherited from class&nbsp;simpledb.<a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></h3>
-<code><a href="../simpledb/BTreePage.html#dirtier">dirtier</a>, <a href="../simpledb/BTreePage.html#dirty">dirty</a>, <a href="../simpledb/BTreePage.html#INDEX_SIZE">INDEX_SIZE</a>, <a href="../simpledb/BTreePage.html#keyField">keyField</a>, <a href="../simpledb/BTreePage.html#oldData">oldData</a>, <a href="../simpledb/BTreePage.html#oldDataLock">oldDataLock</a>, <a href="../simpledb/BTreePage.html#parent">parent</a>, <a href="../simpledb/BTreePage.html#pid">pid</a>, <a href="../simpledb/BTreePage.html#td">td</a></code></li>
-</ul>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#BTreeLeafPage-simpledb.BTreePageId-byte:A-int-">BTreeLeafPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-             byte[]&nbsp;data,
-             int&nbsp;key)</code>
-<div class="block">Create a BTreeLeafPage from a set of bytes of data read from disk.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#checkRep-int-simpledb.Field-simpledb.Field-boolean-int-">checkRep</a></span>(int&nbsp;fieldid,
-        <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;lowerBound,
-        <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;upperBound,
-        boolean&nbsp;checkoccupancy,
-        int&nbsp;depth)</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#deleteTuple-simpledb.Tuple-">deleteTuple</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Delete the specified tuple from the page;  the tuple should be updated to reflect
-   that it is no longer stored on any page.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#getBeforeImage--">getBeforeImage</a></span>()</code>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#getHeaderSize--">getHeaderSize</a></span>()</code>
-<div class="block">Computes the number of bytes in the header of a page in a BTreeFile with each tuple occupying tupleSize bytes</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#getLeftSiblingId--">getLeftSiblingId</a></span>()</code>
-<div class="block">Get the id of the left sibling of this page</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#getMaxTuples--">getMaxTuples</a></span>()</code>
-<div class="block">Retrieve the maximum number of tuples this page can hold.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#getNumEmptySlots--">getNumEmptySlots</a></span>()</code>
-<div class="block">Returns the number of empty slots on this page.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#getNumTuples--">getNumTuples</a></span>()</code>
-<div class="block">Returns the number of tuples currently stored on this page</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#getPageData--">getPageData</a></span>()</code>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#getRightSiblingId--">getRightSiblingId</a></span>()</code>
-<div class="block">Get the id of the right sibling of this page</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#getTuple-int-">getTuple</a></span>(int&nbsp;i)</code>
-<div class="block">protected method used by the iterator to get the ith tuple out of this page</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#insertTuple-simpledb.Tuple-">insertTuple</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Adds the specified tuple to the page such that all records remain in sorted order;  
- the tuple should be updated to reflect
-  that it is now stored on this page.</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#isSlotUsed-int-">isSlotUsed</a></span>(int&nbsp;i)</code>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#iterator--">iterator</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#markSlotUsed-int-boolean-">markSlotUsed</a></span>(int&nbsp;i,
-            boolean&nbsp;value)</code>
-<div class="block">Abstraction to fill or clear a slot on this page.</div>
-</td>
-</tr>
-<tr id="i15" class="rowColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#moveRecord-int-int-">moveRecord</a></span>(int&nbsp;from,
-          int&nbsp;to)</code>
-<div class="block">Move a record from one slot to another slot, and update the corresponding
- headers and RecordId</div>
-</td>
-</tr>
-<tr id="i16" class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#readNextTuple-java.io.DataInputStream-int-">readNextTuple</a></span>(java.io.DataInputStream&nbsp;dis,
-             int&nbsp;slotId)</code>
-<div class="block">Read tuples from the source file.</div>
-</td>
-</tr>
-<tr id="i17" class="rowColor">
-<td class="colFirst"><code>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#reverseIterator--">reverseIterator</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i18" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#setBeforeImage--">setBeforeImage</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i19" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#setLeftSiblingId-simpledb.BTreePageId-">setLeftSiblingId</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)</code>
-<div class="block">Set the left sibling id of this page</div>
-</td>
-</tr>
-<tr id="i20" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPage.html#setRightSiblingId-simpledb.BTreePageId-">setRightSiblingId</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)</code>
-<div class="block">Set the right sibling id of this page</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.BTreePage">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></h3>
-<code><a href="../simpledb/BTreePage.html#createEmptyPageData--">createEmptyPageData</a>, <a href="../simpledb/BTreePage.html#getId--">getId</a>, <a href="../simpledb/BTreePage.html#getParentId--">getParentId</a>, <a href="../simpledb/BTreePage.html#isDirty--">isDirty</a>, <a href="../simpledb/BTreePage.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a>, <a href="../simpledb/BTreePage.html#setParentId-simpledb.BTreePageId-">setParentId</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="header">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>header</h4>
-<pre>private final&nbsp;byte[] header</pre>
-</li>
-</ul>
-<a name="tuples">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tuples</h4>
-<pre>private final&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>[] tuples</pre>
-</li>
-</ul>
-<a name="numSlots">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>numSlots</h4>
-<pre>private final&nbsp;int numSlots</pre>
-</li>
-</ul>
-<a name="leftSibling">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>leftSibling</h4>
-<pre>private&nbsp;int leftSibling</pre>
-</li>
-</ul>
-<a name="rightSibling">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>rightSibling</h4>
-<pre>private&nbsp;int rightSibling</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeLeafPage-simpledb.BTreePageId-byte:A-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeLeafPage</h4>
-<pre>public&nbsp;BTreeLeafPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-                     byte[]&nbsp;data,
-                     int&nbsp;key)
-              throws java.io.IOException</pre>
-<div class="block">Create a BTreeLeafPage from a set of bytes of data read from disk.
- The format of a BTreeLeafPage is a set of header bytes indicating
- the slots of the page that are in use, and some number of tuple slots, 
- as well as some extra bytes for the parent and sibling pointers.
-  Specifically, the number of tuples is equal to: <p>
-          floor((BufferPool.getPageSize()*8 - extra bytes*8) / (tuple size * 8 + 1))
- <p> where tuple size is the size of tuples in this
- database table, which can be determined via <a href="../simpledb/Catalog.html#getTupleDesc-int-"><code>Catalog.getTupleDesc(int)</code></a>.
- The number of 8-bit header words is equal to:
- <p>
-      ceiling(no. tuple slots / 8)
- <p></div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the id of this page</dd>
-<dd><code>data</code> - - the raw data of this page</dd>
-<dd><code>key</code> - - the field which the index is keyed on</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Database.html#getCatalog--"><code>Database.getCatalog()</code></a>, 
-<a href="../simpledb/Catalog.html#getTupleDesc-int-"><code>Catalog.getTupleDesc(int)</code></a>, 
-<a href="../simpledb/BufferPool.html#getPageSize--"><code>BufferPool.getPageSize()</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="checkRep-int-simpledb.Field-simpledb.Field-boolean-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>checkRep</h4>
-<pre>public&nbsp;void&nbsp;checkRep(int&nbsp;fieldid,
-                     <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;lowerBound,
-                     <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;upperBound,
-                     boolean&nbsp;checkoccupancy,
-                     int&nbsp;depth)</pre>
-</li>
-</ul>
-<a name="getMaxTuples--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getMaxTuples</h4>
-<pre>public&nbsp;int&nbsp;getMaxTuples()</pre>
-<div class="block">Retrieve the maximum number of tuples this page can hold.</div>
-</li>
-</ul>
-<a name="getHeaderSize--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getHeaderSize</h4>
-<pre>private&nbsp;int&nbsp;getHeaderSize()</pre>
-<div class="block">Computes the number of bytes in the header of a page in a BTreeFile with each tuple occupying tupleSize bytes</div>
-</li>
-</ul>
-<a name="getBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBeforeImage</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;getBeforeImage()</pre>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</li>
-</ul>
-<a name="setBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setBeforeImage</h4>
-<pre>public&nbsp;void&nbsp;setBeforeImage()</pre>
-</li>
-</ul>
-<a name="readNextTuple-java.io.DataInputStream-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readNextTuple</h4>
-<pre>private&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;readNextTuple(java.io.DataInputStream&nbsp;dis,
-                            int&nbsp;slotId)
-                     throws java.util.NoSuchElementException</pre>
-<div class="block">Read tuples from the source file.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="getPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPageData</h4>
-<pre>public&nbsp;byte[]&nbsp;getPageData()</pre>
-<div class="block">Generates a byte array representing the contents of this page.
- Used to serialize this page to disk.
- <p>
- The invariant here is that it should be possible to pass the byte
- array generated by getPageData to the BTreeLeafPage constructor and
- have it produce an identical BTreeLeafPage object.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A byte array corresponding to the bytes of this page.</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeLeafPage.html#BTreeLeafPage-simpledb.BTreePageId-byte:A-int-"><code>BTreeLeafPage(simpledb.BTreePageId, byte[], int)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="deleteTuple-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteTuple</h4>
-<pre>public&nbsp;void&nbsp;deleteTuple(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Delete the specified tuple from the page;  the tuple should be updated to reflect
-   that it is no longer stored on any page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>t</code> - The tuple to delete</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if this tuple is not on this page, or tuple slot is
-         already empty.</dd>
-</dl>
-</li>
-</ul>
-<a name="insertTuple-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>insertTuple</h4>
-<pre>public&nbsp;void&nbsp;insertTuple(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Adds the specified tuple to the page such that all records remain in sorted order;  
- the tuple should be updated to reflect
-  that it is now stored on this page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>t</code> - The tuple to add.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the page is full (no empty slots) or tupledesc
-         is mismatch.</dd>
-</dl>
-</li>
-</ul>
-<a name="moveRecord-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>moveRecord</h4>
-<pre>private&nbsp;void&nbsp;moveRecord(int&nbsp;from,
-                        int&nbsp;to)</pre>
-<div class="block">Move a record from one slot to another slot, and update the corresponding
- headers and RecordId</div>
-</li>
-</ul>
-<a name="getLeftSiblingId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getLeftSiblingId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getLeftSiblingId()</pre>
-<div class="block">Get the id of the left sibling of this page</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the id of the left sibling</dd>
-</dl>
-</li>
-</ul>
-<a name="getRightSiblingId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getRightSiblingId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getRightSiblingId()</pre>
-<div class="block">Get the id of the right sibling of this page</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the id of the right sibling</dd>
-</dl>
-</li>
-</ul>
-<a name="setLeftSiblingId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setLeftSiblingId</h4>
-<pre>public&nbsp;void&nbsp;setLeftSiblingId(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)
-                      throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Set the left sibling id of this page</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the new left sibling id</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the id is not valid</dd>
-</dl>
-</li>
-</ul>
-<a name="setRightSiblingId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setRightSiblingId</h4>
-<pre>public&nbsp;void&nbsp;setRightSiblingId(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)
-                       throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Set the right sibling id of this page</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the new right sibling id</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the id is not valid</dd>
-</dl>
-</li>
-</ul>
-<a name="getNumTuples--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumTuples</h4>
-<pre>public&nbsp;int&nbsp;getNumTuples()</pre>
-<div class="block">Returns the number of tuples currently stored on this page</div>
-</li>
-</ul>
-<a name="getNumEmptySlots--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumEmptySlots</h4>
-<pre>public&nbsp;int&nbsp;getNumEmptySlots()</pre>
-<div class="block">Returns the number of empty slots on this page.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/BTreePage.html#getNumEmptySlots--">getNumEmptySlots</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="isSlotUsed-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isSlotUsed</h4>
-<pre>public&nbsp;boolean&nbsp;isSlotUsed(int&nbsp;i)</pre>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/BTreePage.html#isSlotUsed-int-">isSlotUsed</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="markSlotUsed-int-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>markSlotUsed</h4>
-<pre>private&nbsp;void&nbsp;markSlotUsed(int&nbsp;i,
-                          boolean&nbsp;value)</pre>
-<div class="block">Abstraction to fill or clear a slot on this page.</div>
-</li>
-</ul>
-<a name="iterator--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>iterator</h4>
-<pre>public&nbsp;java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;iterator()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an iterator over all tuples on this page (calling remove on this iterator throws an UnsupportedOperationException)
- (note that this iterator shouldn't return tuples in empty slots!)</dd>
-</dl>
-</li>
-</ul>
-<a name="reverseIterator--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>reverseIterator</h4>
-<pre>public&nbsp;java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;reverseIterator()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a reverse iterator over all tuples on this page (calling remove on this iterator throws an UnsupportedOperationException)
- (note that this iterator shouldn't return tuples in empty slots!)</dd>
-</dl>
-</li>
-</ul>
-<a name="getTuple-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getTuple</h4>
-<pre><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getTuple(int&nbsp;i)
-        throws java.util.NoSuchElementException</pre>
-<div class="block">protected method used by the iterator to get the ith tuple out of this page</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - - the index of the tuple</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the ith tuple in the page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeLeafPageIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeLeafPage.html" target="_top">Frames</a></li>
-<li><a href="BTreeLeafPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeLeafPageIterator.html lab4/javadoc/simpledb/BTreeLeafPageIterator.html
--- lab3/javadoc/simpledb/BTreeLeafPageIterator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeLeafPageIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,380 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeLeafPageIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeLeafPageIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeLeafPageIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeLeafPageIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeLeafPageIterator" class="title">Class BTreeLeafPageIterator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeLeafPageIterator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</dd>
-</dl>
-<hr>
-<br>
-<pre>class <span class="typeNameLabel">BTreeLeafPageIterator</span>
-extends java.lang.Object
-implements java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</pre>
-<div class="block">Helper class that implements the Java Iterator for tuples on a BTreeLeafPage.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageIterator.html#curTuple">curTuple</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageIterator.html#nextToReturn">nextToReturn</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageIterator.html#p">p</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageIterator.html#BTreeLeafPageIterator-simpledb.BTreeLeafPage-">BTreeLeafPageIterator</a></span>(<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;p)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageIterator.html#hasNext--">hasNext</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageIterator.html#next--">next</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageIterator.html#remove--">remove</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.util.Iterator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;java.util.Iterator</h3>
-<code>forEachRemaining</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="curTuple">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>curTuple</h4>
-<pre>int curTuple</pre>
-</li>
-</ul>
-<a name="nextToReturn">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>nextToReturn</h4>
-<pre><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a> nextToReturn</pre>
-</li>
-</ul>
-<a name="p">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>p</h4>
-<pre><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a> p</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeLeafPageIterator-simpledb.BTreeLeafPage-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeLeafPageIterator</h4>
-<pre>public&nbsp;BTreeLeafPageIterator(<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;p)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>hasNext</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>next</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-<a name="remove--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>remove</h4>
-<pre>public&nbsp;void&nbsp;remove()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>remove</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeLeafPageIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeLeafPageIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeLeafPageReverseIterator.html lab4/javadoc/simpledb/BTreeLeafPageReverseIterator.html
--- lab3/javadoc/simpledb/BTreeLeafPageReverseIterator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeLeafPageReverseIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,380 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeLeafPageReverseIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeLeafPageReverseIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeLeafPageIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreePage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeLeafPageReverseIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeLeafPageReverseIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeLeafPageReverseIterator" class="title">Class BTreeLeafPageReverseIterator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeLeafPageReverseIterator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</dd>
-</dl>
-<hr>
-<br>
-<pre>class <span class="typeNameLabel">BTreeLeafPageReverseIterator</span>
-extends java.lang.Object
-implements java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</pre>
-<div class="block">Helper class that implements the Java Iterator for tuples on a BTreeLeafPage in reverse.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageReverseIterator.html#curTuple">curTuple</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageReverseIterator.html#nextToReturn">nextToReturn</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageReverseIterator.html#p">p</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageReverseIterator.html#BTreeLeafPageReverseIterator-simpledb.BTreeLeafPage-">BTreeLeafPageReverseIterator</a></span>(<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;p)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageReverseIterator.html#hasNext--">hasNext</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageReverseIterator.html#next--">next</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeLeafPageReverseIterator.html#remove--">remove</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.util.Iterator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;java.util.Iterator</h3>
-<code>forEachRemaining</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="curTuple">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>curTuple</h4>
-<pre>int curTuple</pre>
-</li>
-</ul>
-<a name="nextToReturn">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>nextToReturn</h4>
-<pre><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a> nextToReturn</pre>
-</li>
-</ul>
-<a name="p">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>p</h4>
-<pre><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a> p</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeLeafPageReverseIterator-simpledb.BTreeLeafPage-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeLeafPageReverseIterator</h4>
-<pre>public&nbsp;BTreeLeafPageReverseIterator(<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;p)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>hasNext</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>next</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-<a name="remove--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>remove</h4>
-<pre>public&nbsp;void&nbsp;remove()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>remove</code>&nbsp;in interface&nbsp;<code>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeLeafPageIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreePage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeLeafPageReverseIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeLeafPageReverseIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreePage.html lab4/javadoc/simpledb/BTreePage.html
--- lab3/javadoc/simpledb/BTreePage.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreePage.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,620 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreePage</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreePage";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":10,"i2":6,"i3":10,"i4":10,"i5":6,"i6":10,"i7":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreePageId.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreePage.html" target="_top">Frames</a></li>
-<li><a href="BTreePage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreePage" class="title">Class BTreePage</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreePage</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></dd>
-</dl>
-<dl>
-<dt>Direct Known Subclasses:</dt>
-<dd><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>, <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public abstract class <span class="typeNameLabel">BTreePage</span>
-extends java.lang.Object
-implements <a href="../simpledb/Page.html" title="interface in simpledb">Page</a></pre>
-<div class="block">Each instance of BTreeInternalPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BTreeFile.html" title="class in simpledb"><code>BTreeFile</code></a>, 
-<a href="../simpledb/BufferPool.html" title="class in simpledb"><code>BufferPool</code></a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>protected <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#dirtier">dirtier</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>protected boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#dirty">dirty</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>protected static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#INDEX_SIZE">INDEX_SIZE</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>protected int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#keyField">keyField</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>protected byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#oldData">oldData</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>protected java.lang.Byte</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#oldDataLock">oldDataLock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>protected int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#parent">parent</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#pid">pid</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>protected <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#td">td</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#BTreePage-simpledb.BTreePageId-int-">BTreePage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-         int&nbsp;key)</code>
-<div class="block">Create a BTreeInternalPage from a set of bytes of data read from disk.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#createEmptyPageData--">createEmptyPageData</a></span>()</code>
-<div class="block">Static method to generate a byte array corresponding to an empty
- BTreePage.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#getId--">getId</a></span>()</code>
-<div class="block">Return the id of this page.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>abstract int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#getNumEmptySlots--">getNumEmptySlots</a></span>()</code>
-<div class="block">Returns the number of empty slots on this page.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#getParentId--">getParentId</a></span>()</code>
-<div class="block">Get the parent id of this page</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#isDirty--">isDirty</a></span>()</code>
-<div class="block">Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>abstract boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#isSlotUsed-int-">isSlotUsed</a></span>(int&nbsp;i)</code>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a></span>(boolean&nbsp;dirty,
-         <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Marks this page as dirty/not dirty and record that transaction
- that did the dirtying</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePage.html#setParentId-simpledb.BTreePageId-">setParentId</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)</code>
-<div class="block">Set the parent id</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.Page">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;simpledb.<a href="../simpledb/Page.html" title="interface in simpledb">Page</a></h3>
-<code><a href="../simpledb/Page.html#getBeforeImage--">getBeforeImage</a>, <a href="../simpledb/Page.html#getPageData--">getPageData</a>, <a href="../simpledb/Page.html#setBeforeImage--">setBeforeImage</a></code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="dirty">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>dirty</h4>
-<pre>protected volatile&nbsp;boolean dirty</pre>
-</li>
-</ul>
-<a name="dirtier">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>dirtier</h4>
-<pre>protected volatile&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> dirtier</pre>
-</li>
-</ul>
-<a name="INDEX_SIZE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>INDEX_SIZE</h4>
-<pre>protected static final&nbsp;int INDEX_SIZE</pre>
-</li>
-</ul>
-<a name="pid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pid</h4>
-<pre>protected final&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> pid</pre>
-</li>
-</ul>
-<a name="td">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>td</h4>
-<pre>protected final&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-</ul>
-<a name="keyField">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>keyField</h4>
-<pre>protected final&nbsp;int keyField</pre>
-</li>
-</ul>
-<a name="parent">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>parent</h4>
-<pre>protected&nbsp;int parent</pre>
-</li>
-</ul>
-<a name="oldData">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>oldData</h4>
-<pre>protected&nbsp;byte[] oldData</pre>
-</li>
-</ul>
-<a name="oldDataLock">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>oldDataLock</h4>
-<pre>protected final&nbsp;java.lang.Byte oldDataLock</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreePage-simpledb.BTreePageId-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreePage</h4>
-<pre>public&nbsp;BTreePage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-                 int&nbsp;key)
-          throws java.io.IOException</pre>
-<div class="block">Create a BTreeInternalPage from a set of bytes of data read from disk.
- The format of a BTreeInternalPage is a set of header bytes indicating
- the slots of the page that are in use, some number of entry slots, and extra
- bytes for the parent pointer, one extra child pointer (a node with m entries 
- has m+1 pointers to children), and the category of all child pages (either 
- leaf or internal).
-  Specifically, the number of entries is equal to: <p>
-          floor((BufferPool.getPageSize()*8 - extra bytes*8) / (entry size * 8 + 1))
- <p> where entry size is the size of entries in this index node
- (key + child pointer), which can be determined via the key field and 
- <a href="../simpledb/Catalog.html#getTupleDesc-int-"><code>Catalog.getTupleDesc(int)</code></a>.
- The number of 8-bit header words is equal to:
- <p>
-      ceiling((no. entry slots + 1) / 8)
- <p></div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the id of this page</dd>
-<dd><code>data</code> - - the raw data of this page</dd>
-<dd><code>key</code> - - the field which the index is keyed on</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Database.html#getCatalog--"><code>Database.getCatalog()</code></a>, 
-<a href="../simpledb/Catalog.html#getTupleDesc-int-"><code>Catalog.getTupleDesc(int)</code></a>, 
-<a href="../simpledb/BufferPool.html#getPageSize--"><code>BufferPool.getPageSize()</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getId()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Page.html#getId--">Page</a></code></span></div>
-<div class="block">Return the id of this page.  The id is a unique identifier for a page
- that can be used to look up the page on disk or determine if the page
- is resident in the buffer pool.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getId--">getId</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the PageId associated with this page.</dd>
-</dl>
-</li>
-</ul>
-<a name="createEmptyPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createEmptyPageData</h4>
-<pre>public static&nbsp;byte[]&nbsp;createEmptyPageData()</pre>
-<div class="block">Static method to generate a byte array corresponding to an empty
- BTreePage.
- Used to add new, empty pages to the file. Passing the results of
- this method to the BTreeInternalPage or BTreeLeafPage constructor will create a BTreePage with
- no valid entries in it.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The returned ByteArray.</dd>
-</dl>
-</li>
-</ul>
-<a name="getParentId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getParentId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getParentId()</pre>
-<div class="block">Get the parent id of this page</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the parent id</dd>
-</dl>
-</li>
-</ul>
-<a name="setParentId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setParentId</h4>
-<pre>public&nbsp;void&nbsp;setParentId(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Set the parent id</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the id of the parent of this page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the id is not valid</dd>
-</dl>
-</li>
-</ul>
-<a name="markDirty-boolean-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>markDirty</h4>
-<pre>public&nbsp;void&nbsp;markDirty(boolean&nbsp;dirty,
-                      <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</pre>
-<div class="block">Marks this page as dirty/not dirty and record that transaction
- that did the dirtying</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="isDirty--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isDirty</h4>
-<pre>public&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;isDirty()</pre>
-<div class="block">Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#isDirty--">isDirty</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The id of the transaction that last dirtied this page, or null</dd>
-</dl>
-</li>
-</ul>
-<a name="getNumEmptySlots--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumEmptySlots</h4>
-<pre>public abstract&nbsp;int&nbsp;getNumEmptySlots()</pre>
-<div class="block">Returns the number of empty slots on this page.</div>
-</li>
-</ul>
-<a name="isSlotUsed-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>isSlotUsed</h4>
-<pre>public abstract&nbsp;boolean&nbsp;isSlotUsed(int&nbsp;i)</pre>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreePageId.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreePage.html" target="_top">Frames</a></li>
-<li><a href="BTreePage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreePageId.html lab4/javadoc/simpledb/BTreePageId.html
--- lab3/javadoc/simpledb/BTreePageId.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreePageId.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,567 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreePageId</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreePageId";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreePage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreePageId.html" target="_top">Frames</a></li>
-<li><a href="BTreePageId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreePageId" class="title">Class BTreePageId</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreePageId</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreePageId</span>
-extends java.lang.Object
-implements <a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></pre>
-<div class="block">Unique identifier for BTreeInternalPage, BTreeLeafPage, BTreeHeaderPage
-  and BTreeRootPtrPage objects.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#HEADER">HEADER</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#INTERNAL">INTERNAL</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#LEAF">LEAF</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#pgcateg">pgcateg</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#pgNo">pgNo</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#ROOT_PTR">ROOT_PTR</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#tableId">tableId</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#BTreePageId-int-int-int-">BTreePageId</a></span>(int&nbsp;tableId,
-           int&nbsp;pgNo,
-           int&nbsp;pgcateg)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#categToString-int-">categToString</a></span>(int&nbsp;categ)</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;o)</code>
-<div class="block">Compares one PageId to another.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#getTableId--">getTableId</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#hashCode--">hashCode</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#pageNumber--">pageNumber</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#pgcateg--">pgcateg</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>int[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#serialize--">serialize</a></span>()</code>
-<div class="block">Return a representation of this object as an array of
-  integers, for writing to disk.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreePageId.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="ROOT_PTR">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>ROOT_PTR</h4>
-<pre>public static final&nbsp;int ROOT_PTR</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BTreePageId.ROOT_PTR">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="INTERNAL">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>INTERNAL</h4>
-<pre>public static final&nbsp;int INTERNAL</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BTreePageId.INTERNAL">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="LEAF">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>LEAF</h4>
-<pre>public static final&nbsp;int LEAF</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BTreePageId.LEAF">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="HEADER">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>HEADER</h4>
-<pre>public static final&nbsp;int HEADER</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BTreePageId.HEADER">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="tableId">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tableId</h4>
-<pre>private final&nbsp;int tableId</pre>
-</li>
-</ul>
-<a name="pgNo">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pgNo</h4>
-<pre>private final&nbsp;int pgNo</pre>
-</li>
-</ul>
-<a name="pgcateg">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>pgcateg</h4>
-<pre>private&nbsp;int pgcateg</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreePageId-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreePageId</h4>
-<pre>public&nbsp;BTreePageId(int&nbsp;tableId,
-                   int&nbsp;pgNo,
-                   int&nbsp;pgcateg)</pre>
-<div class="block">Constructor. Create a page id structure for a specific page of a
- specific table.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableId</code> - The table that is being referenced</dd>
-<dd><code>pgNo</code> - The page number in that table.</dd>
-<dd><code>pgcateg</code> - which kind of page it is</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="categToString-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>categToString</h4>
-<pre>public static&nbsp;java.lang.String&nbsp;categToString(int&nbsp;categ)</pre>
-</li>
-</ul>
-<a name="getTableId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableId</h4>
-<pre>public&nbsp;int&nbsp;getTableId()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#getTableId--">getTableId</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the table associated with this PageId</dd>
-</dl>
-</li>
-</ul>
-<a name="pageNumber--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pageNumber</h4>
-<pre>public&nbsp;int&nbsp;pageNumber()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#pageNumber--">pageNumber</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the page number in the table getTableId() associated with
-   this PageId</dd>
-</dl>
-</li>
-</ul>
-<a name="pgcateg--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pgcateg</h4>
-<pre>public&nbsp;int&nbsp;pgcateg()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the category of this page</dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>public&nbsp;int&nbsp;hashCode()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#hashCode--">hashCode</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a hash code for this page, represented by the concatenation of
-   the table number, page number, and pgcateg (needed if a PageId is used as a
-   key in a hash table in the BufferPool, for example.)</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BufferPool.html" title="class in simpledb"><code>BufferPool</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;o)</pre>
-<div class="block">Compares one PageId to another.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#equals-java.lang.Object-">equals</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>o</code> - The object to compare against (must be a PageId)</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if the objects are equal (e.g., page numbers, table
-   ids and pgcateg are the same)</dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="serialize--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialize</h4>
-<pre>public&nbsp;int[]&nbsp;serialize()</pre>
-<div class="block">Return a representation of this object as an array of
-  integers, for writing to disk.  Size of returned array must contain
-  number of integers that corresponds to number of args to one of the
-  constructors.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#serialize--">serialize</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreePage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreePageId.html" target="_top">Frames</a></li>
-<li><a href="BTreePageId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeRootPtrPage.html lab4/javadoc/simpledb/BTreeRootPtrPage.html
--- lab3/javadoc/simpledb/BTreeRootPtrPage.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeRootPtrPage.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,715 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeRootPtrPage</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeRootPtrPage";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":10,"i2":10,"i3":10,"i4":9,"i5":10,"i6":9,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreePageId.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeScan.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeRootPtrPage.html" target="_top">Frames</a></li>
-<li><a href="BTreeRootPtrPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeRootPtrPage" class="title">Class BTreeRootPtrPage</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeRootPtrPage</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeRootPtrPage</span>
-extends java.lang.Object
-implements <a href="../simpledb/Page.html" title="interface in simpledb">Page</a></pre>
-<div class="block">BTreeRootPtrPage stores the pointer to the root node used in the B+ tree and
- implements Page Interface that is used by BufferPool</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BufferPool.html" title="class in simpledb"><code>BufferPool</code></a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#dirtier">dirtier</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#dirty">dirty</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.io.DataInputStream</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#dis">dis</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#header">header</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#oldData">oldData</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#PAGE_SIZE">PAGE_SIZE</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#pid">pid</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#root">root</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#rootCategory">rootCategory</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#BTreeRootPtrPage-simpledb.BTreePageId-byte:A-">BTreeRootPtrPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-                byte[]&nbsp;data)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#createEmptyPageData--">createEmptyPageData</a></span>()</code>
-<div class="block">Static method to generate a byte array corresponding to an empty
- BTreeRootPtrPage.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#getBeforeImage--">getBeforeImage</a></span>()</code>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#getHeaderId--">getHeaderId</a></span>()</code>
-<div class="block">Get the id of the first header page, or null if none exists</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#getId--">getId</a></span>()</code>
-<div class="block">Return the id of this page.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#getId-int-">getId</a></span>(int&nbsp;tableid)</code>
-<div class="block">There is only one instance of a BTreeRootPtrPage per table.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#getPageData--">getPageData</a></span>()</code>
-<div class="block">Generates a byte array representing the contents of this root pointer page.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#getPageSize--">getPageSize</a></span>()</code>
-<div class="block">Get the page size of root pointer pages</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#getRootId--">getRootId</a></span>()</code>
-<div class="block">Get the id of the root page in this B+ tree</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#isDirty--">isDirty</a></span>()</code>
-<div class="block">Get the id of the transaction that last dirtied this page, or null if the page is clean..</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a></span>(boolean&nbsp;dirty,
-         <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Set the dirty state of this page as dirtied by a particular transaction</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#setBeforeImage--">setBeforeImage</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#setHeaderId-simpledb.BTreePageId-">setHeaderId</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)</code>
-<div class="block">Set the page id of the first header page</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeRootPtrPage.html#setRootId-simpledb.BTreePageId-">setRootId</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)</code>
-<div class="block">Set the id of the root page in this B+ tree</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="PAGE_SIZE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>PAGE_SIZE</h4>
-<pre>public static final&nbsp;int PAGE_SIZE</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BTreeRootPtrPage.PAGE_SIZE">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="dirty">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>dirty</h4>
-<pre>private&nbsp;boolean dirty</pre>
-</li>
-</ul>
-<a name="dirtier">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>dirtier</h4>
-<pre>private&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> dirtier</pre>
-</li>
-</ul>
-<a name="pid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pid</h4>
-<pre>private&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a> pid</pre>
-</li>
-</ul>
-<a name="dis">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>dis</h4>
-<pre>private&nbsp;java.io.DataInputStream dis</pre>
-</li>
-</ul>
-<a name="root">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>root</h4>
-<pre>private&nbsp;int root</pre>
-</li>
-</ul>
-<a name="rootCategory">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rootCategory</h4>
-<pre>private&nbsp;int rootCategory</pre>
-</li>
-</ul>
-<a name="header">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>header</h4>
-<pre>private&nbsp;int header</pre>
-</li>
-</ul>
-<a name="oldData">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>oldData</h4>
-<pre>private&nbsp;byte[] oldData</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeRootPtrPage-simpledb.BTreePageId-byte:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeRootPtrPage</h4>
-<pre>public&nbsp;BTreeRootPtrPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id,
-                        byte[]&nbsp;data)
-                 throws java.io.IOException</pre>
-<div class="block">Constructor.
- Construct the BTreeRootPtrPage from a set of bytes of data read from
- disk.
- The format of an BTreeRootPtrPage is an integer for the page number
- of the root node, followed by a byte to encode the category of the root page
- (either leaf or internal), followed by an integer for the page number
- of the first header page</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="setBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setBeforeImage</h4>
-<pre>public&nbsp;void&nbsp;setBeforeImage()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#setBeforeImage--">setBeforeImage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getId()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Page.html#getId--">Page</a></code></span></div>
-<div class="block">Return the id of this page.  The id is a unique identifier for a page
- that can be used to look up the page on disk or determine if the page
- is resident in the buffer pool.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getId--">getId</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the PageId associated with this page.</dd>
-</dl>
-</li>
-</ul>
-<a name="getId-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getId(int&nbsp;tableid)</pre>
-<div class="block">There is only one instance of a BTreeRootPtrPage per table. This static 
- method is separate from getId() in order to maintain the Page interface</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableid</code> - - the tableid of this table</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the root pointer page id for the given table</dd>
-</dl>
-</li>
-</ul>
-<a name="getPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPageData</h4>
-<pre>public&nbsp;byte[]&nbsp;getPageData()</pre>
-<div class="block">Generates a byte array representing the contents of this root pointer page.
- Used to serialize this root pointer page to disk.
- The invariant here is that it should be possible to pass the byte array
- generated by getPageData to the BTreeRootPtrPage constructor and have it
- produce an identical BTreeRootPtrPage object.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getPageData--">getPageData</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A byte array corresponding to the bytes of this root pointer page.</dd>
-</dl>
-</li>
-</ul>
-<a name="createEmptyPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createEmptyPageData</h4>
-<pre>public static&nbsp;byte[]&nbsp;createEmptyPageData()</pre>
-<div class="block">Static method to generate a byte array corresponding to an empty
- BTreeRootPtrPage.
- Used to add new, empty pages to the file. Passing the results of
- this method to the BTreeRootPtrPage constructor will create a BTreeRootPtrPage with
- no valid entries in it.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The returned ByteArray.</dd>
-</dl>
-</li>
-</ul>
-<a name="markDirty-boolean-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>markDirty</h4>
-<pre>public&nbsp;void&nbsp;markDirty(boolean&nbsp;dirty,
-                      <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Page.html#markDirty-boolean-simpledb.TransactionId-">Page</a></code></span></div>
-<div class="block">Set the dirty state of this page as dirtied by a particular transaction</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="isDirty--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isDirty</h4>
-<pre>public&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;isDirty()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Page.html#isDirty--">Page</a></code></span></div>
-<div class="block">Get the id of the transaction that last dirtied this page, or null if the page is clean..</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#isDirty--">isDirty</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The id of the transaction that last dirtied this page, or null</dd>
-</dl>
-</li>
-</ul>
-<a name="getBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBeforeImage</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a>&nbsp;getBeforeImage()</pre>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getBeforeImage--">getBeforeImage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getRootId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getRootId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getRootId()</pre>
-<div class="block">Get the id of the root page in this B+ tree</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the id of the root page</dd>
-</dl>
-</li>
-</ul>
-<a name="setRootId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setRootId</h4>
-<pre>public&nbsp;void&nbsp;setRootId(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)
-               throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Set the id of the root page in this B+ tree</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the id of the root page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the id is invalid</dd>
-</dl>
-</li>
-</ul>
-<a name="getHeaderId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getHeaderId</h4>
-<pre>public&nbsp;<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;getHeaderId()</pre>
-<div class="block">Get the id of the first header page, or null if none exists</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the id of the first header page</dd>
-</dl>
-</li>
-</ul>
-<a name="setHeaderId-simpledb.BTreePageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setHeaderId</h4>
-<pre>public&nbsp;void&nbsp;setHeaderId(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;id)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Set the page id of the first header page</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>id</code> - - the id of the first header page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the id is invalid</dd>
-</dl>
-</li>
-</ul>
-<a name="getPageSize--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getPageSize</h4>
-<pre>public static&nbsp;int&nbsp;getPageSize()</pre>
-<div class="block">Get the page size of root pointer pages</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the page size</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreePageId.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeScan.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeRootPtrPage.html" target="_top">Frames</a></li>
-<li><a href="BTreeRootPtrPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeScan.html lab4/javadoc/simpledb/BTreeScan.html
--- lab3/javadoc/simpledb/BTreeScan.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeScan.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,662 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeScan</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeScan";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeScan.html" target="_top">Frames</a></li>
-<li><a href="BTreeScan.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeScan" class="title">Class BTreeScan</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeScan</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeScan</span>
-extends java.lang.Object
-implements <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></pre>
-<div class="block">BTreeScan is an operator which reads tuples in sorted order 
- according to a predicate</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.BTreeScan">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#alias">alias</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#ipred">ipred</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#isOpen">isOpen</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#it">it</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#myTd">myTd</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#tablename">tablename</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#BTreeScan-simpledb.TransactionId-int-simpledb.IndexPredicate-">BTreeScan</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-         int&nbsp;tableid,
-         <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#BTreeScan-simpledb.TransactionId-int-java.lang.String-simpledb.IndexPredicate-">BTreeScan</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-         int&nbsp;tableid,
-         java.lang.String&nbsp;tableAlias,
-         <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</code>
-<div class="block">Creates a B+ tree scan over the specified table as a part of the
- specified transaction.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#close--">close</a></span>()</code>
-<div class="block">Closes the iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#getAlias--">getAlias</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#getTableName--">getTableName</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc with field names from the underlying BTreeFile,
- prefixed with the tableAlias string from the constructor.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#hasNext--">hasNext</a></span>()</code>
-<div class="block">Returns true if the iterator has more tuples.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#next--">next</a></span>()</code>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#reset-int-java.lang.String-">reset</a></span>(int&nbsp;tableid,
-     java.lang.String&nbsp;tableAlias)</code>
-<div class="block">Reset the tableid, and tableAlias of this operator.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeScan.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BTreeScan.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="isOpen">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isOpen</h4>
-<pre>private&nbsp;boolean isOpen</pre>
-</li>
-</ul>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre>private&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="myTd">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>myTd</h4>
-<pre>private&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> myTd</pre>
-</li>
-</ul>
-<a name="ipred">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>ipred</h4>
-<pre>private&nbsp;<a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a> ipred</pre>
-</li>
-</ul>
-<a name="it">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>it</h4>
-<pre>private transient&nbsp;<a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a> it</pre>
-</li>
-</ul>
-<a name="tablename">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tablename</h4>
-<pre>private&nbsp;java.lang.String tablename</pre>
-</li>
-</ul>
-<a name="alias">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>alias</h4>
-<pre>private&nbsp;java.lang.String alias</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeScan-simpledb.TransactionId-int-java.lang.String-simpledb.IndexPredicate-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>BTreeScan</h4>
-<pre>public&nbsp;BTreeScan(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                 int&nbsp;tableid,
-                 java.lang.String&nbsp;tableAlias,
-                 <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</pre>
-<div class="block">Creates a B+ tree scan over the specified table as a part of the
- specified transaction.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The transaction this scan is running as a part of.</dd>
-<dd><code>tableid</code> - the table to scan.</dd>
-<dd><code>tableAlias</code> - the alias of this table (needed by the parser); the returned
-            tupleDesc should have fields with name tableAlias.fieldName
-            (note: this class is not responsible for handling a case where
-            tableAlias or fieldName are null. It shouldn't crash if they
-            are, but the resulting name can be null.fieldName,
-            tableAlias.null, or null.null).</dd>
-<dd><code>ipred</code> - The index predicate to match. If null, the scan will return all tuples
-            in sorted order</dd>
-</dl>
-</li>
-</ul>
-<a name="BTreeScan-simpledb.TransactionId-int-simpledb.IndexPredicate-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeScan</h4>
-<pre>public&nbsp;BTreeScan(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                 int&nbsp;tableid,
-                 <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTableName--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableName</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getTableName()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the table name of the table the operator scans. This should
-       be the actual name of the table in the catalog of the database</dd>
-</dl>
-</li>
-</ul>
-<a name="getAlias--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getAlias</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getAlias()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>Return the alias of the table this operator scans.</dd>
-</dl>
-</li>
-</ul>
-<a name="reset-int-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>reset</h4>
-<pre>public&nbsp;void&nbsp;reset(int&nbsp;tableid,
-                  java.lang.String&nbsp;tableAlias)</pre>
-<div class="block">Reset the tableid, and tableAlias of this operator.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableid</code> - the table to scan.</dd>
-<dd><code>tableAlias</code> - the alias of this table (needed by the parser); the returned
-            tupleDesc should have fields with name tableAlias.fieldName
-            (note: this class is not responsible for handling a case where
-            tableAlias or fieldName are null. It shouldn't crash if they
-            are, but the resulting name can be null.fieldName,
-            tableAlias.null, or null.null).</dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block">Returns the TupleDesc with field names from the underlying BTreeFile,
- prefixed with the tableAlias string from the constructor. This prefix
- becomes useful when joining tables containing a field(s) with the same
- name.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the TupleDesc with field names from the underlying BTreeFile,
-         prefixed with the tableAlias string from the constructor.</dd>
-</dl>
-</li>
-</ul>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()
-                throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                       <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#hasNext--">DbIterator</a></code></span></div>
-<div class="block">Returns true if the iterator has more tuples.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#hasNext--">hasNext</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true f the iterator has more tuples.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()
-           throws java.util.NoSuchElementException,
-                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                  <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#next--">DbIterator</a></code></span></div>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#next--">next</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next tuple in the iteration.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if there are no more tuples.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#close--">DbIterator</a></code></span></div>
-<div class="block">Closes the iterator. When the iterator is closed, calling next(),
- hasNext(), or rewind() should fail by throwing IllegalStateException.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   java.util.NoSuchElementException,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#rewind--">rewind</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeScan.html" target="_top">Frames</a></li>
-<li><a href="BTreeScan.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeSearchIterator.html lab4/javadoc/simpledb/BTreeSearchIterator.html
--- lab3/javadoc/simpledb/BTreeSearchIterator.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeSearchIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,474 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeSearchIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeSearchIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeScan.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeSearchIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeSearchIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeSearchIterator" class="title">Class BTreeSearchIterator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">simpledb.AbstractDbFileIterator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeSearchIterator</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>class <span class="typeNameLabel">BTreeSearchIterator</span>
-extends <a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></pre>
-<div class="block">Helper class that implements the DbFileIterator for search tuples on a
- B+ Tree File</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#curp">curp</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#f">f</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#ipred">ipred</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#it">it</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#BTreeSearchIterator-simpledb.BTreeFile-simpledb.TransactionId-simpledb.IndexPredicate-">BTreeSearchIterator</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;f,
-                   <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                   <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</code>
-<div class="block">Constructor for this iterator</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#close--">close</a></span>()</code>
-<div class="block">close the iterator</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#open--">open</a></span>()</code>
-<div class="block">Open this iterator by getting an iterator on the first leaf page applicable
- for the given predicate operation</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#readNext--">readNext</a></span>()</code>
-<div class="block">Read the next tuple either from the current page if it has more tuples matching
- the predicate or from the next page by following the right sibling pointer.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeSearchIterator.html#rewind--">rewind</a></span>()</code>
-<div class="block">rewind this iterator back to the beginning of the tuples</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.AbstractDbFileIterator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></h3>
-<code><a href="../simpledb/AbstractDbFileIterator.html#hasNext--">hasNext</a>, <a href="../simpledb/AbstractDbFileIterator.html#next--">next</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="it">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>it</h4>
-<pre>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt; it</pre>
-</li>
-</ul>
-<a name="curp">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>curp</h4>
-<pre><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a> curp</pre>
-</li>
-</ul>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="f">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>f</h4>
-<pre><a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a> f</pre>
-</li>
-</ul>
-<a name="ipred">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>ipred</h4>
-<pre><a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a> ipred</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeSearchIterator-simpledb.BTreeFile-simpledb.TransactionId-simpledb.IndexPredicate-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeSearchIterator</h4>
-<pre>public&nbsp;BTreeSearchIterator(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;f,
-                           <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                           <a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</pre>
-<div class="block">Constructor for this iterator</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>f</code> - - the BTreeFile containing the tuples</dd>
-<dd><code>tid</code> - - the transaction id</dd>
-<dd><code>ipred</code> - - the predicate to filter on</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Open this iterator by getting an iterator on the first leaf page applicable
- for the given predicate operation</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="readNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;readNext()
-                  throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                         <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                         java.util.NoSuchElementException</pre>
-<div class="block">Read the next tuple either from the current page if it has more tuples matching
- the predicate or from the next page by following the right sibling pointer.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/AbstractDbFileIterator.html#readNext--">readNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next tuple matching the predicate, or null if none exists</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.util.NoSuchElementException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">rewind this iterator back to the beginning of the tuples</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - When rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block">close the iterator</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFileIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/AbstractDbFileIterator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeScan.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeSearchIterator.html" target="_top">Frames</a></li>
-<li><a href="BTreeSearchIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeUtility.BTreeDeleter.html lab4/javadoc/simpledb/BTreeUtility.BTreeDeleter.html
--- lab3/javadoc/simpledb/BTreeUtility.BTreeDeleter.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeUtility.BTreeDeleter.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,515 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeUtility.BTreeDeleter</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeUtility.BTreeDeleter";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.BTreeDeleter.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.BTreeDeleter.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeUtility.BTreeDeleter" class="title">Class BTreeUtility.BTreeDeleter</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Thread</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeUtility.BTreeDeleter</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.lang.Runnable</dd>
-</dl>
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public static class <span class="typeNameLabel">BTreeUtility.BTreeDeleter</span>
-extends java.lang.Thread</pre>
-<div class="block">Helper class that attempts to delete tuple(s) in a new thread</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="nested.classes.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Nested classes/interfaces inherited from class&nbsp;java.lang.Thread</h3>
-<code>java.lang.Thread.State, java.lang.Thread.UncaughtExceptionHandler</code></li>
-</ul>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#bf">bf</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.lang.Object</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#elock">elock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.lang.Exception</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#error">error</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#insertedTuples">insertedTuples</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.lang.Object</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#slock">slock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#success">success</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.util.ArrayList&lt;java.lang.Integer&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#tuple">tuple</a></span></code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="fields.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Fields inherited from class&nbsp;java.lang.Thread</h3>
-<code>MAX_PRIORITY, MIN_PRIORITY, NORM_PRIORITY</code></li>
-</ul>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#BTreeDeleter-simpledb.BTreeFile-java.util.concurrent.BlockingQueue-">BTreeDeleter</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-            java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>java.lang.Exception</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#getError--">getError</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#init-simpledb.BTreeFile-java.util.concurrent.BlockingQueue-">init</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-    java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#rerun-simpledb.BTreeFile-java.util.concurrent.BlockingQueue-">rerun</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-     java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#run--">run</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html#succeeded--">succeeded</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Thread</h3>
-<code>activeCount, checkAccess, clone, countStackFrames, currentThread, destroy, dumpStack, enumerate, getAllStackTraces, getContextClassLoader, getDefaultUncaughtExceptionHandler, getId, getName, getPriority, getStackTrace, getState, getThreadGroup, getUncaughtExceptionHandler, holdsLock, interrupt, interrupted, isAlive, isDaemon, isInterrupted, join, join, join, resume, setContextClassLoader, setDaemon, setDefaultUncaughtExceptionHandler, setName, setPriority, setUncaughtExceptionHandler, sleep, sleep, start, stop, stop, suspend, toString, yield</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="bf">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>bf</h4>
-<pre><a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a> bf</pre>
-</li>
-</ul>
-<a name="insertedTuples">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>insertedTuples</h4>
-<pre>java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt; insertedTuples</pre>
-</li>
-</ul>
-<a name="tuple">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tuple</h4>
-<pre>java.util.ArrayList&lt;java.lang.Integer&gt; tuple</pre>
-</li>
-</ul>
-<a name="success">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>success</h4>
-<pre>boolean success</pre>
-</li>
-</ul>
-<a name="error">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>error</h4>
-<pre>java.lang.Exception error</pre>
-</li>
-</ul>
-<a name="slock">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>slock</h4>
-<pre>java.lang.Object slock</pre>
-</li>
-</ul>
-<a name="elock">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>elock</h4>
-<pre>java.lang.Object elock</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeDeleter-simpledb.BTreeFile-java.util.concurrent.BlockingQueue-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeDeleter</h4>
-<pre>public&nbsp;BTreeDeleter(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                    java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>bf</code> - the B+ tree file from which we want to delete the tuple(s)</dd>
-<dd><code>the</code> - list of tuples to delete</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="run--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>run</h4>
-<pre>public&nbsp;void&nbsp;run()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>run</code>&nbsp;in interface&nbsp;<code>java.lang.Runnable</code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>run</code>&nbsp;in class&nbsp;<code>java.lang.Thread</code></dd>
-</dl>
-</li>
-</ul>
-<a name="init-simpledb.BTreeFile-java.util.concurrent.BlockingQueue-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>init</h4>
-<pre>private&nbsp;void&nbsp;init(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                  java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</pre>
-</li>
-</ul>
-<a name="rerun-simpledb.BTreeFile-java.util.concurrent.BlockingQueue-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rerun</h4>
-<pre>public&nbsp;void&nbsp;rerun(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                  java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</pre>
-</li>
-</ul>
-<a name="succeeded--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>succeeded</h4>
-<pre>public&nbsp;boolean&nbsp;succeeded()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if we successfully inserted the tuple</dd>
-</dl>
-</li>
-</ul>
-<a name="getError--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getError</h4>
-<pre>public&nbsp;java.lang.Exception&nbsp;getError()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an Exception instance if one occurred while inserting the tuple;
-   null otherwise</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.BTreeDeleter.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.BTreeDeleter.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeUtility.BTreeInserter.html lab4/javadoc/simpledb/BTreeUtility.BTreeInserter.html
--- lab3/javadoc/simpledb/BTreeUtility.BTreeInserter.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeUtility.BTreeInserter.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,522 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeUtility.BTreeInserter</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeUtility.BTreeInserter";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.BTreeInserter.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.BTreeInserter.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeUtility.BTreeInserter" class="title">Class BTreeUtility.BTreeInserter</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Thread</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeUtility.BTreeInserter</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.lang.Runnable</dd>
-</dl>
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public static class <span class="typeNameLabel">BTreeUtility.BTreeInserter</span>
-extends java.lang.Thread</pre>
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="nested.classes.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Nested classes/interfaces inherited from class&nbsp;java.lang.Thread</h3>
-<code>java.lang.Thread.State, java.lang.Thread.UncaughtExceptionHandler</code></li>
-</ul>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#bf">bf</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.lang.Object</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#elock">elock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.lang.Exception</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#error">error</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#insertedTuples">insertedTuples</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.lang.Object</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#slock">slock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#success">success</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) int[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#tupdata">tupdata</a></span></code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="fields.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Fields inherited from class&nbsp;java.lang.Thread</h3>
-<code>MAX_PRIORITY, MIN_PRIORITY, NORM_PRIORITY</code></li>
-</ul>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#BTreeInserter-simpledb.BTreeFile-int:A-java.util.concurrent.BlockingQueue-">BTreeInserter</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-             int[]&nbsp;tupdata,
-             java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>java.lang.Exception</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#getError--">getError</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#init-simpledb.BTreeFile-int:A-java.util.concurrent.BlockingQueue-">init</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-    int[]&nbsp;tupdata,
-    java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#rerun-simpledb.BTreeFile-int:A-java.util.concurrent.BlockingQueue-">rerun</a></span>(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-     int[]&nbsp;tupdata,
-     java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#run--">run</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html#succeeded--">succeeded</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Thread</h3>
-<code>activeCount, checkAccess, clone, countStackFrames, currentThread, destroy, dumpStack, enumerate, getAllStackTraces, getContextClassLoader, getDefaultUncaughtExceptionHandler, getId, getName, getPriority, getStackTrace, getState, getThreadGroup, getUncaughtExceptionHandler, holdsLock, interrupt, interrupted, isAlive, isDaemon, isInterrupted, join, join, join, resume, setContextClassLoader, setDaemon, setDefaultUncaughtExceptionHandler, setName, setPriority, setUncaughtExceptionHandler, sleep, sleep, start, stop, stop, suspend, toString, yield</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="bf">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>bf</h4>
-<pre><a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a> bf</pre>
-</li>
-</ul>
-<a name="tupdata">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tupdata</h4>
-<pre>int[] tupdata</pre>
-</li>
-</ul>
-<a name="insertedTuples">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>insertedTuples</h4>
-<pre>java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt; insertedTuples</pre>
-</li>
-</ul>
-<a name="success">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>success</h4>
-<pre>boolean success</pre>
-</li>
-</ul>
-<a name="error">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>error</h4>
-<pre>java.lang.Exception error</pre>
-</li>
-</ul>
-<a name="slock">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>slock</h4>
-<pre>java.lang.Object slock</pre>
-</li>
-</ul>
-<a name="elock">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>elock</h4>
-<pre>java.lang.Object elock</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeInserter-simpledb.BTreeFile-int:A-java.util.concurrent.BlockingQueue-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeInserter</h4>
-<pre>public&nbsp;BTreeInserter(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                     int[]&nbsp;tupdata,
-                     java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>bf</code> - the B+ tree file into which we want to insert the tuple</dd>
-<dd><code>tupdata</code> - the data of the tuple to insert</dd>
-<dd><code>the</code> - list of tuples that were successfully inserted</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="run--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>run</h4>
-<pre>public&nbsp;void&nbsp;run()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>run</code>&nbsp;in interface&nbsp;<code>java.lang.Runnable</code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>run</code>&nbsp;in class&nbsp;<code>java.lang.Thread</code></dd>
-</dl>
-</li>
-</ul>
-<a name="init-simpledb.BTreeFile-int:A-java.util.concurrent.BlockingQueue-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>init</h4>
-<pre>private&nbsp;void&nbsp;init(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                  int[]&nbsp;tupdata,
-                  java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</pre>
-</li>
-</ul>
-<a name="rerun-simpledb.BTreeFile-int:A-java.util.concurrent.BlockingQueue-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rerun</h4>
-<pre>public&nbsp;void&nbsp;rerun(<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                  int[]&nbsp;tupdata,
-                  java.util.concurrent.BlockingQueue&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;insertedTuples)</pre>
-</li>
-</ul>
-<a name="succeeded--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>succeeded</h4>
-<pre>public&nbsp;boolean&nbsp;succeeded()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if we successfully inserted the tuple</dd>
-</dl>
-</li>
-</ul>
-<a name="getError--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getError</h4>
-<pre>public&nbsp;java.lang.Exception&nbsp;getError()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an Exception instance if one occurred while inserting the tuple;
-   null otherwise</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.BTreeInserter.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.BTreeInserter.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeUtility.BTreeReader.html lab4/javadoc/simpledb/BTreeUtility.BTreeReader.html
--- lab3/javadoc/simpledb/BTreeUtility.BTreeReader.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeUtility.BTreeReader.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,491 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeUtility.BTreeReader</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeUtility.BTreeReader";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.BTreeReader.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.BTreeReader.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeUtility.BTreeReader" class="title">Class BTreeUtility.BTreeReader</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Thread</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeUtility.BTreeReader</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.lang.Runnable</dd>
-</dl>
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dd>
-</dl>
-<hr>
-<br>
-<pre>static class <span class="typeNameLabel">BTreeUtility.BTreeReader</span>
-extends java.lang.Thread</pre>
-<div class="block">Helper class that searches for tuple(s) in a new thread</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="nested.classes.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Nested classes/interfaces inherited from class&nbsp;java.lang.Thread</h3>
-<code>java.lang.Thread.State, java.lang.Thread.UncaughtExceptionHandler</code></li>
-</ul>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#bf">bf</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#count">count</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.lang.Object</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#elock">elock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.lang.Exception</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#error">error</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#f">f</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#found">found</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.lang.Object</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#slock">slock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="fields.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Fields inherited from class&nbsp;java.lang.Thread</h3>
-<code>MAX_PRIORITY, MIN_PRIORITY, NORM_PRIORITY</code></li>
-</ul>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#BTreeReader-simpledb.TransactionId-simpledb.BTreeFile-simpledb.Field-int-">BTreeReader</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-           <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;f,
-           int&nbsp;count)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#found--">found</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>java.lang.Exception</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#getError--">getError</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html#run--">run</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Thread</h3>
-<code>activeCount, checkAccess, clone, countStackFrames, currentThread, destroy, dumpStack, enumerate, getAllStackTraces, getContextClassLoader, getDefaultUncaughtExceptionHandler, getId, getName, getPriority, getStackTrace, getState, getThreadGroup, getUncaughtExceptionHandler, holdsLock, interrupt, interrupted, isAlive, isDaemon, isInterrupted, join, join, join, resume, setContextClassLoader, setDaemon, setDefaultUncaughtExceptionHandler, setName, setPriority, setUncaughtExceptionHandler, sleep, sleep, start, stop, stop, suspend, toString, yield</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="bf">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>bf</h4>
-<pre><a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a> bf</pre>
-</li>
-</ul>
-<a name="f">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>f</h4>
-<pre><a href="../simpledb/Field.html" title="interface in simpledb">Field</a> f</pre>
-</li>
-</ul>
-<a name="count">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>count</h4>
-<pre>int count</pre>
-</li>
-</ul>
-<a name="found">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>found</h4>
-<pre>boolean found</pre>
-</li>
-</ul>
-<a name="error">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>error</h4>
-<pre>java.lang.Exception error</pre>
-</li>
-</ul>
-<a name="slock">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>slock</h4>
-<pre>java.lang.Object slock</pre>
-</li>
-</ul>
-<a name="elock">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>elock</h4>
-<pre>java.lang.Object elock</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeReader-simpledb.TransactionId-simpledb.BTreeFile-simpledb.Field-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeReader</h4>
-<pre>public&nbsp;BTreeReader(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                   <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                   <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;f,
-                   int&nbsp;count)</pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - the transaction on whose behalf we want to search for the tuple(s)</dd>
-<dd><code>bf</code> - the B+ tree file containing the tuple(s)</dd>
-<dd><code>f</code> - the field to search for</dd>
-<dd><code>count</code> - the number of tuples to search for</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="run--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>run</h4>
-<pre>public&nbsp;void&nbsp;run()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>run</code>&nbsp;in interface&nbsp;<code>java.lang.Runnable</code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>run</code>&nbsp;in class&nbsp;<code>java.lang.Thread</code></dd>
-</dl>
-</li>
-</ul>
-<a name="found--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>found</h4>
-<pre>public&nbsp;boolean&nbsp;found()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if we successfully found the tuple(s)</dd>
-</dl>
-</li>
-</ul>
-<a name="getError--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getError</h4>
-<pre>public&nbsp;java.lang.Exception&nbsp;getError()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an Exception instance if one occurred while searching for the tuple(s);
-   null otherwise</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.BTreeReader.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.BTreeReader.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeUtility.BTreeWriter.html lab4/javadoc/simpledb/BTreeUtility.BTreeWriter.html
--- lab3/javadoc/simpledb/BTreeUtility.BTreeWriter.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeUtility.BTreeWriter.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,491 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeUtility.BTreeWriter</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeUtility.BTreeWriter";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BufferPool.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.BTreeWriter.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.BTreeWriter.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeUtility.BTreeWriter" class="title">Class BTreeUtility.BTreeWriter</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Thread</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeUtility.BTreeWriter</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.lang.Runnable</dd>
-</dl>
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></dd>
-</dl>
-<hr>
-<br>
-<pre>static class <span class="typeNameLabel">BTreeUtility.BTreeWriter</span>
-extends java.lang.Thread</pre>
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="nested.classes.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Nested classes/interfaces inherited from class&nbsp;java.lang.Thread</h3>
-<code>java.lang.Thread.State, java.lang.Thread.UncaughtExceptionHandler</code></li>
-</ul>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#bf">bf</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#count">count</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.lang.Object</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#elock">elock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.lang.Exception</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#error">error</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#item">item</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.lang.Object</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#slock">slock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#success">success</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="fields.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Fields inherited from class&nbsp;java.lang.Thread</h3>
-<code>MAX_PRIORITY, MIN_PRIORITY, NORM_PRIORITY</code></li>
-</ul>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#BTreeWriter-simpledb.TransactionId-simpledb.BTreeFile-int-int-">BTreeWriter</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-           int&nbsp;item,
-           int&nbsp;count)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>java.lang.Exception</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#getError--">getError</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#run--">run</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html#succeeded--">succeeded</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Thread">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Thread</h3>
-<code>activeCount, checkAccess, clone, countStackFrames, currentThread, destroy, dumpStack, enumerate, getAllStackTraces, getContextClassLoader, getDefaultUncaughtExceptionHandler, getId, getName, getPriority, getStackTrace, getState, getThreadGroup, getUncaughtExceptionHandler, holdsLock, interrupt, interrupted, isAlive, isDaemon, isInterrupted, join, join, join, resume, setContextClassLoader, setDaemon, setDefaultUncaughtExceptionHandler, setName, setPriority, setUncaughtExceptionHandler, sleep, sleep, start, stop, stop, suspend, toString, yield</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="bf">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>bf</h4>
-<pre><a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a> bf</pre>
-</li>
-</ul>
-<a name="item">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>item</h4>
-<pre>int item</pre>
-</li>
-</ul>
-<a name="count">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>count</h4>
-<pre>int count</pre>
-</li>
-</ul>
-<a name="success">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>success</h4>
-<pre>boolean success</pre>
-</li>
-</ul>
-<a name="error">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>error</h4>
-<pre>java.lang.Exception error</pre>
-</li>
-</ul>
-<a name="slock">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>slock</h4>
-<pre>java.lang.Object slock</pre>
-</li>
-</ul>
-<a name="elock">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>elock</h4>
-<pre>java.lang.Object elock</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeWriter-simpledb.TransactionId-simpledb.BTreeFile-int-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeWriter</h4>
-<pre>public&nbsp;BTreeWriter(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                   <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;bf,
-                   int&nbsp;item,
-                   int&nbsp;count)</pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - the transaction on whose behalf we want to insert the tuple</dd>
-<dd><code>bf</code> - the B+ tree file into which we want to insert the tuple</dd>
-<dd><code>item</code> - the key of the tuple to insert</dd>
-<dd><code>count</code> - the number of times to insert the tuple</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="run--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>run</h4>
-<pre>public&nbsp;void&nbsp;run()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>run</code>&nbsp;in interface&nbsp;<code>java.lang.Runnable</code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>run</code>&nbsp;in class&nbsp;<code>java.lang.Thread</code></dd>
-</dl>
-</li>
-</ul>
-<a name="succeeded--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>succeeded</h4>
-<pre>public&nbsp;boolean&nbsp;succeeded()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if we successfully inserted the tuple</dd>
-</dl>
-</li>
-</ul>
-<a name="getError--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getError</h4>
-<pre>public&nbsp;java.lang.Exception&nbsp;getError()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an Exception instance if one occurred while inserting the tuple;
-   null otherwise</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BufferPool.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.BTreeWriter.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.BTreeWriter.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BTreeUtility.html lab4/javadoc/simpledb/BTreeUtility.html
--- lab3/javadoc/simpledb/BTreeUtility.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BTreeUtility.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,1077 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeUtility</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeUtility";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9,"i5":9,"i6":9,"i7":9,"i8":9,"i9":9,"i10":9,"i11":9,"i12":9,"i13":9,"i14":9,"i15":9,"i16":9,"i17":9,"i18":9,"i19":9,"i20":9,"i21":9,"i22":9,"i23":9,"i24":9,"i25":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeUtility" class="title">Class BTreeUtility</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeUtility</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeUtility</span>
-extends java.lang.Object</pre>
-<div class="block">Helper methods used for testing and implementing random features.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Class and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></span></code>
-<div class="block">Helper class that attempts to delete tuple(s) in a new thread</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></span></code>
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></span></code>
-<div class="block">Helper class that searches for tuple(s) in a new thread</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></span></code>
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#MAX_RAND_VALUE">MAX_RAND_VALUE</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#BTreeUtility--">BTreeUtility</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">createBTreeFile</a></span>(int&nbsp;columns,
-               int&nbsp;rows,
-               java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-               java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-               int&nbsp;keyField)</code>
-<div class="block">creates a *non* random B+ tree file for testing</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createEmptyBTreeFile-java.lang.String-int-int-">createEmptyBTreeFile</a></span>(java.lang.String&nbsp;path,
-                    int&nbsp;cols,
-                    int&nbsp;keyField)</code>
-<div class="block">A utility method to create a new BTreeFile with no data,
- assuming the path does not already exist.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createEmptyBTreeFile-java.lang.String-int-int-int-">createEmptyBTreeFile</a></span>(java.lang.String&nbsp;path,
-                    int&nbsp;cols,
-                    int&nbsp;keyField,
-                    int&nbsp;pages)</code>
-<div class="block">A utility method to create a new BTreeFile with no data, with the specified
- number of pages, assuming the path does not already exist.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomBTreeFile-int-int-int-java.util.Map-java.util.ArrayList-int-">createRandomBTreeFile</a></span>(int&nbsp;columns,
-                     int&nbsp;rows,
-                     int&nbsp;maxValue,
-                     java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                     java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                     int&nbsp;keyField)</code>
-<div class="block">Generates a random B+ tree file for testing</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">createRandomBTreeFile</a></span>(int&nbsp;columns,
-                     int&nbsp;rows,
-                     java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                     java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                     int&nbsp;keyField)</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-">createRandomInternalPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                        int&nbsp;keyField,
-                        int&nbsp;childPageCategory,
-                        int&nbsp;minKey,
-                        int&nbsp;maxKey,
-                        int&nbsp;minChildPtr)</code>
-<div class="block">Create a random internal page for testing</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-int-">createRandomInternalPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                        int&nbsp;keyField,
-                        int&nbsp;childPageCategory,
-                        int&nbsp;numKeys,
-                        int&nbsp;minKey,
-                        int&nbsp;maxKey,
-                        int&nbsp;minChildPtr)</code>
-<div class="block">Create a random internal page for testing</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-">createRandomLeafPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                    int&nbsp;columns,
-                    int&nbsp;keyField,
-                    int&nbsp;min,
-                    int&nbsp;max)</code>
-<div class="block">Create a random leaf page for testing</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-int-">createRandomLeafPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                    int&nbsp;columns,
-                    int&nbsp;keyField,
-                    int&nbsp;numTuples,
-                    int&nbsp;min,
-                    int&nbsp;max)</code>
-<div class="block">Create a random leaf page for testing</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomEntries-int-int-int-int-java.util.ArrayList-java.util.ArrayList-">generateRandomEntries</a></span>(int&nbsp;numKeys,
-                     int&nbsp;minKey,
-                     int&nbsp;maxKey,
-                     int&nbsp;minChildPtr,
-                     java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;childPointers,
-                     java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;keys)</code>
-<div class="block">Generate a random set of entries for testing</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>static java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomEntries-int-int-int-int-int-int-">generateRandomEntries</a></span>(int&nbsp;numKeys,
-                     int&nbsp;tableid,
-                     int&nbsp;childPageCategory,
-                     int&nbsp;minKey,
-                     int&nbsp;maxKey,
-                     int&nbsp;minChildPtr)</code>
-<div class="block">Generate a random set of entries for testing</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>static java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomTuples-int-int-int-int-">generateRandomTuples</a></span>(int&nbsp;columns,
-                    int&nbsp;rows,
-                    int&nbsp;min,
-                    int&nbsp;max)</code>
-<div class="block">Generate a random set of tuples for testing</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomTuples-int-int-int-int-java.util.Map-java.util.ArrayList-">generateRandomTuples</a></span>(int&nbsp;columns,
-                    int&nbsp;rows,
-                    int&nbsp;minValue,
-                    int&nbsp;maxValue,
-                    java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                    java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples)</code>
-<div class="block">Generate a random set of tuples for testing</div>
-</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomTuples-int-int-int-java.util.Map-java.util.ArrayList-">generateRandomTuples</a></span>(int&nbsp;columns,
-                    int&nbsp;rows,
-                    int&nbsp;maxValue,
-                    java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                    java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples)</code>
-<div class="block">Generate a random set of tuples for testing</div>
-</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeEntry-int-">getBTreeEntry</a></span>(int&nbsp;n)</code>&nbsp;</td>
-</tr>
-<tr id="i15" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeEntry-int-int-">getBTreeEntry</a></span>(int&nbsp;n,
-             int&nbsp;tableid)</code>&nbsp;</td>
-</tr>
-<tr id="i16" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeEntry-int-int-int-">getBTreeEntry</a></span>(int&nbsp;n,
-             int&nbsp;key,
-             int&nbsp;tableid)</code>&nbsp;</td>
-</tr>
-<tr id="i17" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeTuple-java.util.ArrayList-">getBTreeTuple</a></span>(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;tupdata)</code>&nbsp;</td>
-</tr>
-<tr id="i18" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeTuple-int-">getBTreeTuple</a></span>(int&nbsp;n)</code>&nbsp;</td>
-</tr>
-<tr id="i19" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeTuple-int:A-">getBTreeTuple</a></span>(int[]&nbsp;tupdata)</code>&nbsp;</td>
-</tr>
-<tr id="i20" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeTuple-int-int-">getBTreeTuple</a></span>(int&nbsp;n,
-             int&nbsp;width)</code>&nbsp;</td>
-</tr>
-<tr id="i21" class="rowColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getNumEntriesPerPage--">getNumEntriesPerPage</a></span>()</code>
-<div class="block">The number of entries that can fit on a page with integer key fields</div>
-</td>
-</tr>
-<tr id="i22" class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getNumTuplesPerPage-int-">getNumTuplesPerPage</a></span>(int&nbsp;columns)</code>
-<div class="block">Get the number of tuples that can fit on a page with the specified number of integer fields</div>
-</td>
-</tr>
-<tr id="i23" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#openBTreeFile-int-java.io.File-int-">openBTreeFile</a></span>(int&nbsp;cols,
-             java.io.File&nbsp;f,
-             int&nbsp;keyField)</code>
-<div class="block">Opens a BTreeFile and adds it to the catalog.</div>
-</td>
-</tr>
-<tr id="i24" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#openBTreeFile-int-java.lang.String-java.io.File-int-">openBTreeFile</a></span>(int&nbsp;cols,
-             java.lang.String&nbsp;colPrefix,
-             java.io.File&nbsp;f,
-             int&nbsp;keyField)</code>&nbsp;</td>
-</tr>
-<tr id="i25" class="rowColor">
-<td class="colFirst"><code>static java.util.ArrayList&lt;java.lang.Integer&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#tupleToList-simpledb.Tuple-">tupleToList</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tuple)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="MAX_RAND_VALUE">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>MAX_RAND_VALUE</h4>
-<pre>public static final&nbsp;int MAX_RAND_VALUE</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BTreeUtility.MAX_RAND_VALUE">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeUtility--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeUtility</h4>
-<pre>public&nbsp;BTreeUtility()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="tupleToList-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tupleToList</h4>
-<pre>public static&nbsp;java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;tupleToList(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tuple)</pre>
-</li>
-</ul>
-<a name="getBTreeTuple-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getBTreeTuple(int&nbsp;n)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with a single IntField with value n and with
-   RecordId(BTreePageId(1,2, BTreePageId.LEAF), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeTuple-int:A-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getBTreeTuple(int[]&nbsp;tupdata)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with an IntField for every element of tupdata
-   and RecordId(BTreePageId(1, 2, BTreePageId.LEAF), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeTuple-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getBTreeTuple(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;tupdata)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with an IntField for every element of tupdata
-   and RecordId(BTreePageId(1, 2, BTreePageId.LEAF), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeTuple-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getBTreeTuple(int&nbsp;n,
-                                  int&nbsp;width)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with a 'width' IntFields each with value n and
-   with RecordId(BTreePageId(1, 2, BTreePageId.LEAF), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeEntry-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeEntry</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;getBTreeEntry(int&nbsp;n)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeEntry with an IntField with value n and with
-   RecordId(BTreePageId(1,2, BTreePageId.INTERNAL), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeEntry-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeEntry</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;getBTreeEntry(int&nbsp;n,
-                                       int&nbsp;tableid)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeEntry with an IntField with value n and with
-   RecordId(BTreePageId(tableid,2, BTreePageId.INTERNAL), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeEntry-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeEntry</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;getBTreeEntry(int&nbsp;n,
-                                       int&nbsp;key,
-                                       int&nbsp;tableid)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeEntry with an IntField with value key and with
-   RecordId(BTreePageId(tableid,2, BTreePageId.INTERNAL), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createRandomBTreeFile(int&nbsp;columns,
-                                              int&nbsp;rows,
-                                              java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                              java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                                              int&nbsp;keyField)
-                                       throws java.io.IOException,
-                                              <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                              <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columnSpecification</code> - Mapping between column index and value.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomBTreeFile-int-int-int-java.util.Map-java.util.ArrayList-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createRandomBTreeFile(int&nbsp;columns,
-                                              int&nbsp;rows,
-                                              int&nbsp;maxValue,
-                                              java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                              java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                                              int&nbsp;keyField)
-                                       throws java.io.IOException,
-                                              <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                              <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Generates a random B+ tree file for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>maxValue</code> - - the maximum random value in this B+ tree</dd>
-<dd><code>columnSpecification</code> - - optional column specification</dd>
-<dd><code>tuples</code> - - optional list of tuples to return</dd>
-<dd><code>keyField</code> - - the index of the key field</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeFile</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomTuples-int-int-int-java.util.Map-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomTuples</h4>
-<pre>public static&nbsp;void&nbsp;generateRandomTuples(int&nbsp;columns,
-                                        int&nbsp;rows,
-                                        int&nbsp;maxValue,
-                                        java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                        java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples)</pre>
-<div class="block">Generate a random set of tuples for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>maxValue</code> - - the maximum random value in this B+ tree</dd>
-<dd><code>columnSpecification</code> - - optional column specification</dd>
-<dd><code>tuples</code> - - list of tuples to return</dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomTuples-int-int-int-int-java.util.Map-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomTuples</h4>
-<pre>public static&nbsp;void&nbsp;generateRandomTuples(int&nbsp;columns,
-                                        int&nbsp;rows,
-                                        int&nbsp;minValue,
-                                        int&nbsp;maxValue,
-                                        java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                        java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples)</pre>
-<div class="block">Generate a random set of tuples for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>minValue</code> - - the minimum random value in this B+ tree</dd>
-<dd><code>maxValue</code> - - the maximum random value in this B+ tree</dd>
-<dd><code>columnSpecification</code> - - optional column specification</dd>
-<dd><code>tuples</code> - - list of tuples to return</dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomEntries-int-int-int-int-java.util.ArrayList-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomEntries</h4>
-<pre>public static&nbsp;void&nbsp;generateRandomEntries(int&nbsp;numKeys,
-                                         int&nbsp;minKey,
-                                         int&nbsp;maxKey,
-                                         int&nbsp;minChildPtr,
-                                         java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;childPointers,
-                                         java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;keys)</pre>
-<div class="block">Generate a random set of entries for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>numKeys</code> - - number of keys</dd>
-<dd><code>minKey</code> - - the minimum key value</dd>
-<dd><code>maxKey</code> - - the maximum key value</dd>
-<dd><code>minChildPtr</code> - - the first child pointer</dd>
-<dd><code>childPointers</code> - - list of child pointers to return</dd>
-<dd><code>keys</code> - - list of keys to return</dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomTuples-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomTuples</h4>
-<pre>public static&nbsp;java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;generateRandomTuples(int&nbsp;columns,
-                                                              int&nbsp;rows,
-                                                              int&nbsp;min,
-                                                              int&nbsp;max)</pre>
-<div class="block">Generate a random set of tuples for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>min</code> - - the minimum value</dd>
-<dd><code>max</code> - - the maximum value</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the list of tuples</dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomEntries-int-int-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomEntries</h4>
-<pre>public static&nbsp;java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&nbsp;generateRandomEntries(int&nbsp;numKeys,
-                                                                    int&nbsp;tableid,
-                                                                    int&nbsp;childPageCategory,
-                                                                    int&nbsp;minKey,
-                                                                    int&nbsp;maxKey,
-                                                                    int&nbsp;minChildPtr)</pre>
-<div class="block">Generate a random set of entries for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>numKeys</code> - - the number of keys</dd>
-<dd><code>tableid</code> - - the tableid</dd>
-<dd><code>childPageCategory</code> - - the child page category (LEAF or INTERNAL)</dd>
-<dd><code>minKey</code> - - the minimum key value</dd>
-<dd><code>maxKey</code> - - the maximum key value</dd>
-<dd><code>minChildPtr</code> - - the first child pointer</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the list of entries</dd>
-</dl>
-</li>
-</ul>
-<a name="getNumTuplesPerPage-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumTuplesPerPage</h4>
-<pre>public static&nbsp;int&nbsp;getNumTuplesPerPage(int&nbsp;columns)</pre>
-<div class="block">Get the number of tuples that can fit on a page with the specified number of integer fields</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - the number of columns</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the number of tuples per page</dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomLeafPage</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;createRandomLeafPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                                 int&nbsp;columns,
-                                                 int&nbsp;keyField,
-                                                 int&nbsp;min,
-                                                 int&nbsp;max)
-                                          throws java.io.IOException</pre>
-<div class="block">Create a random leaf page for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - - the page id of the leaf page</dd>
-<dd><code>columns</code> - - the number of fields per tuple</dd>
-<dd><code>keyField</code> - - the index of the key field in each tuple</dd>
-<dd><code>min</code> - - the minimum value</dd>
-<dd><code>max</code> - - the maximum value</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the leaf page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomLeafPage</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;createRandomLeafPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                                 int&nbsp;columns,
-                                                 int&nbsp;keyField,
-                                                 int&nbsp;numTuples,
-                                                 int&nbsp;min,
-                                                 int&nbsp;max)
-                                          throws java.io.IOException</pre>
-<div class="block">Create a random leaf page for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - - the page id of the leaf page</dd>
-<dd><code>columns</code> - - the number of fields per tuple</dd>
-<dd><code>keyField</code> - - the index of the key field in each tuple</dd>
-<dd><code>numTuples</code> - - the number of tuples to insert</dd>
-<dd><code>min</code> - - the minimum value</dd>
-<dd><code>max</code> - - the maximum value</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the leaf page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="getNumEntriesPerPage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumEntriesPerPage</h4>
-<pre>public static&nbsp;int&nbsp;getNumEntriesPerPage()</pre>
-<div class="block">The number of entries that can fit on a page with integer key fields</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the number of entries per page</dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomInternalPage</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;createRandomInternalPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                                         int&nbsp;keyField,
-                                                         int&nbsp;childPageCategory,
-                                                         int&nbsp;minKey,
-                                                         int&nbsp;maxKey,
-                                                         int&nbsp;minChildPtr)
-                                                  throws java.io.IOException</pre>
-<div class="block">Create a random internal page for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - - the page id of the internal page</dd>
-<dd><code>keyField</code> - - the index of the key field in each tuple</dd>
-<dd><code>childPageCategory</code> - - the child page category (LEAF or INTERNAL)</dd>
-<dd><code>minKey</code> - - the minimum key value</dd>
-<dd><code>maxKey</code> - - the maximum key value</dd>
-<dd><code>minChildPtr</code> - - the first child pointer</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the internal page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomInternalPage</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;createRandomInternalPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                                         int&nbsp;keyField,
-                                                         int&nbsp;childPageCategory,
-                                                         int&nbsp;numKeys,
-                                                         int&nbsp;minKey,
-                                                         int&nbsp;maxKey,
-                                                         int&nbsp;minChildPtr)
-                                                  throws java.io.IOException</pre>
-<div class="block">Create a random internal page for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - - the page id of the internal page</dd>
-<dd><code>keyField</code> - - the index of the key field in each tuple</dd>
-<dd><code>childPageCategory</code> - - the child page category (LEAF or INTERNAL)</dd>
-<dd><code>numKeys</code> - - the number of keys to insert</dd>
-<dd><code>minKey</code> - - the minimum key value</dd>
-<dd><code>maxKey</code> - - the maximum key value</dd>
-<dd><code>minChildPtr</code> - - the first child pointer</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the internal page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="createBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createBTreeFile(int&nbsp;columns,
-                                        int&nbsp;rows,
-                                        java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                        java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                                        int&nbsp;keyField)
-                                 throws java.io.IOException,
-                                        <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                        <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">creates a *non* random B+ tree file for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>columnSpecification</code> - - optional column specification</dd>
-<dd><code>tuples</code> - - optional list of tuples to return</dd>
-<dd><code>keyField</code> - - the index of the key field</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeFile</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="openBTreeFile-int-java.io.File-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>openBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;openBTreeFile(int&nbsp;cols,
-                                      java.io.File&nbsp;f,
-                                      int&nbsp;keyField)</pre>
-<div class="block">Opens a BTreeFile and adds it to the catalog.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>cols</code> - number of columns in the table.</dd>
-<dd><code>f</code> - location of the file storing the table.</dd>
-<dd><code>keyField</code> - the field the B+ tree is keyed on</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the opened table.</dd>
-</dl>
-</li>
-</ul>
-<a name="openBTreeFile-int-java.lang.String-java.io.File-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>openBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;openBTreeFile(int&nbsp;cols,
-                                      java.lang.String&nbsp;colPrefix,
-                                      java.io.File&nbsp;f,
-                                      int&nbsp;keyField)</pre>
-</li>
-</ul>
-<a name="createEmptyBTreeFile-java.lang.String-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createEmptyBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createEmptyBTreeFile(java.lang.String&nbsp;path,
-                                             int&nbsp;cols,
-                                             int&nbsp;keyField)
-                                      throws java.io.IOException</pre>
-<div class="block">A utility method to create a new BTreeFile with no data,
- assuming the path does not already exist. If the path exists, the file
- will be overwritten. The new table will be added to the Catalog with
- the specified number of columns as IntFields indexed on the keyField.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="createEmptyBTreeFile-java.lang.String-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>createEmptyBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createEmptyBTreeFile(java.lang.String&nbsp;path,
-                                             int&nbsp;cols,
-                                             int&nbsp;keyField,
-                                             int&nbsp;pages)
-                                      throws java.io.IOException</pre>
-<div class="block">A utility method to create a new BTreeFile with no data, with the specified
- number of pages, assuming the path does not already exist. If the path exists, 
- the file will be overwritten. The new table will be added to the Catalog with
- the specified number of columns as IntFields indexed on the keyField.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/BufferPool.html lab4/javadoc/simpledb/BufferPool.html
--- lab3/javadoc/simpledb/BufferPool.html	2016-11-10 13:43:05.000000000 -0600
+++ lab4/javadoc/simpledb/BufferPool.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,721 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BufferPool</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BufferPool";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":9,"i8":10,"i9":10,"i10":10,"i11":9,"i12":9,"i13":10,"i14":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Catalog.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BufferPool.html" target="_top">Frames</a></li>
-<li><a href="BufferPool.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BufferPool" class="title">Class BufferPool</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BufferPool</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BufferPool</span>
-extends java.lang.Object</pre>
-<div class="block">BufferPool manages the reading and writing of pages into memory from
- disk. Access methods call into it to retrieve pages, and it fetches
- pages from the appropriate location.
- <p>
- The BufferPool is also responsible for locking;  when a transaction fetches
- a page, BufferPool checks that the transaction has the appropriate
- locks to read/write the page.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#DEFAULT_PAGES">DEFAULT_PAGES</a></span></code>
-<div class="block">Default number of pages passed to the constructor.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#PAGE_SIZE">PAGE_SIZE</a></span></code>
-<div class="block">Bytes per page, including header.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#pageSize">pageSize</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.util.Random</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#random">random</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#BufferPool-int-">BufferPool</a></span>(int&nbsp;numPages)</code>
-<div class="block">Creates a BufferPool that caches up to numPages pages.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Remove the specified tuple from the buffer pool.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#discardPage-simpledb.PageId-">discardPage</a></span>(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)</code>
-<div class="block">Remove the specific page id from the buffer pool.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#evictPage--">evictPage</a></span>()</code>
-<div class="block">Discards a page from the buffer pool.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#flushAllPages--">flushAllPages</a></span>()</code>
-<div class="block">Flush all dirty pages to disk.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#flushPage-simpledb.PageId-">flushPage</a></span>(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)</code>
-<div class="block">Flushes a certain page to disk</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#flushPages-simpledb.TransactionId-">flushPages</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Write all pages of the specified transaction to disk.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#getPage-simpledb.TransactionId-simpledb.PageId-simpledb.Permissions-">getPage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-       <a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid,
-       <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a>&nbsp;perm)</code>
-<div class="block">Retrieve the specified page with the associated permissions.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#getPageSize--">getPageSize</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#holdsLock-simpledb.TransactionId-simpledb.PageId-">holdsLock</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-         <a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;p)</code>
-<div class="block">Return true if the specified transaction has a lock on the specified page</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#insertTuple-simpledb.TransactionId-int-simpledb.Tuple-">insertTuple</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           int&nbsp;tableId,
-           <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Add a tuple to the specified table on behalf of transaction tid.</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#releasePage-simpledb.TransactionId-simpledb.PageId-">releasePage</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)</code>
-<div class="block">Releases the lock on a page.</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#resetPageSize--">resetPageSize</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#setPageSize-int-">setPageSize</a></span>(int&nbsp;pageSize)</code>&nbsp;</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#transactionComplete-simpledb.TransactionId-">transactionComplete</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Release all locks associated with a given transaction.</div>
-</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BufferPool.html#transactionComplete-simpledb.TransactionId-boolean-">transactionComplete</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                   boolean&nbsp;commit)</code>
-<div class="block">Commit or abort a given transaction; release all locks associated to
- the transaction.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="PAGE_SIZE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>PAGE_SIZE</h4>
-<pre>private static final&nbsp;int PAGE_SIZE</pre>
-<div class="block">Bytes per page, including header.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BufferPool.PAGE_SIZE">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="pageSize">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pageSize</h4>
-<pre>private static&nbsp;int pageSize</pre>
-</li>
-</ul>
-<a name="DEFAULT_PAGES">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>DEFAULT_PAGES</h4>
-<pre>public static final&nbsp;int DEFAULT_PAGES</pre>
-<div class="block">Default number of pages passed to the constructor. This is used by
-    other classes. BufferPool should use the numPages argument to the
-    constructor instead.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BufferPool.DEFAULT_PAGES">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="random">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>random</h4>
-<pre>private final&nbsp;java.util.Random random</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BufferPool-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BufferPool</h4>
-<pre>public&nbsp;BufferPool(int&nbsp;numPages)</pre>
-<div class="block">Creates a BufferPool that caches up to numPages pages.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>numPages</code> - maximum number of pages in this buffer pool.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getPageSize--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPageSize</h4>
-<pre>public static&nbsp;int&nbsp;getPageSize()</pre>
-</li>
-</ul>
-<a name="setPageSize-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setPageSize</h4>
-<pre>public static&nbsp;void&nbsp;setPageSize(int&nbsp;pageSize)</pre>
-</li>
-</ul>
-<a name="resetPageSize--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>resetPageSize</h4>
-<pre>public static&nbsp;void&nbsp;resetPageSize()</pre>
-</li>
-</ul>
-<a name="getPage-simpledb.TransactionId-simpledb.PageId-simpledb.Permissions-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPage</h4>
-<pre>public&nbsp;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;getPage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                    <a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid,
-                    <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a>&nbsp;perm)
-             throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                    <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Retrieve the specified page with the associated permissions.
- Will acquire a lock and may block if that lock is held by another
- transaction.
- <p>
- The retrieved page should be looked up in the buffer pool.  If it
- is present, it should be returned.  If it is not present, it should
- be added to the buffer pool and returned.  If there is insufficient
- space in the buffer pool, an page should be evicted and the new page
- should be added in its place.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - the ID of the transaction requesting the page</dd>
-<dd><code>pid</code> - the ID of the requested page</dd>
-<dd><code>perm</code> - the requested permissions on the page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="releasePage-simpledb.TransactionId-simpledb.PageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>releasePage</h4>
-<pre>public&nbsp;void&nbsp;releasePage(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                        <a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)</pre>
-<div class="block">Releases the lock on a page.
- Calling this is very risky, and may result in wrong behavior. Think hard
- about who needs to call this and why, and why they can run the risk of
- calling it.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - the ID of the transaction requesting the unlock</dd>
-<dd><code>pid</code> - the ID of the page to unlock</dd>
-</dl>
-</li>
-</ul>
-<a name="transactionComplete-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>transactionComplete</h4>
-<pre>public&nbsp;void&nbsp;transactionComplete(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)
-                         throws java.io.IOException</pre>
-<div class="block">Release all locks associated with a given transaction.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - the ID of the transaction requesting the unlock</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="holdsLock-simpledb.TransactionId-simpledb.PageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>holdsLock</h4>
-<pre>public&nbsp;boolean&nbsp;holdsLock(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                         <a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;p)</pre>
-<div class="block">Return true if the specified transaction has a lock on the specified page</div>
-</li>
-</ul>
-<a name="transactionComplete-simpledb.TransactionId-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>transactionComplete</h4>
-<pre>public&nbsp;void&nbsp;transactionComplete(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                boolean&nbsp;commit)
-                         throws java.io.IOException</pre>
-<div class="block">Commit or abort a given transaction; release all locks associated to
- the transaction.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - the ID of the transaction requesting the unlock</dd>
-<dd><code>commit</code> - a flag indicating whether we should commit or abort</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="insertTuple-simpledb.TransactionId-int-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>insertTuple</h4>
-<pre>public&nbsp;void&nbsp;insertTuple(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                        int&nbsp;tableId,
-                        <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                        java.io.IOException,
-                        <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Add a tuple to the specified table on behalf of transaction tid.  Will
- acquire a write lock on the page the tuple is added to and any other 
- pages that are updated (Lock acquisition is not needed for lab2). 
- May block if the lock(s) cannot be acquired.
- 
- Marks any pages that were dirtied by the operation as dirty by calling
- their markDirty bit, and adds versions of any pages that have 
- been dirtied to the cache (replacing any existing versions of those pages) so 
- that future requests see up-to-date pages.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - the transaction adding the tuple</dd>
-<dd><code>tableId</code> - the table to add the tuple to</dd>
-<dd><code>t</code> - the tuple to add</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="deleteTuple-simpledb.TransactionId-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteTuple</h4>
-<pre>public&nbsp;void&nbsp;deleteTuple(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                        <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                        java.io.IOException,
-                        <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Remove the specified tuple from the buffer pool.
- Will acquire a write lock on the page the tuple is removed from and any
- other pages that are updated. May block if the lock(s) cannot be acquired.
-
- Marks any pages that were dirtied by the operation as dirty by calling
- their markDirty bit, and adds versions of any pages that have 
- been dirtied to the cache (replacing any existing versions of those pages) so 
- that future requests see up-to-date pages.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - the transaction deleting the tuple.</dd>
-<dd><code>t</code> - the tuple to delete</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="flushAllPages--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>flushAllPages</h4>
-<pre>public&nbsp;void&nbsp;flushAllPages()
-                   throws java.io.IOException</pre>
-<div class="block">Flush all dirty pages to disk.
- NB: Be careful using this routine -- it writes dirty data to disk so will
-     break simpledb if running in NO STEAL mode.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="discardPage-simpledb.PageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>discardPage</h4>
-<pre>public&nbsp;void&nbsp;discardPage(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)</pre>
-<div class="block">Remove the specific page id from the buffer pool.
-        Needed by the recovery manager to ensure that the
-        buffer pool doesn't keep a rolled back page in its
-        cache.
-        
-        Also used by B+ tree files to ensure that deleted pages
-        are removed from the cache so they can be reused safely</div>
-</li>
-</ul>
-<a name="flushPage-simpledb.PageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>flushPage</h4>
-<pre>private&nbsp;void&nbsp;flushPage(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)
-                throws java.io.IOException</pre>
-<div class="block">Flushes a certain page to disk</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - an ID indicating the page to flush</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="flushPages-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>flushPages</h4>
-<pre>public&nbsp;void&nbsp;flushPages(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)
-                throws java.io.IOException</pre>
-<div class="block">Write all pages of the specified transaction to disk.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="evictPage--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>evictPage</h4>
-<pre>private&nbsp;void&nbsp;evictPage()
-                throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Discards a page from the buffer pool.
- Flushes the page to disk to ensure dirty pages are updated on disk.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Catalog.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BufferPool.html" target="_top">Frames</a></li>
-<li><a href="BufferPool.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Catalog.html lab4/javadoc/simpledb/Catalog.html
--- lab3/javadoc/simpledb/Catalog.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Catalog.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,476 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Catalog</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Catalog";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BufferPool.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/CostCard.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Catalog.html" target="_top">Frames</a></li>
-<li><a href="Catalog.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Catalog" class="title">Class Catalog</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Catalog</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Catalog</span>
-extends java.lang.Object</pre>
-<div class="block">The Catalog keeps track of all available tables in the database and their
- associated schemas.
- For now, this is a stub catalog that must be populated with tables by a
- user program before it can be used -- eventually, this should be converted
- to a catalog that reads a catalog table from disk.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#Catalog--">Catalog</a></span>()</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#addTable-simpledb.DbFile-">addTable</a></span>(<a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a>&nbsp;file)</code>
-<div class="block">Add a new table to the catalog.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#addTable-simpledb.DbFile-java.lang.String-">addTable</a></span>(<a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a>&nbsp;file,
-        java.lang.String&nbsp;name)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#addTable-simpledb.DbFile-java.lang.String-java.lang.String-">addTable</a></span>(<a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a>&nbsp;file,
-        java.lang.String&nbsp;name,
-        java.lang.String&nbsp;pkeyField)</code>
-<div class="block">Add a new table to the catalog.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#clear--">clear</a></span>()</code>
-<div class="block">Delete all tables from the catalog</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#getDatabaseFile-int-">getDatabaseFile</a></span>(int&nbsp;tableid)</code>
-<div class="block">Returns the DbFile that can be used to read the contents of the
- specified table.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#getPrimaryKey-int-">getPrimaryKey</a></span>(int&nbsp;tableid)</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#getTableId-java.lang.String-">getTableId</a></span>(java.lang.String&nbsp;name)</code>
-<div class="block">Return the id of the table with a specified name,</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#getTableName-int-">getTableName</a></span>(int&nbsp;id)</code>&nbsp;</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#getTupleDesc-int-">getTupleDesc</a></span>(int&nbsp;tableid)</code>
-<div class="block">Returns the tuple descriptor (schema) of the specified table</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#loadSchema-java.lang.String-">loadSchema</a></span>(java.lang.String&nbsp;catalogFile)</code>
-<div class="block">Reads the schema from a file and creates the appropriate tables in the database.</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>java.util.Iterator&lt;java.lang.Integer&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Catalog.html#tableIdIterator--">tableIdIterator</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Catalog--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Catalog</h4>
-<pre>public&nbsp;Catalog()</pre>
-<div class="block">Constructor.
- Creates a new, empty catalog.</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="addTable-simpledb.DbFile-java.lang.String-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addTable</h4>
-<pre>public&nbsp;void&nbsp;addTable(<a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a>&nbsp;file,
-                     java.lang.String&nbsp;name,
-                     java.lang.String&nbsp;pkeyField)</pre>
-<div class="block">Add a new table to the catalog.
- This table's contents are stored in the specified DbFile.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>file</code> - the contents of the table to add;  file.getId() is the identfier of
-    this file/tupledesc param for the calls getTupleDesc and getFile</dd>
-<dd><code>name</code> - the name of the table -- may be an empty string.  May not be null.  If a name
- conflict exists, use the last table to be added as the table for a given name.</dd>
-<dd><code>pkeyField</code> - the name of the primary key field</dd>
-</dl>
-</li>
-</ul>
-<a name="addTable-simpledb.DbFile-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addTable</h4>
-<pre>public&nbsp;void&nbsp;addTable(<a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a>&nbsp;file,
-                     java.lang.String&nbsp;name)</pre>
-</li>
-</ul>
-<a name="addTable-simpledb.DbFile-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addTable</h4>
-<pre>public&nbsp;void&nbsp;addTable(<a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a>&nbsp;file)</pre>
-<div class="block">Add a new table to the catalog.
- This table has tuples formatted using the specified TupleDesc and its
- contents are stored in the specified DbFile.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>file</code> - the contents of the table to add;  file.getId() is the identfier of
-    this file/tupledesc param for the calls getTupleDesc and getFile</dd>
-</dl>
-</li>
-</ul>
-<a name="getTableId-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableId</h4>
-<pre>public&nbsp;int&nbsp;getTableId(java.lang.String&nbsp;name)
-               throws java.util.NoSuchElementException</pre>
-<div class="block">Return the id of the table with a specified name,</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if the table doesn't exist</dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc(int&nbsp;tableid)
-                       throws java.util.NoSuchElementException</pre>
-<div class="block">Returns the tuple descriptor (schema) of the specified table</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableid</code> - The id of the table, as specified by the DbFile.getId()
-     function passed to addTable</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if the table doesn't exist</dd>
-</dl>
-</li>
-</ul>
-<a name="getDatabaseFile-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getDatabaseFile</h4>
-<pre>public&nbsp;<a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a>&nbsp;getDatabaseFile(int&nbsp;tableid)
-                       throws java.util.NoSuchElementException</pre>
-<div class="block">Returns the DbFile that can be used to read the contents of the
- specified table.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableid</code> - The id of the table, as specified by the DbFile.getId()
-     function passed to addTable</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="getPrimaryKey-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPrimaryKey</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getPrimaryKey(int&nbsp;tableid)</pre>
-</li>
-</ul>
-<a name="tableIdIterator--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tableIdIterator</h4>
-<pre>public&nbsp;java.util.Iterator&lt;java.lang.Integer&gt;&nbsp;tableIdIterator()</pre>
-</li>
-</ul>
-<a name="getTableName-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableName</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getTableName(int&nbsp;id)</pre>
-</li>
-</ul>
-<a name="clear--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>clear</h4>
-<pre>public&nbsp;void&nbsp;clear()</pre>
-<div class="block">Delete all tables from the catalog</div>
-</li>
-</ul>
-<a name="loadSchema-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>loadSchema</h4>
-<pre>public&nbsp;void&nbsp;loadSchema(java.lang.String&nbsp;catalogFile)</pre>
-<div class="block">Reads the schema from a file and creates the appropriate tables in the database.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>catalogFile</code> - </dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BufferPool.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/CostCard.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Catalog.html" target="_top">Frames</a></li>
-<li><a href="Catalog.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/CostCard.html lab4/javadoc/simpledb/CostCard.html
--- lab3/javadoc/simpledb/CostCard.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/CostCard.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,306 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>CostCard</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="CostCard";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Catalog.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Database.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/CostCard.html" target="_top">Frames</a></li>
-<li><a href="CostCard.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class CostCard" class="title">Class CostCard</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.CostCard</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">CostCard</span>
-extends java.lang.Object</pre>
-<div class="block">Class returned by <a href="../simpledb/JoinOptimizer.html#computeCostAndCardOfSubplan-java.util.HashMap-java.util.HashMap-simpledb.LogicalJoinNode-java.util.Set-double-simpledb.PlanCache-"><code>JoinOptimizer.computeCostAndCardOfSubplan(java.util.HashMap&lt;java.lang.String, simpledb.TableStats&gt;, java.util.HashMap&lt;java.lang.String, java.lang.Double&gt;, simpledb.LogicalJoinNode, java.util.Set&lt;simpledb.LogicalJoinNode&gt;, double, simpledb.PlanCache)</code></a> specifying the
-    cost and cardinality of the optimal plan represented by plan.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/CostCard.html#card">card</a></span></code>
-<div class="block">The cardinality of the optimal subplan</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/CostCard.html#cost">cost</a></span></code>
-<div class="block">The cost of the optimal subplan</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/CostCard.html#plan">plan</a></span></code>
-<div class="block">The optimal subplan</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/CostCard.html#CostCard--">CostCard</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="cost">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>cost</h4>
-<pre>public&nbsp;double cost</pre>
-<div class="block">The cost of the optimal subplan</div>
-</li>
-</ul>
-<a name="card">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>card</h4>
-<pre>public&nbsp;int card</pre>
-<div class="block">The cardinality of the optimal subplan</div>
-</li>
-</ul>
-<a name="plan">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>plan</h4>
-<pre>public&nbsp;java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt; plan</pre>
-<div class="block">The optimal subplan</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="CostCard--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>CostCard</h4>
-<pre>public&nbsp;CostCard()</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Catalog.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Database.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/CostCard.html" target="_top">Frames</a></li>
-<li><a href="CostCard.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Database.html lab4/javadoc/simpledb/Database.html
--- lab3/javadoc/simpledb/Database.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Database.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,433 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Database</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Database";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/CostCard.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DbException.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Database.html" target="_top">Frames</a></li>
-<li><a href="Database.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Database" class="title">Class Database</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Database</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Database</span>
-extends java.lang.Object</pre>
-<div class="block">Database is a class that initializes several static variables used by the
- database system (the catalog, the buffer pool, and the log files, in
- particular.)
- <p>
- Provides a set of methods that can be used to access these variables from
- anywhere.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#Z:Z_bufferpool">_bufferpool</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Catalog.html" title="class in simpledb">Catalog</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#Z:Z_catalog">_catalog</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static java.util.concurrent.atomic.AtomicReference&lt;<a href="../simpledb/Database.html" title="class in simpledb">Database</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#Z:Z_instance">_instance</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/LogFile.html" title="class in simpledb">LogFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#Z:Z_logfile">_logfile</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#LOGFILENAME">LOGFILENAME</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier</th>
-<th class="colLast" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private </code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#Database--">Database</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#getBufferPool--">getBufferPool</a></span>()</code>
-<div class="block">Return the buffer pool of the static Database instance</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Catalog.html" title="class in simpledb">Catalog</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#getCatalog--">getCatalog</a></span>()</code>
-<div class="block">Return the catalog of the static Database instance</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/LogFile.html" title="class in simpledb">LogFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#getLogFile--">getLogFile</a></span>()</code>
-<div class="block">Return the log file of the static Database instance</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#reset--">reset</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Database.html#resetBufferPool-int-">resetBufferPool</a></span>(int&nbsp;pages)</code>
-<div class="block">Method used for testing -- create a new instance of the buffer pool and
- return it</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="Z:Z_instance">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>_instance</h4>
-<pre>private static&nbsp;java.util.concurrent.atomic.AtomicReference&lt;<a href="../simpledb/Database.html" title="class in simpledb">Database</a>&gt; _instance</pre>
-</li>
-</ul>
-<a name="Z:Z_catalog">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>_catalog</h4>
-<pre>private final&nbsp;<a href="../simpledb/Catalog.html" title="class in simpledb">Catalog</a> _catalog</pre>
-</li>
-</ul>
-<a name="Z:Z_bufferpool">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>_bufferpool</h4>
-<pre>private final&nbsp;<a href="../simpledb/BufferPool.html" title="class in simpledb">BufferPool</a> _bufferpool</pre>
-</li>
-</ul>
-<a name="LOGFILENAME">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>LOGFILENAME</h4>
-<pre>private static final&nbsp;java.lang.String LOGFILENAME</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Database.LOGFILENAME">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="Z:Z_logfile">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>_logfile</h4>
-<pre>private final&nbsp;<a href="../simpledb/LogFile.html" title="class in simpledb">LogFile</a> _logfile</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Database--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Database</h4>
-<pre>private&nbsp;Database()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getLogFile--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getLogFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/LogFile.html" title="class in simpledb">LogFile</a>&nbsp;getLogFile()</pre>
-<div class="block">Return the log file of the static Database instance</div>
-</li>
-</ul>
-<a name="getBufferPool--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBufferPool</h4>
-<pre>public static&nbsp;<a href="../simpledb/BufferPool.html" title="class in simpledb">BufferPool</a>&nbsp;getBufferPool()</pre>
-<div class="block">Return the buffer pool of the static Database instance</div>
-</li>
-</ul>
-<a name="getCatalog--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getCatalog</h4>
-<pre>public static&nbsp;<a href="../simpledb/Catalog.html" title="class in simpledb">Catalog</a>&nbsp;getCatalog()</pre>
-<div class="block">Return the catalog of the static Database instance</div>
-</li>
-</ul>
-<a name="resetBufferPool-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>resetBufferPool</h4>
-<pre>public static&nbsp;<a href="../simpledb/BufferPool.html" title="class in simpledb">BufferPool</a>&nbsp;resetBufferPool(int&nbsp;pages)</pre>
-<div class="block">Method used for testing -- create a new instance of the buffer pool and
- return it</div>
-</li>
-</ul>
-<a name="reset--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>reset</h4>
-<pre>public static&nbsp;void&nbsp;reset()</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/CostCard.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DbException.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Database.html" target="_top">Frames</a></li>
-<li><a href="Database.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/DbException.html lab4/javadoc/simpledb/DbException.html
--- lab3/javadoc/simpledb/DbException.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/DbException.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,299 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>DbException</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="DbException";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Database.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DbFile.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DbException.html" target="_top">Frames</a></li>
-<li><a href="DbException.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Throwable">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class DbException" class="title">Class DbException</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Throwable</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Exception</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.DbException</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">DbException</span>
-extends java.lang.Exception</pre>
-<div class="block">Generic database exception class</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.DbException">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbException.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/DbException.html#DbException-java.lang.String-">DbException</a></span>(java.lang.String&nbsp;s)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Throwable">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Throwable</h3>
-<code>addSuppressed, fillInStackTrace, getCause, getLocalizedMessage, getMessage, getStackTrace, getSuppressed, initCause, printStackTrace, printStackTrace, printStackTrace, setStackTrace, toString</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.DbException.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="DbException-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>DbException</h4>
-<pre>public&nbsp;DbException(java.lang.String&nbsp;s)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Database.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DbFile.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DbException.html" target="_top">Frames</a></li>
-<li><a href="DbException.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Throwable">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/DbFile.html lab4/javadoc/simpledb/DbFile.html
--- lab3/javadoc/simpledb/DbFile.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/DbFile.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,399 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>DbFile</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="DbFile";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6,"i6":6};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DbException.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DbFileIterator.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DbFile.html" target="_top">Frames</a></li>
-<li><a href="DbFile.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Interface DbFile" class="title">Interface DbFile</h2>
-</div>
-<div class="contentContainer">
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Known Implementing Classes:</dt>
-<dd><a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>, <a href="../simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public interface <span class="typeNameLabel">DbFile</span></pre>
-<div class="block">The interface for database files on disk. Each table is represented by a
- single DbFile. DbFiles can fetch pages and iterate through tuples. Each
- file has a unique id used to store metadata about the table in the Catalog.
- DbFiles are generally accessed through the buffer pool, rather than directly
- by operators.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFile.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Removes the specified tuple from the file on behalf of the specified
- transaction.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFile.html#getId--">getId</a></span>()</code>
-<div class="block">Returns a unique ID used to identify this DbFile in the Catalog.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFile.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc of the table stored in this DbFile.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFile.html#insertTuple-simpledb.TransactionId-simpledb.Tuple-">insertTuple</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Inserts the specified tuple to the file on behalf of transaction.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFile.html#iterator-simpledb.TransactionId-">iterator</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Returns an iterator over all the tuples stored in this DbFile.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFile.html#readPage-simpledb.PageId-">readPage</a></span>(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;id)</code>
-<div class="block">Read the specified page from disk.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFile.html#writePage-simpledb.Page-">writePage</a></span>(<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;p)</code>
-<div class="block">Push the specified page to disk.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="readPage-simpledb.PageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readPage</h4>
-<pre><a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;readPage(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;id)</pre>
-<div class="block">Read the specified page from disk.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.lang.IllegalArgumentException</code> - if the page does not exist in this file.</dd>
-</dl>
-</li>
-</ul>
-<a name="writePage-simpledb.Page-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>writePage</h4>
-<pre>void&nbsp;writePage(<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;p)
-        throws java.io.IOException</pre>
-<div class="block">Push the specified page to disk.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>p</code> - The page to write.  page.getId().pageno() specifies the offset into the file where the page should be written.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code> - if the write fails</dd>
-</dl>
-</li>
-</ul>
-<a name="insertTuple-simpledb.TransactionId-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>insertTuple</h4>
-<pre>java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;insertTuple(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                      <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                               throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                      java.io.IOException,
-                                      <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Inserts the specified tuple to the file on behalf of transaction.
- This method will acquire a lock on the affected pages of the file, and
- may block until the lock can be acquired.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The transaction performing the update</dd>
-<dd><code>t</code> - The tuple to add.  This tuple should be updated to reflect that
-          it is now stored in this file.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>An ArrayList contain the pages that were modified</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the tuple cannot be added</dd>
-<dd><code>java.io.IOException</code> - if the needed file can't be read/written</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="deleteTuple-simpledb.TransactionId-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteTuple</h4>
-<pre>java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;deleteTuple(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                      <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                               throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                      java.io.IOException,
-                                      <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Removes the specified tuple from the file on behalf of the specified
- transaction.
- This method will acquire a lock on the affected pages of the file, and
- may block until the lock can be acquired.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The transaction performing the update</dd>
-<dd><code>t</code> - The tuple to delete.  This tuple should be updated to reflect that
-          it is no longer stored on any page.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>An ArrayList contain the pages that were modified</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the tuple cannot be deleted or is not a member
-   of the file</dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="iterator-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>iterator</h4>
-<pre><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a>&nbsp;iterator(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</pre>
-<div class="block">Returns an iterator over all the tuples stored in this DbFile. The
- iterator must use <a href="../simpledb/BufferPool.html#getPage-simpledb.TransactionId-simpledb.PageId-simpledb.Permissions-"><code>BufferPool.getPage(simpledb.TransactionId, simpledb.PageId, simpledb.Permissions)</code></a>, rather than
- <a href="../simpledb/DbFile.html#readPage-simpledb.PageId-"><code>readPage(simpledb.PageId)</code></a> to iterate through the pages.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an iterator over all the tuples stored in this DbFile.</dd>
-</dl>
-</li>
-</ul>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>int&nbsp;getId()</pre>
-<div class="block">Returns a unique ID used to identify this DbFile in the Catalog. This id
- can be used to look up the table via <a href="../simpledb/Catalog.html#getDatabaseFile-int-"><code>Catalog.getDatabaseFile(int)</code></a> and
- <a href="../simpledb/Catalog.html#getTupleDesc-int-"><code>Catalog.getTupleDesc(int)</code></a>.
- <p>
- Implementation note:  you will need to generate this tableid somewhere,
- ensure that each HeapFile has a "unique id," and that you always
- return the same value for a particular HeapFile. A simple implementation
- is to use the hash code of the absolute path of the file underlying
- the HeapFile, i.e. <code>f.getAbsoluteFile().hashCode()</code>.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an ID uniquely identifying this HeapFile.</dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block">Returns the TupleDesc of the table stored in this DbFile.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>TupleDesc of this DbFile.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DbException.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DbFileIterator.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DbFile.html" target="_top">Frames</a></li>
-<li><a href="DbFile.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/DbFileIterator.html lab4/javadoc/simpledb/DbFileIterator.html
--- lab3/javadoc/simpledb/DbFileIterator.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/DbFileIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,323 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>DbFileIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="DbFileIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DbFile.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DbIterator.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DbFileIterator.html" target="_top">Frames</a></li>
-<li><a href="DbFileIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Interface DbFileIterator" class="title">Interface DbFileIterator</h2>
-</div>
-<div class="contentContainer">
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Known Implementing Classes:</dt>
-<dd><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a>, <a href="../simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a>, <a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public interface <span class="typeNameLabel">DbFileIterator</span></pre>
-<div class="block">DbFileIterator is the iterator interface that all SimpleDB Dbfile should
- implement.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFileIterator.html#close--">close</a></span>()</code>
-<div class="block">Closes the iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFileIterator.html#hasNext--">hasNext</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFileIterator.html#next--">next</a></span>()</code>
-<div class="block">Gets the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFileIterator.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbFileIterator.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>void&nbsp;open()
-   throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-          <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Opens the iterator</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>boolean&nbsp;hasNext()
-         throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if there are more tuples available, false if no more tuples or iterator isn't open.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()
-    throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-           <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-           java.util.NoSuchElementException</pre>
-<div class="block">Gets the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The next tuple in the iterator.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if there are no more tuples</dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>void&nbsp;rewind()
-     throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-            <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - When rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>close</h4>
-<pre>void&nbsp;close()</pre>
-<div class="block">Closes the iterator.</div>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DbFile.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DbIterator.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DbFileIterator.html" target="_top">Frames</a></li>
-<li><a href="DbFileIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/DbIterator.html lab4/javadoc/simpledb/DbIterator.html
--- lab3/javadoc/simpledb/DbIterator.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/DbIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,363 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>DbIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="DbIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DbFileIterator.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DeadlockException.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DbIterator.html" target="_top">Frames</a></li>
-<li><a href="DbIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Interface DbIterator" class="title">Interface DbIterator</h2>
-</div>
-<div class="contentContainer">
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Superinterfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<dl>
-<dt>All Known Subinterfaces:</dt>
-<dd><a href="../simpledb/IndexDbIterator.html" title="interface in simpledb">IndexDbIterator</a></dd>
-</dl>
-<dl>
-<dt>All Known Implementing Classes:</dt>
-<dd><a href="../simpledb/Aggregate.html" title="class in simpledb">Aggregate</a>, <a href="../simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a>, <a href="../simpledb/Delete.html" title="class in simpledb">Delete</a>, <a href="../simpledb/Filter.html" title="class in simpledb">Filter</a>, <a href="../simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a>, <a href="../simpledb/Insert.html" title="class in simpledb">Insert</a>, <a href="../simpledb/Join.html" title="class in simpledb">Join</a>, <a href="../simpledb/Operator.html" title="class in simpledb">Operator</a>, <a href="../simpledb/OrderBy.html" title="class in simpledb">OrderBy</a>, <a href="../simpledb/Project.html" title="class in simpledb">Project</a>, <a href="../simpledb/SeqScan.html" title="class in simpledb">SeqScan</a>, <a href="../simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a>, <a href="../simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public interface <span class="typeNameLabel">DbIterator</span>
-extends java.io.Serializable</pre>
-<div class="block">DbIterator is the iterator interface that all SimpleDB operators should
- implement. If the iterator is not open, none of the methods should work,
- and should throw an IllegalStateException.  In addition to any
- resource allocation/deallocation, an open method should call any
- child iterator open methods, and in a close method, an iterator
- should call its children's close methods.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbIterator.html#close--">close</a></span>()</code>
-<div class="block">Closes the iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbIterator.html#hasNext--">hasNext</a></span>()</code>
-<div class="block">Returns true if the iterator has more tuples.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbIterator.html#next--">next</a></span>()</code>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbIterator.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DbIterator.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>void&nbsp;open()
-   throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-          <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>boolean&nbsp;hasNext()
-         throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Returns true if the iterator has more tuples.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true f the iterator has more tuples.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.lang.IllegalStateException</code> - If the iterator has not been opened</dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()
-    throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-           <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-           java.util.NoSuchElementException</pre>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next tuple in the iteration.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if there are no more tuples.</dd>
-<dd><code>java.lang.IllegalStateException</code> - If the iterator has not been opened</dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>void&nbsp;rewind()
-     throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-            <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code>java.lang.IllegalStateException</code> - If the iterator has not been opened</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the TupleDesc associated with this DbIterator.</dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>close</h4>
-<pre>void&nbsp;close()</pre>
-<div class="block">Closes the iterator. When the iterator is closed, calling next(),
- hasNext(), or rewind() should fail by throwing IllegalStateException.</div>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DbFileIterator.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/DeadlockException.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DbIterator.html" target="_top">Frames</a></li>
-<li><a href="DbIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/DeadlockException.html lab4/javadoc/simpledb/DeadlockException.html
--- lab3/javadoc/simpledb/DeadlockException.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/DeadlockException.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,299 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>DeadlockException</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="DeadlockException";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DbIterator.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Debug.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DeadlockException.html" target="_top">Frames</a></li>
-<li><a href="DeadlockException.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Throwable">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class DeadlockException" class="title">Class DeadlockException</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Throwable</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Exception</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.DeadlockException</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">DeadlockException</span>
-extends java.lang.Exception</pre>
-<div class="block">Exception that is thrown when a deadlock occurs.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.DeadlockException">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/DeadlockException.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/DeadlockException.html#DeadlockException--">DeadlockException</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Throwable">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Throwable</h3>
-<code>addSuppressed, fillInStackTrace, getCause, getLocalizedMessage, getMessage, getStackTrace, getSuppressed, initCause, printStackTrace, printStackTrace, printStackTrace, setStackTrace, toString</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.DeadlockException.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="DeadlockException--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>DeadlockException</h4>
-<pre>public&nbsp;DeadlockException()</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DbIterator.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Debug.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/DeadlockException.html" target="_top">Frames</a></li>
-<li><a href="DeadlockException.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Throwable">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Debug.html lab4/javadoc/simpledb/Debug.html
--- lab3/javadoc/simpledb/Debug.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Debug.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,387 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Debug</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Debug";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9,"i2":9,"i3":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DeadlockException.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Delete.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Debug.html" target="_top">Frames</a></li>
-<li><a href="Debug.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Debug" class="title">Class Debug</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Debug</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Debug</span>
-extends java.lang.Object</pre>
-<div class="block">Debug is a utility class that wraps println statements and allows
- more or less command line output to be turned on.
- <p>
- Change the value of the DEBUG_LEVEL constant using a system property:
- simpledb.Debug. For example, on the command line, use -Dsimpledb.Debug=x,
- or simply -Dsimpledb.Debug to enable it at level 0.
- The log(level, message, ...) method will print to standard output if the
- level number is less than or equal to the currently set DEBUG_LEVEL.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Debug.html#DEBUG_LEVEL">DEBUG_LEVEL</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Debug.html#DEFAULT_LEVEL">DEFAULT_LEVEL</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Debug.html#Debug--">Debug</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Debug.html#isEnabled--">isEnabled</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Debug.html#isEnabled-int-">isEnabled</a></span>(int&nbsp;level)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Debug.html#log-int-java.lang.String-java.lang.Object...-">log</a></span>(int&nbsp;level,
-   java.lang.String&nbsp;message,
-   java.lang.Object...&nbsp;args)</code>
-<div class="block">Log message if the log level >= level.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Debug.html#log-java.lang.String-java.lang.Object...-">log</a></span>(java.lang.String&nbsp;message,
-   java.lang.Object...&nbsp;args)</code>
-<div class="block">Logs message at the default log level.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="DEBUG_LEVEL">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>DEBUG_LEVEL</h4>
-<pre>private static final&nbsp;int DEBUG_LEVEL</pre>
-</li>
-</ul>
-<a name="DEFAULT_LEVEL">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>DEFAULT_LEVEL</h4>
-<pre>private static final&nbsp;int DEFAULT_LEVEL</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Debug.DEFAULT_LEVEL">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Debug--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Debug</h4>
-<pre>public&nbsp;Debug()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="log-int-java.lang.String-java.lang.Object...-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>log</h4>
-<pre>public static&nbsp;void&nbsp;log(int&nbsp;level,
-                       java.lang.String&nbsp;message,
-                       java.lang.Object...&nbsp;args)</pre>
-<div class="block">Log message if the log level >= level. Uses printf.</div>
-</li>
-</ul>
-<a name="isEnabled-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isEnabled</h4>
-<pre>public static&nbsp;boolean&nbsp;isEnabled(int&nbsp;level)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if level is being logged.</dd>
-</dl>
-</li>
-</ul>
-<a name="isEnabled--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isEnabled</h4>
-<pre>public static&nbsp;boolean&nbsp;isEnabled()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if the default level is being logged.</dd>
-</dl>
-</li>
-</ul>
-<a name="log-java.lang.String-java.lang.Object...-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>log</h4>
-<pre>public static&nbsp;void&nbsp;log(java.lang.String&nbsp;message,
-                       java.lang.Object...&nbsp;args)</pre>
-<div class="block">Logs message at the default log level.</div>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/DeadlockException.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Delete.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Debug.html" target="_top">Frames</a></li>
-<li><a href="Debug.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Delete.html lab4/javadoc/simpledb/Delete.html
--- lab3/javadoc/simpledb/Delete.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Delete.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,561 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Delete</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Delete";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Debug.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Field.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Delete.html" target="_top">Frames</a></li>
-<li><a href="Delete.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Delete" class="title">Class Delete</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/Operator.html" title="class in simpledb">simpledb.Operator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Delete</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Delete</span>
-extends <a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></pre>
-<div class="block">The delete operator. Delete reads tuples from its child operator and removes
- them from the table they belong to.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Delete">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#child">child</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#processed">processed</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#returnTD">returnTD</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#Delete-simpledb.TransactionId-simpledb.DbIterator-">Delete</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t,
-      <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</code>
-<div class="block">Constructor specifying the transaction that this delete belongs to as
- well as the child to read from.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#close--">close</a></span>()</code>
-<div class="block">Closes this iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#fetchNext--">fetchNext</a></span>()</code>
-<div class="block">Deletes tuples as they are read from the child operator.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#getChildren--">getChildren</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Delete.html#setChildren-simpledb.DbIterator:A-">setChildren</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</code>
-<div class="block">Set the children(child) of this operator.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.Operator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></h3>
-<code><a href="../simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality</a>, <a href="../simpledb/Operator.html#hasNext--">hasNext</a>, <a href="../simpledb/Operator.html#next--">next</a>, <a href="../simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Delete.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="child">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>child</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-</ul>
-<a name="returnTD">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>returnTD</h4>
-<pre>private&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> returnTD</pre>
-</li>
-</ul>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre>private&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="processed">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>processed</h4>
-<pre>private&nbsp;boolean processed</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Delete-simpledb.TransactionId-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Delete</h4>
-<pre>public&nbsp;Delete(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t,
-              <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</pre>
-<div class="block">Constructor specifying the transaction that this delete belongs to as
- well as the child to read from.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>t</code> - The transaction this delete runs in</dd>
-<dd><code>child</code> - The child operator from which to read tuples for deletion</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#getTupleDesc--">DbIterator</a></code></span></div>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the TupleDesc of the output tuples of this operator</dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#open--">open</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#close--">Operator</a></code></span></div>
-<div class="block">Closes this iterator. If overridden by a subclass, they should call
- super.close() in order for Operator's internal state to be consistent.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="fetchNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fetchNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;fetchNext()
-                   throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Deletes tuples as they are read from the child operator. Deletes are
- processed via the buffer pool (which can be accessed via the
- Database.getBufferPool() method.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#fetchNext--">fetchNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A 1-field tuple containing the number of deleted records.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Database.html#getBufferPool--"><code>Database.getBufferPool()</code></a>, 
-<a href="../simpledb/BufferPool.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-"><code>BufferPool.deleteTuple(simpledb.TransactionId, simpledb.Tuple)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildren--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getChildren</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;getChildren()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getChildren--">getChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the children DbIterators of this operator. If there is
-         only one child, return an array of only one element. For join
-         operators, the order of the children is not important. But they
-         should be consistent among multiple calls.</dd>
-</dl>
-</li>
-</ul>
-<a name="setChildren-simpledb.DbIterator:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setChildren</h4>
-<pre>public&nbsp;void&nbsp;setChildren(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">Operator</a></code></span></div>
-<div class="block">Set the children(child) of this operator. If the operator has only one
- child, children[0] should be used. If the operator is a join, children[0]
- and children[1] should be used.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>children</code> - the DbIterators which are to be set as the children(child) of
-            this operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Debug.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Field.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Delete.html" target="_top">Frames</a></li>
-<li><a href="Delete.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Field.html lab4/javadoc/simpledb/Field.html
--- lab3/javadoc/simpledb/Field.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Field.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,342 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Field</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Field";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Delete.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Filter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Field.html" target="_top">Frames</a></li>
-<li><a href="Field.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Interface Field" class="title">Interface Field</h2>
-</div>
-<div class="contentContainer">
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Superinterfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<dl>
-<dt>All Known Implementing Classes:</dt>
-<dd><a href="../simpledb/IntField.html" title="class in simpledb">IntField</a>, <a href="../simpledb/StringField.html" title="class in simpledb">StringField</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public interface <span class="typeNameLabel">Field</span>
-extends java.io.Serializable</pre>
-<div class="block">Interface for values of fields in tuples in SimpleDB.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Field.html#compare-simpledb.Predicate.Op-simpledb.Field-">compare</a></span>(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-       <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;value)</code>
-<div class="block">Compare the value of this field object to the passed in value.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Field.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;field)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Type.html" title="enum in simpledb">Type</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Field.html#getType--">getType</a></span>()</code>
-<div class="block">Returns the type of this field (see <a href="../simpledb/Type.html#INT_TYPE"><code>Type.INT_TYPE</code></a> or <a href="../simpledb/Type.html#STRING_TYPE"><code>Type.STRING_TYPE</code></a></div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Field.html#hashCode--">hashCode</a></span>()</code>
-<div class="block">Hash code.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Field.html#serialize-java.io.DataOutputStream-">serialize</a></span>(java.io.DataOutputStream&nbsp;dos)</code>
-<div class="block">Write the bytes representing this field to the specified
- DataOutputStream.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Field.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="serialize-java.io.DataOutputStream-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialize</h4>
-<pre>void&nbsp;serialize(java.io.DataOutputStream&nbsp;dos)
-        throws java.io.IOException</pre>
-<div class="block">Write the bytes representing this field to the specified
- DataOutputStream.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>dos</code> - The DataOutputStream to write to.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><code>DataOutputStream</code></dd>
-</dl>
-</li>
-</ul>
-<a name="compare-simpledb.Predicate.Op-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>compare</h4>
-<pre>boolean&nbsp;compare(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;value)</pre>
-<div class="block">Compare the value of this field object to the passed in value.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>op</code> - The operator</dd>
-<dd><code>value</code> - The value to compare this Field to</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>Whether or not the comparison yields true.</dd>
-</dl>
-</li>
-</ul>
-<a name="getType--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getType</h4>
-<pre><a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;getType()</pre>
-<div class="block">Returns the type of this field (see <a href="../simpledb/Type.html#INT_TYPE"><code>Type.INT_TYPE</code></a> or <a href="../simpledb/Type.html#STRING_TYPE"><code>Type.STRING_TYPE</code></a></div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>type of this field</dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>int&nbsp;hashCode()</pre>
-<div class="block">Hash code.
- Different Field objects representing the same value should probably
- return the same hashCode.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>boolean&nbsp;equals(java.lang.Object&nbsp;field)</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>toString</h4>
-<pre>java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Delete.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Filter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Field.html" target="_top">Frames</a></li>
-<li><a href="Field.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Filter.html lab4/javadoc/simpledb/Filter.html
--- lab3/javadoc/simpledb/Filter.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Filter.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,551 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Filter</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Filter";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Field.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HashEquiJoin.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Filter.html" target="_top">Frames</a></li>
-<li><a href="Filter.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Filter" class="title">Class Filter</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/Operator.html" title="class in simpledb">simpledb.Operator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Filter</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Filter</span>
-extends <a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></pre>
-<div class="block">Filter is an operator that implements a relational select.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Filter">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#child">child</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Predicate.html" title="class in simpledb">Predicate</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#pred">pred</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#Filter-simpledb.Predicate-simpledb.DbIterator-">Filter</a></span>(<a href="../simpledb/Predicate.html" title="class in simpledb">Predicate</a>&nbsp;p,
-      <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</code>
-<div class="block">Constructor accepts a predicate to apply and a child operator to read
- tuples to filter from.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#close--">close</a></span>()</code>
-<div class="block">Closes this iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#fetchNext--">fetchNext</a></span>()</code>
-<div class="block">AbstractDbIterator.readNext implementation.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#getChildren--">getChildren</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Predicate.html" title="class in simpledb">Predicate</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#getPredicate--">getPredicate</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Filter.html#setChildren-simpledb.DbIterator:A-">setChildren</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</code>
-<div class="block">Set the children(child) of this operator.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.Operator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></h3>
-<code><a href="../simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality</a>, <a href="../simpledb/Operator.html#hasNext--">hasNext</a>, <a href="../simpledb/Operator.html#next--">next</a>, <a href="../simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Filter.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="pred">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pred</h4>
-<pre>private&nbsp;<a href="../simpledb/Predicate.html" title="class in simpledb">Predicate</a> pred</pre>
-</li>
-</ul>
-<a name="child">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>child</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Filter-simpledb.Predicate-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Filter</h4>
-<pre>public&nbsp;Filter(<a href="../simpledb/Predicate.html" title="class in simpledb">Predicate</a>&nbsp;p,
-              <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</pre>
-<div class="block">Constructor accepts a predicate to apply and a child operator to read
- tuples to filter from.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>p</code> - The predicate to filter tuples with</dd>
-<dd><code>child</code> - The child operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getPredicate--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPredicate</h4>
-<pre>public&nbsp;<a href="../simpledb/Predicate.html" title="class in simpledb">Predicate</a>&nbsp;getPredicate()</pre>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#getTupleDesc--">DbIterator</a></code></span></div>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the TupleDesc of the output tuples of this operator</dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 java.util.NoSuchElementException,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#open--">open</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#close--">Operator</a></code></span></div>
-<div class="block">Closes this iterator. If overridden by a subclass, they should call
- super.close() in order for Operator's internal state to be consistent.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="fetchNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fetchNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;fetchNext()
-                   throws java.util.NoSuchElementException,
-                          <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">AbstractDbIterator.readNext implementation. Iterates over tuples from the
- child operator, applying the predicate to them and returning those that
- pass the predicate (i.e. for which the Predicate.filter() returns true.)</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#fetchNext--">fetchNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The next tuple that passes the filter, or null if there are no
-         more tuples</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Predicate.html#filter-simpledb.Tuple-"><code>Predicate.filter(simpledb.Tuple)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildren--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getChildren</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;getChildren()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getChildren--">getChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the children DbIterators of this operator. If there is
-         only one child, return an array of only one element. For join
-         operators, the order of the children is not important. But they
-         should be consistent among multiple calls.</dd>
-</dl>
-</li>
-</ul>
-<a name="setChildren-simpledb.DbIterator:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setChildren</h4>
-<pre>public&nbsp;void&nbsp;setChildren(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">Operator</a></code></span></div>
-<div class="block">Set the children(child) of this operator. If the operator has only one
- child, children[0] should be used. If the operator is a join, children[0]
- and children[1] should be used.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>children</code> - the DbIterators which are to be set as the children(child) of
-            this operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Field.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HashEquiJoin.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Filter.html" target="_top">Frames</a></li>
-<li><a href="Filter.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/HashEquiJoin.html lab4/javadoc/simpledb/HashEquiJoin.html
--- lab3/javadoc/simpledb/HashEquiJoin.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/HashEquiJoin.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,732 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>HashEquiJoin</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="HashEquiJoin";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Filter.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HeapFile.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HashEquiJoin.html" target="_top">Frames</a></li>
-<li><a href="HashEquiJoin.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class HashEquiJoin" class="title">Class HashEquiJoin</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/Operator.html" title="class in simpledb">simpledb.Operator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.HashEquiJoin</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">HashEquiJoin</span>
-extends <a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></pre>
-<div class="block">The Join operator implements the relational join operation.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.HashEquiJoin">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#child1">child1</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#child2">child2</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#comboTD">comboTD</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#listIt">listIt</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.util.HashMap&lt;java.lang.Object,java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#map">map</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#MAP_SIZE">MAP_SIZE</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#pred">pred</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#t1">t1</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#t2">t2</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#HashEquiJoin-simpledb.JoinPredicate-simpledb.DbIterator-simpledb.DbIterator-">HashEquiJoin</a></span>(<a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a>&nbsp;p,
-            <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child1,
-            <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child2)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#close--">close</a></span>()</code>
-<div class="block">Closes this iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#fetchNext--">fetchNext</a></span>()</code>
-<div class="block">Returns the next Tuple in the iterator, or null if the iteration is
- finished.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#getChildren--">getChildren</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#getJoinField1Name--">getJoinField1Name</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#getJoinField2Name--">getJoinField2Name</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#getJoinPredicate--">getJoinPredicate</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#loadMap--">loadMap</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#processList--">processList</a></span>()</code>
-<div class="block">Returns the next tuple generated by the join, or null if there are no
- more tuples.</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HashEquiJoin.html#setChildren-simpledb.DbIterator:A-">setChildren</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</code>
-<div class="block">Set the children(child) of this operator.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.Operator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></h3>
-<code><a href="../simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality</a>, <a href="../simpledb/Operator.html#hasNext--">hasNext</a>, <a href="../simpledb/Operator.html#next--">next</a>, <a href="../simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.HashEquiJoin.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="pred">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pred</h4>
-<pre>private&nbsp;<a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a> pred</pre>
-</li>
-</ul>
-<a name="child1">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>child1</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child1</pre>
-</li>
-</ul>
-<a name="child2">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>child2</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child2</pre>
-</li>
-</ul>
-<a name="comboTD">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>comboTD</h4>
-<pre>private&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> comboTD</pre>
-</li>
-</ul>
-<a name="t1">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>t1</h4>
-<pre>private transient&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a> t1</pre>
-</li>
-</ul>
-<a name="t2">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>t2</h4>
-<pre>private transient&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a> t2</pre>
-</li>
-</ul>
-<a name="map">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>map</h4>
-<pre>java.util.HashMap&lt;java.lang.Object,java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&gt; map</pre>
-</li>
-</ul>
-<a name="MAP_SIZE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>MAP_SIZE</h4>
-<pre>public static final&nbsp;int MAP_SIZE</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.HashEquiJoin.MAP_SIZE">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="listIt">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>listIt</h4>
-<pre>transient&nbsp;java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt; listIt</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="HashEquiJoin-simpledb.JoinPredicate-simpledb.DbIterator-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>HashEquiJoin</h4>
-<pre>public&nbsp;HashEquiJoin(<a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a>&nbsp;p,
-                    <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child1,
-                    <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child2)</pre>
-<div class="block">Constructor. Accepts to children to join and the predicate to join them
- on</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>p</code> - The predicate to use to join the children</dd>
-<dd><code>child1</code> - Iterator for the left(outer) relation to join</dd>
-<dd><code>child2</code> - Iterator for the right(inner) relation to join</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getJoinPredicate--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getJoinPredicate</h4>
-<pre>public&nbsp;<a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a>&nbsp;getJoinPredicate()</pre>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#getTupleDesc--">DbIterator</a></code></span></div>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the TupleDesc of the output tuples of this operator</dd>
-</dl>
-</li>
-</ul>
-<a name="getJoinField1Name--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getJoinField1Name</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getJoinField1Name()</pre>
-</li>
-</ul>
-<a name="getJoinField2Name--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getJoinField2Name</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getJoinField2Name()</pre>
-</li>
-</ul>
-<a name="loadMap--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>loadMap</h4>
-<pre>private&nbsp;boolean&nbsp;loadMap()
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                        <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 java.util.NoSuchElementException,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#open--">open</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#close--">Operator</a></code></span></div>
-<div class="block">Closes this iterator. If overridden by a subclass, they should call
- super.close() in order for Operator's internal state to be consistent.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="processList--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>processList</h4>
-<pre>private&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;processList()
-                   throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Returns the next tuple generated by the join, or null if there are no
- more tuples. Logically, this is the next tuple in r1 cross r2 that
- satisfies the join predicate. There are many possible implementations;
- the simplest is a nested loops join.
- <p>
- Note that the tuples returned from this particular implementation of Join
- are simply the concatenation of joining tuples from the left and right
- relation. Therefore, there will be two copies of the join attribute in
- the results. (Removing such duplicate columns can be done with an
- additional projection operator if needed.)
- <p>
- For example, if one tuple is {1,2,3} and the other tuple is {1,5,6},
- joined on equality of the first column, then this returns {1,2,3,1,5,6}.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The next matching tuple.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/JoinPredicate.html#filter-simpledb.Tuple-simpledb.Tuple-"><code>JoinPredicate.filter(simpledb.Tuple, simpledb.Tuple)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="fetchNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fetchNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;fetchNext()
-                   throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#fetchNext--">Operator</a></code></span></div>
-<div class="block">Returns the next Tuple in the iterator, or null if the iteration is
- finished. Operator uses this method to implement both <code>next</code>
- and <code>hasNext</code>.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#fetchNext--">fetchNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next Tuple in the iterator, or null if the iteration is
-         finished.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildren--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getChildren</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;getChildren()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getChildren--">getChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the children DbIterators of this operator. If there is
-         only one child, return an array of only one element. For join
-         operators, the order of the children is not important. But they
-         should be consistent among multiple calls.</dd>
-</dl>
-</li>
-</ul>
-<a name="setChildren-simpledb.DbIterator:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setChildren</h4>
-<pre>public&nbsp;void&nbsp;setChildren(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">Operator</a></code></span></div>
-<div class="block">Set the children(child) of this operator. If the operator has only one
- child, children[0] should be used. If the operator is a join, children[0]
- and children[1] should be used.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>children</code> - the DbIterators which are to be set as the children(child) of
-            this operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Filter.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HeapFile.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HashEquiJoin.html" target="_top">Frames</a></li>
-<li><a href="HashEquiJoin.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/HeapFile.html lab4/javadoc/simpledb/HeapFile.html
--- lab3/javadoc/simpledb/HeapFile.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/HeapFile.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,549 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>HeapFile</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="HeapFile";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HashEquiJoin.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HeapFileEncoder.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HeapFile.html" target="_top">Frames</a></li>
-<li><a href="HeapFile.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class HeapFile" class="title">Class HeapFile</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.HeapFile</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">HeapFile</span>
-extends java.lang.Object
-implements <a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></pre>
-<div class="block">HeapFile is an implementation of a DbFile that stores a collection of tuples
- in no particular order. Tuples are stored on pages, each of which is a fixed
- size, and the file is simply a collection of those pages. HeapFile works
- closely with HeapPage. The format of HeapPages is described in the HeapPage
- constructor.</div>
-<dl>
-<dt><span class="simpleTagLabel">Author:</span></dt>
-<dd>Sam Madden</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/HeapPage.html#HeapPage-simpledb.HeapPageId-byte:A-"><code>HeapPage.HeapPage(simpledb.HeapPageId, byte[])</code></a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#lastEmptyPage">lastEmptyPage</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#HeapFile-java.io.File-simpledb.TupleDesc-">HeapFile</a></span>(java.io.File&nbsp;f,
-        <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td)</code>
-<div class="block">Constructs a heap file backed by the specified file.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Removes the specified tuple from the file on behalf of the specified
- transaction.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>java.io.File</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#getFile--">getFile</a></span>()</code>
-<div class="block">Returns the File backing this HeapFile on disk.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#getId--">getId</a></span>()</code>
-<div class="block">Returns an ID uniquely identifying this HeapFile.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc of the table stored in this DbFile.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#insertTuple-simpledb.TransactionId-simpledb.Tuple-">insertTuple</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-           <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Inserts the specified tuple to the file on behalf of transaction.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#iterator-simpledb.TransactionId-">iterator</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Returns an iterator over all the tuples stored in this DbFile.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#numPages--">numPages</a></span>()</code>
-<div class="block">Returns the number of pages in this HeapFile.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#readPage-simpledb.PageId-">readPage</a></span>(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)</code>
-<div class="block">Read the specified page from disk.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFile.html#writePage-simpledb.Page-">writePage</a></span>(<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;page)</code>
-<div class="block">Push the specified page to disk.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="lastEmptyPage">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>lastEmptyPage</h4>
-<pre>private volatile&nbsp;int lastEmptyPage</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="HeapFile-java.io.File-simpledb.TupleDesc-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>HeapFile</h4>
-<pre>public&nbsp;HeapFile(java.io.File&nbsp;f,
-                <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td)</pre>
-<div class="block">Constructs a heap file backed by the specified file.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>f</code> - the file that stores the on-disk backing store for this heap
-            file.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getFile--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getFile</h4>
-<pre>public&nbsp;java.io.File&nbsp;getFile()</pre>
-<div class="block">Returns the File backing this HeapFile on disk.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the File backing this HeapFile on disk.</dd>
-</dl>
-</li>
-</ul>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>public&nbsp;int&nbsp;getId()</pre>
-<div class="block">Returns an ID uniquely identifying this HeapFile. Implementation note:
- you will need to generate this tableid somewhere ensure that each
- HeapFile has a "unique id," and that you always return the same value for
- a particular HeapFile. We suggest hashing the absolute file name of the
- file underlying the heapfile, i.e. f.getAbsoluteFile().hashCode().</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#getId--">getId</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an ID uniquely identifying this HeapFile.</dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block">Returns the TupleDesc of the table stored in this DbFile.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>TupleDesc of this DbFile.</dd>
-</dl>
-</li>
-</ul>
-<a name="readPage-simpledb.PageId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readPage</h4>
-<pre>public&nbsp;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;readPage(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbFile.html#readPage-simpledb.PageId-">DbFile</a></code></span></div>
-<div class="block">Read the specified page from disk.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#readPage-simpledb.PageId-">readPage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="writePage-simpledb.Page-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>writePage</h4>
-<pre>public&nbsp;void&nbsp;writePage(<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;page)
-               throws java.io.IOException</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbFile.html#writePage-simpledb.Page-">DbFile</a></code></span></div>
-<div class="block">Push the specified page to disk.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#writePage-simpledb.Page-">writePage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>page</code> - The page to write.  page.getId().pageno() specifies the offset into the file where the page should be written.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code> - if the write fails</dd>
-</dl>
-</li>
-</ul>
-<a name="numPages--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>numPages</h4>
-<pre>public&nbsp;int&nbsp;numPages()</pre>
-<div class="block">Returns the number of pages in this HeapFile.</div>
-</li>
-</ul>
-<a name="insertTuple-simpledb.TransactionId-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>insertTuple</h4>
-<pre>public&nbsp;java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;insertTuple(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                             <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                                      throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                             java.io.IOException,
-                                             <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbFile.html#insertTuple-simpledb.TransactionId-simpledb.Tuple-">DbFile</a></code></span></div>
-<div class="block">Inserts the specified tuple to the file on behalf of transaction.
- This method will acquire a lock on the affected pages of the file, and
- may block until the lock can be acquired.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#insertTuple-simpledb.TransactionId-simpledb.Tuple-">insertTuple</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The transaction performing the update</dd>
-<dd><code>t</code> - The tuple to add.  This tuple should be updated to reflect that
-          it is now stored in this file.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>An ArrayList contain the pages that were modified</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the tuple cannot be added</dd>
-<dd><code>java.io.IOException</code> - if the needed file can't be read/written</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="deleteTuple-simpledb.TransactionId-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteTuple</h4>
-<pre>public&nbsp;java.util.ArrayList&lt;<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&gt;&nbsp;deleteTuple(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                             <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                                      throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                             <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbFile.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">DbFile</a></code></span></div>
-<div class="block">Removes the specified tuple from the file on behalf of the specified
- transaction.
- This method will acquire a lock on the affected pages of the file, and
- may block until the lock can be acquired.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#deleteTuple-simpledb.TransactionId-simpledb.Tuple-">deleteTuple</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The transaction performing the update</dd>
-<dd><code>t</code> - The tuple to delete.  This tuple should be updated to reflect that
-          it is no longer stored on any page.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>An ArrayList contain the pages that were modified</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the tuple cannot be deleted or is not a member
-   of the file</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="iterator-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>iterator</h4>
-<pre>public&nbsp;<a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a>&nbsp;iterator(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbFile.html#iterator-simpledb.TransactionId-">DbFile</a></code></span></div>
-<div class="block">Returns an iterator over all the tuples stored in this DbFile. The
- iterator must use <a href="../simpledb/BufferPool.html#getPage-simpledb.TransactionId-simpledb.PageId-simpledb.Permissions-"><code>BufferPool.getPage(simpledb.TransactionId, simpledb.PageId, simpledb.Permissions)</code></a>, rather than
- <a href="../simpledb/DbFile.html#readPage-simpledb.PageId-"><code>DbFile.readPage(simpledb.PageId)</code></a> to iterate through the pages.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbFile.html#iterator-simpledb.TransactionId-">iterator</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an iterator over all the tuples stored in this DbFile.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HashEquiJoin.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HeapFileEncoder.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HeapFile.html" target="_top">Frames</a></li>
-<li><a href="HeapFile.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/HeapFileEncoder.html lab4/javadoc/simpledb/HeapFileEncoder.html
--- lab3/javadoc/simpledb/HeapFileEncoder.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/HeapFileEncoder.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,401 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>HeapFileEncoder</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="HeapFileEncoder";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9,"i2":9,"i3":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HeapFile.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HeapPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HeapFileEncoder.html" target="_top">Frames</a></li>
-<li><a href="HeapFileEncoder.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class HeapFileEncoder" class="title">Class HeapFileEncoder</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.HeapFileEncoder</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">HeapFileEncoder</span>
-extends java.lang.Object</pre>
-<div class="block">HeapFileEncoder reads a comma delimited text file or accepts
- an array of tuples and converts it to
- pages of binary data in the appropriate format for simpledb heap pages
- Pages are padded out to a specified length, and written consecutive in a
- data file.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/HeapFileEncoder.html#HeapFileEncoder--">HeapFileEncoder</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFileEncoder.html#convert-java.util.ArrayList-java.io.File-int-int-">convert</a></span>(java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-       java.io.File&nbsp;outFile,
-       int&nbsp;npagebytes,
-       int&nbsp;numFields)</code>
-<div class="block">Convert the specified tuple list (with only integer fields) into a binary
- page file.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFileEncoder.html#convert-java.io.File-java.io.File-int-int-">convert</a></span>(java.io.File&nbsp;inFile,
-       java.io.File&nbsp;outFile,
-       int&nbsp;npagebytes,
-       int&nbsp;numFields)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFileEncoder.html#convert-java.io.File-java.io.File-int-int-simpledb.Type:A-">convert</a></span>(java.io.File&nbsp;inFile,
-       java.io.File&nbsp;outFile,
-       int&nbsp;npagebytes,
-       int&nbsp;numFields,
-       <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr)</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapFileEncoder.html#convert-java.io.File-java.io.File-int-int-simpledb.Type:A-char-">convert</a></span>(java.io.File&nbsp;inFile,
-       java.io.File&nbsp;outFile,
-       int&nbsp;npagebytes,
-       int&nbsp;numFields,
-       <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-       char&nbsp;fieldSeparator)</code>
-<div class="block">Convert the specified input text file into a binary
- page file.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="HeapFileEncoder--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>HeapFileEncoder</h4>
-<pre>public&nbsp;HeapFileEncoder()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="convert-java.util.ArrayList-java.io.File-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>convert</h4>
-<pre>public static&nbsp;void&nbsp;convert(java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                           java.io.File&nbsp;outFile,
-                           int&nbsp;npagebytes,
-                           int&nbsp;numFields)
-                    throws java.io.IOException</pre>
-<div class="block">Convert the specified tuple list (with only integer fields) into a binary
- page file. <br>
-
- The format of the output file will be as specified in HeapPage and
- HeapFile.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tuples</code> - the tuples - a list of tuples, each represented by a list of integers that are
-        the field values for that tuple.</dd>
-<dd><code>outFile</code> - The output file to write data to</dd>
-<dd><code>npagebytes</code> - The number of bytes per page in the output file</dd>
-<dd><code>numFields</code> - the number of fields in each input tuple</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code> - if the temporary/output file can't be opened</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/HeapPage.html" title="class in simpledb"><code>HeapPage</code></a>, 
-<a href="../simpledb/HeapFile.html" title="class in simpledb"><code>HeapFile</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="convert-java.io.File-java.io.File-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>convert</h4>
-<pre>public static&nbsp;void&nbsp;convert(java.io.File&nbsp;inFile,
-                           java.io.File&nbsp;outFile,
-                           int&nbsp;npagebytes,
-                           int&nbsp;numFields)
-                    throws java.io.IOException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="convert-java.io.File-java.io.File-int-int-simpledb.Type:A-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>convert</h4>
-<pre>public static&nbsp;void&nbsp;convert(java.io.File&nbsp;inFile,
-                           java.io.File&nbsp;outFile,
-                           int&nbsp;npagebytes,
-                           int&nbsp;numFields,
-                           <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr)
-                    throws java.io.IOException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="convert-java.io.File-java.io.File-int-int-simpledb.Type:A-char-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>convert</h4>
-<pre>public static&nbsp;void&nbsp;convert(java.io.File&nbsp;inFile,
-                           java.io.File&nbsp;outFile,
-                           int&nbsp;npagebytes,
-                           int&nbsp;numFields,
-                           <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-                           char&nbsp;fieldSeparator)
-                    throws java.io.IOException</pre>
-<div class="block">Convert the specified input text file into a binary
- page file. <br>
- Assume format of the input file is (note that only integer fields are
- supported):<br>
- int,...,int\n<br>
- int,...,int\n<br>
- ...<br>
- where each row represents a tuple.<br>
- <p>
- The format of the output file will be as specified in HeapPage and
- HeapFile.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>inFile</code> - The input file to read data from</dd>
-<dd><code>outFile</code> - The output file to write data to</dd>
-<dd><code>npagebytes</code> - The number of bytes per page in the output file</dd>
-<dd><code>numFields</code> - the number of fields in each input line/output tuple</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code> - if the input/output file can't be opened or a
-   malformed input line is encountered</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/HeapPage.html" title="class in simpledb"><code>HeapPage</code></a>, 
-<a href="../simpledb/HeapFile.html" title="class in simpledb"><code>HeapFile</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HeapFile.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HeapPage.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HeapFileEncoder.html" target="_top">Frames</a></li>
-<li><a href="HeapFileEncoder.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/HeapPage.html lab4/javadoc/simpledb/HeapPage.html
--- lab3/javadoc/simpledb/HeapPage.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/HeapPage.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,777 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>HeapPage</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="HeapPage";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HeapFileEncoder.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HeapPageId.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HeapPage.html" target="_top">Frames</a></li>
-<li><a href="HeapPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class HeapPage" class="title">Class HeapPage</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.HeapPage</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">HeapPage</span>
-extends java.lang.Object
-implements <a href="../simpledb/Page.html" title="interface in simpledb">Page</a></pre>
-<div class="block">Each instance of HeapPage stores data for one page of HeapFiles and 
- implements the Page interface that is used by BufferPool.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/HeapFile.html" title="class in simpledb"><code>HeapFile</code></a>, 
-<a href="../simpledb/BufferPool.html" title="class in simpledb"><code>BufferPool</code></a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#dirtier">dirtier</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#dirty">dirty</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#header">header</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#numSlots">numSlots</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#oldData">oldData</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.lang.Byte</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#oldDataLock">oldDataLock</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#pid">pid</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#td">td</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#tuples">tuples</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#HeapPage-simpledb.HeapPageId-byte:A-">HeapPage</a></span>(<a href="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a>&nbsp;id,
-        byte[]&nbsp;data)</code>
-<div class="block">Create a HeapPage from a set of bytes of data read from disk.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#createEmptyPageData--">createEmptyPageData</a></span>()</code>
-<div class="block">Static method to generate a byte array corresponding to an empty
- HeapPage.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#deleteTuple-simpledb.Tuple-">deleteTuple</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Delete the specified tuple from the page;  the tuple should be updated to reflect
-   that it is no longer stored on any page.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#getBeforeImage--">getBeforeImage</a></span>()</code>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#getHeaderSize--">getHeaderSize</a></span>()</code>
-<div class="block">Computes the number of bytes in the header of a page in a HeapFile with each tuple occupying tupleSize bytes</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#getId--">getId</a></span>()</code>
-<div class="block">Return the id of this page.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#getNumEmptySlots--">getNumEmptySlots</a></span>()</code>
-<div class="block">Returns the number of empty slots on this page.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#getNumTuples--">getNumTuples</a></span>()</code>
-<div class="block">Retrieve the number of tuples on this page.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#getPageData--">getPageData</a></span>()</code>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#insertTuple-simpledb.Tuple-">insertTuple</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Adds the specified tuple to the page;  the tuple should be updated to reflect
-  that it is now stored on this page.</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#isDirty--">isDirty</a></span>()</code>
-<div class="block">Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#isSlotUsed-int-">isSlotUsed</a></span>(int&nbsp;i)</code>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#iterator--">iterator</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a></span>(boolean&nbsp;dirty,
-         <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Marks this page as dirty/not dirty and record that transaction
- that did the dirtying</div>
-</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#markSlotUsed-int-boolean-">markSlotUsed</a></span>(int&nbsp;i,
-            boolean&nbsp;value)</code>
-<div class="block">Abstraction to fill or clear a slot on this page.</div>
-</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#readNextTuple-java.io.DataInputStream-int-">readNextTuple</a></span>(java.io.DataInputStream&nbsp;dis,
-             int&nbsp;slotId)</code>
-<div class="block">Suck up tuples from the source file.</div>
-</td>
-</tr>
-<tr id="i15" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPage.html#setBeforeImage--">setBeforeImage</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="dirty">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>dirty</h4>
-<pre>private volatile&nbsp;boolean dirty</pre>
-</li>
-</ul>
-<a name="dirtier">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>dirtier</h4>
-<pre>private volatile&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> dirtier</pre>
-</li>
-</ul>
-<a name="pid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pid</h4>
-<pre>final&nbsp;<a href="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a> pid</pre>
-</li>
-</ul>
-<a name="td">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>td</h4>
-<pre>final&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-</ul>
-<a name="header">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>header</h4>
-<pre>final&nbsp;byte[] header</pre>
-</li>
-</ul>
-<a name="tuples">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tuples</h4>
-<pre>final&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>[] tuples</pre>
-</li>
-</ul>
-<a name="numSlots">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>numSlots</h4>
-<pre>final&nbsp;int numSlots</pre>
-</li>
-</ul>
-<a name="oldData">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>oldData</h4>
-<pre>byte[] oldData</pre>
-</li>
-</ul>
-<a name="oldDataLock">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>oldDataLock</h4>
-<pre>private final&nbsp;java.lang.Byte oldDataLock</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="HeapPage-simpledb.HeapPageId-byte:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>HeapPage</h4>
-<pre>public&nbsp;HeapPage(<a href="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a>&nbsp;id,
-                byte[]&nbsp;data)
-         throws java.io.IOException</pre>
-<div class="block">Create a HeapPage from a set of bytes of data read from disk.
- The format of a HeapPage is a set of header bytes indicating
- the slots of the page that are in use, some number of tuple slots.
-  Specifically, the number of tuples is equal to: <p>
-          floor((BufferPool.getPageSize()*8) / (tuple size * 8 + 1))
- <p> where tuple size is the size of tuples in this
- database table, which can be determined via <a href="../simpledb/Catalog.html#getTupleDesc-int-"><code>Catalog.getTupleDesc(int)</code></a>.
- The number of 8-bit header words is equal to:
- <p>
-      ceiling(no. tuple slots / 8)
- <p></div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Database.html#getCatalog--"><code>Database.getCatalog()</code></a>, 
-<a href="../simpledb/Catalog.html#getTupleDesc-int-"><code>Catalog.getTupleDesc(int)</code></a>, 
-<a href="../simpledb/BufferPool.html#getPageSize--"><code>BufferPool.getPageSize()</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getNumTuples--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumTuples</h4>
-<pre>private&nbsp;int&nbsp;getNumTuples()</pre>
-<div class="block">Retrieve the number of tuples on this page.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the number of tuples on this page</dd>
-</dl>
-</li>
-</ul>
-<a name="getHeaderSize--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getHeaderSize</h4>
-<pre>private&nbsp;int&nbsp;getHeaderSize()</pre>
-<div class="block">Computes the number of bytes in the header of a page in a HeapFile with each tuple occupying tupleSize bytes</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the number of bytes in the header of a page in a HeapFile with each tuple occupying tupleSize bytes</dd>
-</dl>
-</li>
-</ul>
-<a name="getBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBeforeImage</h4>
-<pre>public&nbsp;<a href="../simpledb/HeapPage.html" title="class in simpledb">HeapPage</a>&nbsp;getBeforeImage()</pre>
-<div class="block">Return a view of this page before it was modified
-        -- used by recovery</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getBeforeImage--">getBeforeImage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="setBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setBeforeImage</h4>
-<pre>public&nbsp;void&nbsp;setBeforeImage()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#setBeforeImage--">setBeforeImage</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>public&nbsp;<a href="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a>&nbsp;getId()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Page.html#getId--">Page</a></code></span></div>
-<div class="block">Return the id of this page.  The id is a unique identifier for a page
- that can be used to look up the page on disk or determine if the page
- is resident in the buffer pool.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getId--">getId</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the PageId associated with this page.</dd>
-</dl>
-</li>
-</ul>
-<a name="readNextTuple-java.io.DataInputStream-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readNextTuple</h4>
-<pre>private&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;readNextTuple(java.io.DataInputStream&nbsp;dis,
-                            int&nbsp;slotId)
-                     throws java.util.NoSuchElementException</pre>
-<div class="block">Suck up tuples from the source file.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="getPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPageData</h4>
-<pre>public&nbsp;byte[]&nbsp;getPageData()</pre>
-<div class="block">Generates a byte array representing the contents of this page.
- Used to serialize this page to disk.
- <p>
- The invariant here is that it should be possible to pass the byte
- array generated by getPageData to the HeapPage constructor and
- have it produce an identical HeapPage object.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#getPageData--">getPageData</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A byte array correspond to the bytes of this page.</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/HeapPage.html#HeapPage-simpledb.HeapPageId-byte:A-"><code>HeapPage(simpledb.HeapPageId, byte[])</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="createEmptyPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createEmptyPageData</h4>
-<pre>public static&nbsp;byte[]&nbsp;createEmptyPageData()</pre>
-<div class="block">Static method to generate a byte array corresponding to an empty
- HeapPage.
- Used to add new, empty pages to the file. Passing the results of
- this method to the HeapPage constructor will create a HeapPage with
- no valid tuples in it.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The returned ByteArray.</dd>
-</dl>
-</li>
-</ul>
-<a name="deleteTuple-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>deleteTuple</h4>
-<pre>public&nbsp;void&nbsp;deleteTuple(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Delete the specified tuple from the page;  the tuple should be updated to reflect
-   that it is no longer stored on any page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>t</code> - The tuple to delete</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if this tuple is not on this page, or tuple slot is
-         already empty.</dd>
-</dl>
-</li>
-</ul>
-<a name="insertTuple-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>insertTuple</h4>
-<pre>public&nbsp;void&nbsp;insertTuple(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Adds the specified tuple to the page;  the tuple should be updated to reflect
-  that it is now stored on this page.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>t</code> - The tuple to add.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if the page is full (no empty slots) or tupledesc
-         is mismatch.</dd>
-</dl>
-</li>
-</ul>
-<a name="markDirty-boolean-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>markDirty</h4>
-<pre>public&nbsp;void&nbsp;markDirty(boolean&nbsp;dirty,
-                      <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</pre>
-<div class="block">Marks this page as dirty/not dirty and record that transaction
- that did the dirtying</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="isDirty--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isDirty</h4>
-<pre>public&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;isDirty()</pre>
-<div class="block">Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Page.html#isDirty--">isDirty</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The id of the transaction that last dirtied this page, or null</dd>
-</dl>
-</li>
-</ul>
-<a name="getNumEmptySlots--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumEmptySlots</h4>
-<pre>public&nbsp;int&nbsp;getNumEmptySlots()</pre>
-<div class="block">Returns the number of empty slots on this page.</div>
-</li>
-</ul>
-<a name="isSlotUsed-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isSlotUsed</h4>
-<pre>public&nbsp;boolean&nbsp;isSlotUsed(int&nbsp;i)</pre>
-<div class="block">Returns true if associated slot on this page is filled.</div>
-</li>
-</ul>
-<a name="markSlotUsed-int-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>markSlotUsed</h4>
-<pre>private&nbsp;void&nbsp;markSlotUsed(int&nbsp;i,
-                          boolean&nbsp;value)</pre>
-<div class="block">Abstraction to fill or clear a slot on this page.</div>
-</li>
-</ul>
-<a name="iterator--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>iterator</h4>
-<pre>public&nbsp;java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;iterator()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an iterator over all tuples on this page (calling remove on this iterator throws an UnsupportedOperationException)
- (note that this iterator shouldn't return tuples in empty slots!)</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HeapFileEncoder.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/HeapPageId.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HeapPage.html" target="_top">Frames</a></li>
-<li><a href="HeapPage.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/HeapPageId.html lab4/javadoc/simpledb/HeapPageId.html
--- lab3/javadoc/simpledb/HeapPageId.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/HeapPageId.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,386 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>HeapPageId</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="HeapPageId";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HeapPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IndexDbIterator.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HeapPageId.html" target="_top">Frames</a></li>
-<li><a href="HeapPageId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class HeapPageId" class="title">Class HeapPageId</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.HeapPageId</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">HeapPageId</span>
-extends java.lang.Object
-implements <a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></pre>
-<div class="block">Unique identifier for HeapPage objects.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/HeapPageId.html#HeapPageId-int-int-">HeapPageId</a></span>(int&nbsp;tableId,
-          int&nbsp;pgNo)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPageId.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;o)</code>
-<div class="block">Compares one PageId to another.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPageId.html#getTableId--">getTableId</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPageId.html#hashCode--">hashCode</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPageId.html#pageNumber--">pageNumber</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>int[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/HeapPageId.html#serialize--">serialize</a></span>()</code>
-<div class="block">Return a representation of this object as an array of
-  integers, for writing to disk.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, finalize, getClass, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="HeapPageId-int-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>HeapPageId</h4>
-<pre>public&nbsp;HeapPageId(int&nbsp;tableId,
-                  int&nbsp;pgNo)</pre>
-<div class="block">Constructor. Create a page id structure for a specific page of a
- specific table.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableId</code> - The table that is being referenced</dd>
-<dd><code>pgNo</code> - The page number in that table.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTableId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableId</h4>
-<pre>public&nbsp;int&nbsp;getTableId()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#getTableId--">getTableId</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the table associated with this PageId</dd>
-</dl>
-</li>
-</ul>
-<a name="pageNumber--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pageNumber</h4>
-<pre>public&nbsp;int&nbsp;pageNumber()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#pageNumber--">pageNumber</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the page number in the table getTableId() associated with
-   this PageId</dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>public&nbsp;int&nbsp;hashCode()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#hashCode--">hashCode</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a hash code for this page, represented by the concatenation of
-   the table number and the page number (needed if a PageId is used as a
-   key in a hash table in the BufferPool, for example.)</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BufferPool.html" title="class in simpledb"><code>BufferPool</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;o)</pre>
-<div class="block">Compares one PageId to another.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#equals-java.lang.Object-">equals</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>o</code> - The object to compare against (must be a PageId)</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if the objects are equal (e.g., page numbers and table
-   ids are the same)</dd>
-</dl>
-</li>
-</ul>
-<a name="serialize--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialize</h4>
-<pre>public&nbsp;int[]&nbsp;serialize()</pre>
-<div class="block">Return a representation of this object as an array of
-  integers, for writing to disk.  Size of returned array must contain
-  number of integers that corresponds to number of args to one of the
-  constructors.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/PageId.html#serialize--">serialize</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HeapPage.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IndexDbIterator.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/HeapPageId.html" target="_top">Frames</a></li>
-<li><a href="HeapPageId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/IndexDbIterator.html lab4/javadoc/simpledb/IndexDbIterator.html
--- lab3/javadoc/simpledb/IndexDbIterator.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/IndexDbIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,272 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>IndexDbIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="IndexDbIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":6,"i1":6};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HeapPageId.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IndexPredicate.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IndexDbIterator.html" target="_top">Frames</a></li>
-<li><a href="IndexDbIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Interface IndexDbIterator" class="title">Interface IndexDbIterator</h2>
-</div>
-<div class="contentContainer">
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Superinterfaces:</dt>
-<dd><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>, java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public interface <span class="typeNameLabel">IndexDbIterator</span>
-extends <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></pre>
-<div class="block">IndexDBIterator is the interface that index access methods
-    implement in SimpleDb.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IndexDbIterator.html#open-simpledb.IndexPredicate-">open</a></span>(<a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</code>
-<div class="block">Open the access method such that when getNext is called, it
-        iterates through the tuples that satisfy ipred.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IndexDbIterator.html#rewind-simpledb.IndexPredicate-">rewind</a></span>(<a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)</code>
-<div class="block">Begin a new index scan with the specified predicate.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.DbIterator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;simpledb.<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></h3>
-<code><a href="../simpledb/DbIterator.html#close--">close</a>, <a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a>, <a href="../simpledb/DbIterator.html#hasNext--">hasNext</a>, <a href="../simpledb/DbIterator.html#next--">next</a>, <a href="../simpledb/DbIterator.html#open--">open</a>, <a href="../simpledb/DbIterator.html#rewind--">rewind</a></code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="open-simpledb.IndexPredicate-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>void&nbsp;open(<a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)
-   throws java.util.NoSuchElementException,
-          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-          <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Open the access method such that when getNext is called, it
-        iterates through the tuples that satisfy ipred.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>ipred</code> - The predicate that is used to scan the index.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind-simpledb.IndexPredicate-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>void&nbsp;rewind(<a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipred)
-     throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-            <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Begin a new index scan with the specified predicate.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>ipred</code> - The predicate that is used to scan the index.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/HeapPageId.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IndexPredicate.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IndexDbIterator.html" target="_top">Frames</a></li>
-<li><a href="IndexDbIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/IndexPredicate.html lab4/javadoc/simpledb/IndexPredicate.html
--- lab3/javadoc/simpledb/IndexPredicate.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/IndexPredicate.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,395 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>IndexPredicate</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="IndexPredicate";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IndexDbIterator.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Insert.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IndexPredicate.html" target="_top">Frames</a></li>
-<li><a href="IndexPredicate.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class IndexPredicate" class="title">Class IndexPredicate</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.IndexPredicate</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">IndexPredicate</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">IndexPredicate compares a field which has index on it against a given value</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/IndexDbIterator.html" title="interface in simpledb"><code>IndexDbIterator</code></a>, 
-<a href="../serialized-form.html#simpledb.IndexPredicate">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IndexPredicate.html#fieldvalue">fieldvalue</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IndexPredicate.html#op">op</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IndexPredicate.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/IndexPredicate.html#IndexPredicate-simpledb.Predicate.Op-simpledb.Field-">IndexPredicate</a></span>(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-              <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;fvalue)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IndexPredicate.html#equals-simpledb.IndexPredicate-">equals</a></span>(<a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipd)</code>
-<div class="block">Return true if the fieldvalue in the supplied predicate
-        is satisfied by this predicate's fieldvalue and
-        operator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IndexPredicate.html#getField--">getField</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IndexPredicate.html#getOp--">getOp</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.IndexPredicate.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="op">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>op</h4>
-<pre>private&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> op</pre>
-</li>
-</ul>
-<a name="fieldvalue">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>fieldvalue</h4>
-<pre>private&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a> fieldvalue</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="IndexPredicate-simpledb.Predicate.Op-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>IndexPredicate</h4>
-<pre>public&nbsp;IndexPredicate(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                      <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;fvalue)</pre>
-<div class="block">Constructor.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>fvalue</code> - The value that the predicate compares against.</dd>
-<dd><code>op</code> - The operation to apply (as defined in Predicate.Op); either
-   Predicate.Op.GREATER_THAN, Predicate.Op.LESS_THAN, Predicate.Op.EQUAL,
-   Predicate.Op.GREATER_THAN_OR_EQ, or Predicate.Op.LESS_THAN_OR_EQ</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Predicate.html" title="class in simpledb"><code>Predicate</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getField--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getField</h4>
-<pre>public&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;getField()</pre>
-</li>
-</ul>
-<a name="getOp--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOp</h4>
-<pre>public&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;getOp()</pre>
-</li>
-</ul>
-<a name="equals-simpledb.IndexPredicate-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(<a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a>&nbsp;ipd)</pre>
-<div class="block">Return true if the fieldvalue in the supplied predicate
-        is satisfied by this predicate's fieldvalue and
-        operator.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>ipd</code> - The field to compare against.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IndexDbIterator.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Insert.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IndexPredicate.html" target="_top">Frames</a></li>
-<li><a href="IndexPredicate.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Insert.html lab4/javadoc/simpledb/Insert.html
--- lab3/javadoc/simpledb/Insert.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Insert.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,584 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Insert</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Insert";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IndexPredicate.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IntegerAggregator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Insert.html" target="_top">Frames</a></li>
-<li><a href="Insert.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Insert" class="title">Class Insert</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/Operator.html" title="class in simpledb">simpledb.Operator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Insert</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Insert</span>
-extends <a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></pre>
-<div class="block">Inserts tuples read from the child operator into the tableId specified in the
- constructor</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Insert">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#child">child</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#processed">processed</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#returnTD">returnTD</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#tableId">tableId</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#Insert-simpledb.TransactionId-simpledb.DbIterator-int-">Insert</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t,
-      <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child,
-      int&nbsp;tableId)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#close--">close</a></span>()</code>
-<div class="block">Closes this iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#fetchNext--">fetchNext</a></span>()</code>
-<div class="block">Inserts tuples read from child into the tableId specified by the
- constructor.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#getChildren--">getChildren</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Insert.html#setChildren-simpledb.DbIterator:A-">setChildren</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</code>
-<div class="block">Set the children(child) of this operator.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.Operator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></h3>
-<code><a href="../simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality</a>, <a href="../simpledb/Operator.html#hasNext--">hasNext</a>, <a href="../simpledb/Operator.html#next--">next</a>, <a href="../simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Insert.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="child">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>child</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-</ul>
-<a name="tableId">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tableId</h4>
-<pre>private&nbsp;int tableId</pre>
-</li>
-</ul>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre>private&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="returnTD">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>returnTD</h4>
-<pre>private&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> returnTD</pre>
-</li>
-</ul>
-<a name="processed">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>processed</h4>
-<pre>private&nbsp;boolean processed</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Insert-simpledb.TransactionId-simpledb.DbIterator-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Insert</h4>
-<pre>public&nbsp;Insert(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t,
-              <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child,
-              int&nbsp;tableId)
-       throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Constructor.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>t</code> - The transaction running the insert.</dd>
-<dd><code>child</code> - The child operator from which to read tuples to be inserted.</dd>
-<dd><code>tableId</code> - The table in which to insert tuples.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - if TupleDesc of child differs from table into which we are to
-             insert.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#getTupleDesc--">DbIterator</a></code></span></div>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the TupleDesc of the output tuples of this operator</dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#open--">open</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#close--">Operator</a></code></span></div>
-<div class="block">Closes this iterator. If overridden by a subclass, they should call
- super.close() in order for Operator's internal state to be consistent.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="fetchNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fetchNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;fetchNext()
-                   throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Inserts tuples read from child into the tableId specified by the
- constructor. It returns a one field tuple containing the number of
- inserted records. Inserts should be passed through BufferPool. An
- instances of BufferPool is available via Database.getBufferPool(). Note
- that insert DOES NOT need check to see if a particular tuple is a
- duplicate before inserting it.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#fetchNext--">fetchNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A 1-field tuple containing the number of inserted records, or
-         null if called more than once.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Database.html#getBufferPool--"><code>Database.getBufferPool()</code></a>, 
-<a href="../simpledb/BufferPool.html#insertTuple-simpledb.TransactionId-int-simpledb.Tuple-"><code>BufferPool.insertTuple(simpledb.TransactionId, int, simpledb.Tuple)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildren--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getChildren</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;getChildren()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getChildren--">getChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the children DbIterators of this operator. If there is
-         only one child, return an array of only one element. For join
-         operators, the order of the children is not important. But they
-         should be consistent among multiple calls.</dd>
-</dl>
-</li>
-</ul>
-<a name="setChildren-simpledb.DbIterator:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setChildren</h4>
-<pre>public&nbsp;void&nbsp;setChildren(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">Operator</a></code></span></div>
-<div class="block">Set the children(child) of this operator. If the operator has only one
- child, children[0] should be used. If the operator is a join, children[0]
- and children[1] should be used.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>children</code> - the DbIterators which are to be set as the children(child) of
-            this operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IndexPredicate.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IntegerAggregator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Insert.html" target="_top">Frames</a></li>
-<li><a href="Insert.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/IntField.html lab4/javadoc/simpledb/IntField.html
--- lab3/javadoc/simpledb/IntField.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/IntField.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,484 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>IntField</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="IntField";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IntHistogram.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IntField.html" target="_top">Frames</a></li>
-<li><a href="IntField.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class IntField" class="title">Class IntField</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.IntField</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">IntField</span>
-extends java.lang.Object
-implements <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></pre>
-<div class="block">Instance of Field that stores a single integer.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.IntField">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#value">value</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#IntField-int-">IntField</a></span>(int&nbsp;i)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#compare-simpledb.Predicate.Op-simpledb.Field-">compare</a></span>(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-       <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;val)</code>
-<div class="block">Compare the specified field to the value of this Field.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;field)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Type.html" title="enum in simpledb">Type</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#getType--">getType</a></span>()</code>
-<div class="block">Return the Type of this field.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#getValue--">getValue</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#hashCode--">hashCode</a></span>()</code>
-<div class="block">Hash code.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#serialize-java.io.DataOutputStream-">serialize</a></span>(java.io.DataOutputStream&nbsp;dos)</code>
-<div class="block">Write the bytes representing this field to the specified
- DataOutputStream.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntField.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.IntField.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="value">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>value</h4>
-<pre>private final&nbsp;int value</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="IntField-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>IntField</h4>
-<pre>public&nbsp;IntField(int&nbsp;i)</pre>
-<div class="block">Constructor.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - The value of this field.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getValue--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getValue</h4>
-<pre>public&nbsp;int&nbsp;getValue()</pre>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#toString--">toString</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>public&nbsp;int&nbsp;hashCode()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Field.html#hashCode--">Field</a></code></span></div>
-<div class="block">Hash code.
- Different Field objects representing the same value should probably
- return the same hashCode.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#hashCode--">hashCode</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;field)</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#equals-java.lang.Object-">equals</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="serialize-java.io.DataOutputStream-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialize</h4>
-<pre>public&nbsp;void&nbsp;serialize(java.io.DataOutputStream&nbsp;dos)
-               throws java.io.IOException</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Field.html#serialize-java.io.DataOutputStream-">Field</a></code></span></div>
-<div class="block">Write the bytes representing this field to the specified
- DataOutputStream.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#serialize-java.io.DataOutputStream-">serialize</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>dos</code> - The DataOutputStream to write to.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><code>DataOutputStream</code></dd>
-</dl>
-</li>
-</ul>
-<a name="compare-simpledb.Predicate.Op-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>compare</h4>
-<pre>public&nbsp;boolean&nbsp;compare(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                       <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;val)</pre>
-<div class="block">Compare the specified field to the value of this Field.
- Return semantics are as specified by Field.compare</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#compare-simpledb.Predicate.Op-simpledb.Field-">compare</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>op</code> - The operator</dd>
-<dd><code>val</code> - The value to compare this Field to</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>Whether or not the comparison yields true.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>IllegalCastException</code> - if val is not an IntField</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Field.html#compare-simpledb.Predicate.Op-simpledb.Field-"><code>Field.compare(simpledb.Predicate.Op, simpledb.Field)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="getType--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getType</h4>
-<pre>public&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;getType()</pre>
-<div class="block">Return the Type of this field.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#getType--">getType</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>Type.INT_TYPE</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IntHistogram.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IntField.html" target="_top">Frames</a></li>
-<li><a href="IntField.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/IntHistogram.html lab4/javadoc/simpledb/IntHistogram.html
--- lab3/javadoc/simpledb/IntHistogram.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/IntHistogram.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,365 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>IntHistogram</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="IntHistogram";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IntField.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Join.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IntHistogram.html" target="_top">Frames</a></li>
-<li><a href="IntHistogram.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class IntHistogram" class="title">Class IntHistogram</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.IntHistogram</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">IntHistogram</span>
-extends java.lang.Object</pre>
-<div class="block">A class to represent a fixed-width histogram over a single integer-based field.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/IntHistogram.html#IntHistogram-int-int-int-">IntHistogram</a></span>(int&nbsp;buckets,
-            int&nbsp;min,
-            int&nbsp;max)</code>
-<div class="block">Create a new IntHistogram.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntHistogram.html#addValue-int-">addValue</a></span>(int&nbsp;v)</code>
-<div class="block">Add a value to the set of values that you are keeping a histogram of.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntHistogram.html#avgSelectivity--">avgSelectivity</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntHistogram.html#estimateSelectivity-simpledb.Predicate.Op-int-">estimateSelectivity</a></span>(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                   int&nbsp;v)</code>
-<div class="block">Estimate the selectivity of a particular predicate and operand on this table.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntHistogram.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="IntHistogram-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>IntHistogram</h4>
-<pre>public&nbsp;IntHistogram(int&nbsp;buckets,
-                    int&nbsp;min,
-                    int&nbsp;max)</pre>
-<div class="block">Create a new IntHistogram.
- 
- This IntHistogram should maintain a histogram of integer values that it receives.
- It should split the histogram into "buckets" buckets.
- 
- The values that are being histogrammed will be provided one-at-a-time through the "addValue()" function.
- 
- Your implementation should use space and have execution time that are both
- constant with respect to the number of values being histogrammed.  For example, you shouldn't 
- simply store every value that you see in a sorted list.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>buckets</code> - The number of buckets to split the input value into.</dd>
-<dd><code>min</code> - The minimum integer value that will ever be passed to this class for histogramming</dd>
-<dd><code>max</code> - The maximum integer value that will ever be passed to this class for histogramming</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="addValue-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addValue</h4>
-<pre>public&nbsp;void&nbsp;addValue(int&nbsp;v)</pre>
-<div class="block">Add a value to the set of values that you are keeping a histogram of.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>v</code> - Value to add to the histogram</dd>
-</dl>
-</li>
-</ul>
-<a name="estimateSelectivity-simpledb.Predicate.Op-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>estimateSelectivity</h4>
-<pre>public&nbsp;double&nbsp;estimateSelectivity(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                                  int&nbsp;v)</pre>
-<div class="block">Estimate the selectivity of a particular predicate and operand on this table.
- 
- For example, if "op" is "GREATER_THAN" and "v" is 5, 
- return your estimate of the fraction of elements that are greater than 5.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>op</code> - Operator</dd>
-<dd><code>v</code> - Value</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>Predicted selectivity of this particular operator and value</dd>
-</dl>
-</li>
-</ul>
-<a name="avgSelectivity--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>avgSelectivity</h4>
-<pre>public&nbsp;double&nbsp;avgSelectivity()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the average selectivity of this histogram.
-     
-     This is not an indispensable method to implement the basic
-     join optimization. It may be needed if you want to
-     implement a more efficient optimization</dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A string describing this histogram, for debugging purposes</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IntField.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Join.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IntHistogram.html" target="_top">Frames</a></li>
-<li><a href="IntHistogram.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/IntegerAggregator.AggregateFields.html lab4/javadoc/simpledb/IntegerAggregator.AggregateFields.html
--- lab3/javadoc/simpledb/IntegerAggregator.AggregateFields.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/IntegerAggregator.AggregateFields.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,339 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>IntegerAggregator.AggregateFields</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="IntegerAggregator.AggregateFields";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IntegerAggregator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IntField.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IntegerAggregator.AggregateFields.html" target="_top">Frames</a></li>
-<li><a href="IntegerAggregator.AggregateFields.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class IntegerAggregator.AggregateFields" class="title">Class IntegerAggregator.AggregateFields</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.IntegerAggregator.AggregateFields</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>private class <span class="typeNameLabel">IntegerAggregator.AggregateFields</span>
-extends java.lang.Object</pre>
-<div class="block">A helper struct to store accumulated aggregate values.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.AggregateFields.html#count">count</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.AggregateFields.html#groupVal">groupVal</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.AggregateFields.html#max">max</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.AggregateFields.html#min">min</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.AggregateFields.html#sum">sum</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.AggregateFields.html#sumCount">sumCount</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.AggregateFields.html#AggregateFields-java.lang.String-">AggregateFields</a></span>(java.lang.String&nbsp;groupVal)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="groupVal">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>groupVal</h4>
-<pre>public&nbsp;java.lang.String groupVal</pre>
-</li>
-</ul>
-<a name="min">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>min</h4>
-<pre>public&nbsp;int min</pre>
-</li>
-</ul>
-<a name="max">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>max</h4>
-<pre>public&nbsp;int max</pre>
-</li>
-</ul>
-<a name="sum">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>sum</h4>
-<pre>public&nbsp;int sum</pre>
-</li>
-</ul>
-<a name="count">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>count</h4>
-<pre>public&nbsp;int count</pre>
-</li>
-</ul>
-<a name="sumCount">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>sumCount</h4>
-<pre>public&nbsp;int sumCount</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="AggregateFields-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>AggregateFields</h4>
-<pre>public&nbsp;AggregateFields(java.lang.String&nbsp;groupVal)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IntegerAggregator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IntField.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IntegerAggregator.AggregateFields.html" target="_top">Frames</a></li>
-<li><a href="IntegerAggregator.AggregateFields.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/IntegerAggregator.html lab4/javadoc/simpledb/IntegerAggregator.html
--- lab3/javadoc/simpledb/IntegerAggregator.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/IntegerAggregator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,473 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>IntegerAggregator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="IntegerAggregator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Insert.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IntegerAggregator.html" target="_top">Frames</a></li>
-<li><a href="IntegerAggregator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class IntegerAggregator" class="title">Class IntegerAggregator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.IntegerAggregator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">IntegerAggregator</span>
-extends java.lang.Object
-implements <a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></pre>
-<div class="block">Knows how to compute some aggregate over a set of IntFields.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.IntegerAggregator">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Class and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a></span></code>
-<div class="block">A helper struct to store accumulated aggregate values.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="nested.classes.inherited.from.class.simpledb.Aggregator">
-<!--   -->
-</a>
-<h3>Nested classes/interfaces inherited from interface&nbsp;simpledb.<a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></h3>
-<code><a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></li>
-</ul>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.html#afield">afield</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.html#gbfield">gbfield</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Type.html" title="enum in simpledb">Type</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.html#gbfieldtype">gbfieldtype</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.util.HashMap&lt;java.lang.String,<a href="../simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.html#groups">groups</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.html#what">what</a></span></code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="fields.inherited.from.class.simpledb.Aggregator">
-<!--   -->
-</a>
-<h3>Fields inherited from interface&nbsp;simpledb.<a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></h3>
-<code><a href="../simpledb/Aggregator.html#NO_GROUPING">NO_GROUPING</a></code></li>
-</ul>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.html#IntegerAggregator-int-simpledb.Type-int-simpledb.Aggregator.Op-">IntegerAggregator</a></span>(int&nbsp;gbfield,
-                 <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;gbfieldtype,
-                 int&nbsp;afield,
-                 <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;what)</code>
-<div class="block">Aggregate constructor</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.html#iterator--">iterator</a></span>()</code>
-<div class="block">Create a DbIterator over group aggregate results.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/IntegerAggregator.html#mergeTupleIntoGroup-simpledb.Tuple-">mergeTupleIntoGroup</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tup)</code>
-<div class="block">Merge a new tuple into the aggregate, grouping as indicated in the
- constructor</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.IntegerAggregator.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="what">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>what</h4>
-<pre>private&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> what</pre>
-</li>
-</ul>
-<a name="gbfield">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>gbfield</h4>
-<pre>private&nbsp;int gbfield</pre>
-</li>
-</ul>
-<a name="gbfieldtype">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>gbfieldtype</h4>
-<pre>private&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a> gbfieldtype</pre>
-</li>
-</ul>
-<a name="afield">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>afield</h4>
-<pre>private&nbsp;int afield</pre>
-</li>
-</ul>
-<a name="groups">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>groups</h4>
-<pre>private&nbsp;java.util.HashMap&lt;java.lang.String,<a href="../simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb">IntegerAggregator.AggregateFields</a>&gt; groups</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="IntegerAggregator-int-simpledb.Type-int-simpledb.Aggregator.Op-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>IntegerAggregator</h4>
-<pre>public&nbsp;IntegerAggregator(int&nbsp;gbfield,
-                         <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;gbfieldtype,
-                         int&nbsp;afield,
-                         <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;what)</pre>
-<div class="block">Aggregate constructor</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>gbfield</code> - the 0-based index of the group-by field in the tuple, or
-            NO_GROUPING if there is no grouping</dd>
-<dd><code>gbfieldtype</code> - the type of the group by field (e.g., Type.INT_TYPE), or null
-            if there is no grouping</dd>
-<dd><code>afield</code> - the 0-based index of the aggregate field in the tuple</dd>
-<dd><code>what</code> - the aggregation operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="mergeTupleIntoGroup-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>mergeTupleIntoGroup</h4>
-<pre>public&nbsp;void&nbsp;mergeTupleIntoGroup(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tup)</pre>
-<div class="block">Merge a new tuple into the aggregate, grouping as indicated in the
- constructor</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Aggregator.html#mergeTupleIntoGroup-simpledb.Tuple-">mergeTupleIntoGroup</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tup</code> - the Tuple containing an aggregate field and a group-by field</dd>
-</dl>
-</li>
-</ul>
-<a name="iterator--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>iterator</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;iterator()</pre>
-<div class="block">Create a DbIterator over group aggregate results.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Aggregator.html#iterator--">iterator</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a DbIterator whose tuples are the pair (groupVal, aggregateVal)
-         if using group, or a single (aggregateVal) if no grouping. The
-         aggregateVal is determined by the type of aggregate specified in
-         the constructor.</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/TupleIterator.html" title="class in simpledb"><code>for a possible helper</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Insert.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/IntegerAggregator.html" target="_top">Frames</a></li>
-<li><a href="IntegerAggregator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Join.html lab4/javadoc/simpledb/Join.html
--- lab3/javadoc/simpledb/Join.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Join.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,639 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Join</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Join";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IntHistogram.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/JoinOptimizer.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Join.html" target="_top">Frames</a></li>
-<li><a href="Join.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Join" class="title">Class Join</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/Operator.html" title="class in simpledb">simpledb.Operator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Join</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Join</span>
-extends <a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></pre>
-<div class="block">The Join operator implements the relational join operation.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Join">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#child1">child1</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#child2">child2</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#comboTD">comboTD</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#pred">pred</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#t1">t1</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Join.html#Join-simpledb.JoinPredicate-simpledb.DbIterator-simpledb.DbIterator-">Join</a></span>(<a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a>&nbsp;p,
-    <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child1,
-    <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child2)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#close--">close</a></span>()</code>
-<div class="block">Closes this iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#fetchNext--">fetchNext</a></span>()</code>
-<div class="block">Returns the next tuple generated by the join, or null if there are no
- more tuples.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#getChildren--">getChildren</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#getJoinField1Name--">getJoinField1Name</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#getJoinField2Name--">getJoinField2Name</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#getJoinPredicate--">getJoinPredicate</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Join.html#setChildren-simpledb.DbIterator:A-">setChildren</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</code>
-<div class="block">Set the children(child) of this operator.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.Operator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></h3>
-<code><a href="../simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality</a>, <a href="../simpledb/Operator.html#hasNext--">hasNext</a>, <a href="../simpledb/Operator.html#next--">next</a>, <a href="../simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Join.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="pred">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>pred</h4>
-<pre>private&nbsp;<a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a> pred</pre>
-</li>
-</ul>
-<a name="child1">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>child1</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child1</pre>
-</li>
-</ul>
-<a name="child2">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>child2</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child2</pre>
-</li>
-</ul>
-<a name="comboTD">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>comboTD</h4>
-<pre>private&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> comboTD</pre>
-</li>
-</ul>
-<a name="t1">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>t1</h4>
-<pre>private&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a> t1</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Join-simpledb.JoinPredicate-simpledb.DbIterator-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Join</h4>
-<pre>public&nbsp;Join(<a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a>&nbsp;p,
-            <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child1,
-            <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child2)</pre>
-<div class="block">Constructor. Accepts to children to join and the predicate to join them
- on</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>p</code> - The predicate to use to join the children</dd>
-<dd><code>child1</code> - Iterator for the left(outer) relation to join</dd>
-<dd><code>child2</code> - Iterator for the right(inner) relation to join</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getJoinPredicate--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getJoinPredicate</h4>
-<pre>public&nbsp;<a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a>&nbsp;getJoinPredicate()</pre>
-</li>
-</ul>
-<a name="getJoinField1Name--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getJoinField1Name</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getJoinField1Name()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the field name of join field1. Should be quantified by
-       alias or table name.</dd>
-</dl>
-</li>
-</ul>
-<a name="getJoinField2Name--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getJoinField2Name</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getJoinField2Name()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the field name of join field2. Should be quantified by
-       alias or table name.</dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#getTupleDesc--">DbIterator</a></code></span></div>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the TupleDesc of the output tuples of this operator</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/TupleDesc.html#merge-simpledb.TupleDesc-simpledb.TupleDesc-"><code>for possible
-      implementation logic.</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 java.util.NoSuchElementException,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#open--">open</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#close--">Operator</a></code></span></div>
-<div class="block">Closes this iterator. If overridden by a subclass, they should call
- super.close() in order for Operator's internal state to be consistent.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="fetchNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fetchNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;fetchNext()
-                   throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Returns the next tuple generated by the join, or null if there are no
- more tuples. Logically, this is the next tuple in r1 cross r2 that
- satisfies the join predicate. There are many possible implementations;
- the simplest is a nested loops join.
- <p>
- Note that the tuples returned from this particular implementation of Join
- are simply the concatenation of joining tuples from the left and right
- relation. Therefore, if an equality predicate is used there will be two
- copies of the join attribute in the results. (Removing such duplicate
- columns can be done with an additional projection operator if needed.)
- <p>
- For example, if one tuple is {1,2,3} and the other tuple is {1,5,6},
- joined on equality of the first column, then this returns {1,2,3,1,5,6}.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#fetchNext--">fetchNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The next matching tuple.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/JoinPredicate.html#filter-simpledb.Tuple-simpledb.Tuple-"><code>JoinPredicate.filter(simpledb.Tuple, simpledb.Tuple)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildren--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getChildren</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;getChildren()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getChildren--">getChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the children DbIterators of this operator. If there is
-         only one child, return an array of only one element. For join
-         operators, the order of the children is not important. But they
-         should be consistent among multiple calls.</dd>
-</dl>
-</li>
-</ul>
-<a name="setChildren-simpledb.DbIterator:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setChildren</h4>
-<pre>public&nbsp;void&nbsp;setChildren(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">Operator</a></code></span></div>
-<div class="block">Set the children(child) of this operator. If the operator has only one
- child, children[0] should be used. If the operator is a join, children[0]
- and children[1] should be used.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>children</code> - the DbIterators which are to be set as the children(child) of
-            this operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/IntHistogram.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/JoinOptimizer.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Join.html" target="_top">Frames</a></li>
-<li><a href="Join.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/JoinOptimizer.html lab4/javadoc/simpledb/JoinOptimizer.html
--- lab3/javadoc/simpledb/JoinOptimizer.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/JoinOptimizer.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,686 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>JoinOptimizer</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="JoinOptimizer";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":9,"i6":10,"i7":9,"i8":10,"i9":10,"i10":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Join.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/JoinPredicate.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/JoinOptimizer.html" target="_top">Frames</a></li>
-<li><a href="JoinOptimizer.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class JoinOptimizer" class="title">Class JoinOptimizer</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.JoinOptimizer</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">JoinOptimizer</span>
-extends java.lang.Object</pre>
-<div class="block">The JoinOptimizer class is responsible for ordering a series of joins
- optimally, and for selecting the best instantiation of a join for a given
- logical plan.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#joins">joins</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#p">p</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#JoinOptimizer-simpledb.LogicalPlan-java.util.Vector-">JoinOptimizer</a></span>(<a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a>&nbsp;p,
-             java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;joins)</code>
-<div class="block">Constructor</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/CostCard.html" title="class in simpledb">CostCard</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#computeCostAndCardOfSubplan-java.util.HashMap-java.util.HashMap-simpledb.LogicalJoinNode-java.util.Set-double-simpledb.PlanCache-">computeCostAndCardOfSubplan</a></span>(java.util.HashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats,
-                           java.util.HashMap&lt;java.lang.String,java.lang.Double&gt;&nbsp;filterSelectivities,
-                           <a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&nbsp;joinToRemove,
-                           java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;joinSet,
-                           double&nbsp;bestCostSoFar,
-                           <a href="../simpledb/PlanCache.html" title="class in simpledb">PlanCache</a>&nbsp;pc)</code>
-<div class="block">This is a helper method that computes the cost and cardinality of joining
- joinToRemove to joinSet (joinSet should contain joinToRemove), given that
- all of the subsets of size joinSet.size() - 1 have already been computed
- and stored in PlanCache pc.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#doesJoin-java.util.Vector-java.lang.String-">doesJoin</a></span>(java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;joinlist,
-        java.lang.String&nbsp;table)</code>
-<div class="block">Return true if the specified table is in the list of joins, false
- otherwise</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>&lt;T&gt;&nbsp;java.util.Set&lt;java.util.Set&lt;T&gt;&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#enumerateSubsets-java.util.Vector-int-">enumerateSubsets</a></span>(java.util.Vector&lt;T&gt;&nbsp;v,
-                int&nbsp;size)</code>
-<div class="block">Helper method to enumerate all of the subsets of a given size of a
- specified vector.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#estimateJoinCardinality-simpledb.LogicalJoinNode-int-int-boolean-boolean-java.util.Map-">estimateJoinCardinality</a></span>(<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&nbsp;j,
-                       int&nbsp;card1,
-                       int&nbsp;card2,
-                       boolean&nbsp;t1pkey,
-                       boolean&nbsp;t2pkey,
-                       java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats)</code>
-<div class="block">Estimate the cardinality of a join.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#estimateJoinCost-simpledb.LogicalJoinNode-int-int-double-double-">estimateJoinCost</a></span>(<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&nbsp;j,
-                int&nbsp;card1,
-                int&nbsp;card2,
-                double&nbsp;cost1,
-                double&nbsp;cost2)</code>
-<div class="block">Estimate the cost of a join.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#estimateTableJoinCardinality-simpledb.Predicate.Op-java.lang.String-java.lang.String-java.lang.String-java.lang.String-int-int-boolean-boolean-java.util.Map-java.util.Map-">estimateTableJoinCardinality</a></span>(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;joinOp,
-                            java.lang.String&nbsp;table1Alias,
-                            java.lang.String&nbsp;table2Alias,
-                            java.lang.String&nbsp;field1PureName,
-                            java.lang.String&nbsp;field2PureName,
-                            int&nbsp;card1,
-                            int&nbsp;card2,
-                            boolean&nbsp;t1pkey,
-                            boolean&nbsp;t2pkey,
-                            java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats,
-                            java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId)</code>
-<div class="block">Estimate the join cardinality of two tables.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#hasPkey-java.util.Vector-">hasPkey</a></span>(java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;joinlist)</code>
-<div class="block">Return true if a primary key field is joined by one of the joins in
- joinlist</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#instantiateJoin-simpledb.LogicalJoinNode-simpledb.DbIterator-simpledb.DbIterator-">instantiateJoin</a></span>(<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&nbsp;lj,
-               <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;plan1,
-               <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;plan2)</code>
-<div class="block">Return best iterator for computing a given logical join, given the
- specified statistics, and the provided left and right subplans.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#isPkey-java.lang.String-java.lang.String-">isPkey</a></span>(java.lang.String&nbsp;tableAlias,
-      java.lang.String&nbsp;field)</code>
-<div class="block">Return true if field is a primary key of the specified table, false
- otherwise</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#orderJoins-java.util.HashMap-java.util.HashMap-boolean-">orderJoins</a></span>(java.util.HashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats,
-          java.util.HashMap&lt;java.lang.String,java.lang.Double&gt;&nbsp;filterSelectivities,
-          boolean&nbsp;explain)</code>
-<div class="block">Compute a logical, reasonably efficient join on the specified tables.</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinOptimizer.html#printJoins-java.util.Vector-simpledb.PlanCache-java.util.HashMap-java.util.HashMap-">printJoins</a></span>(java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;js,
-          <a href="../simpledb/PlanCache.html" title="class in simpledb">PlanCache</a>&nbsp;pc,
-          java.util.HashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats,
-          java.util.HashMap&lt;java.lang.String,java.lang.Double&gt;&nbsp;selectivities)</code>
-<div class="block">Helper function to display a Swing window with a tree representation of
- the specified list of joins.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="p">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>p</h4>
-<pre><a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a> p</pre>
-</li>
-</ul>
-<a name="joins">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>joins</h4>
-<pre>java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt; joins</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="JoinOptimizer-simpledb.LogicalPlan-java.util.Vector-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>JoinOptimizer</h4>
-<pre>public&nbsp;JoinOptimizer(<a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a>&nbsp;p,
-                     java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;joins)</pre>
-<div class="block">Constructor</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>p</code> - the logical plan being optimized</dd>
-<dd><code>joins</code> - the list of joins being performed</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="instantiateJoin-simpledb.LogicalJoinNode-simpledb.DbIterator-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>instantiateJoin</h4>
-<pre>public static&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;instantiateJoin(<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&nbsp;lj,
-                                         <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;plan1,
-                                         <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;plan2)
-                                  throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Return best iterator for computing a given logical join, given the
- specified statistics, and the provided left and right subplans. Note that
- there is insufficient information to determine which plan should be the
- inner/outer here -- because DbIterator's don't provide any cardinality
- estimates, and stats only has information about the base tables. For this
- reason, the plan1</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>lj</code> - The join being considered</dd>
-<dd><code>plan1</code> - The left join node's child</dd>
-<dd><code>plan2</code> - The right join node's child</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="estimateJoinCost-simpledb.LogicalJoinNode-int-int-double-double-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>estimateJoinCost</h4>
-<pre>public&nbsp;double&nbsp;estimateJoinCost(<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&nbsp;j,
-                               int&nbsp;card1,
-                               int&nbsp;card2,
-                               double&nbsp;cost1,
-                               double&nbsp;cost2)</pre>
-<div class="block">Estimate the cost of a join.
- 
- The cost of the join should be calculated based on the join algorithm (or
- algorithms) that you implemented for Lab 2. It should be a function of
- the amount of data that must be read over the course of the query, as
- well as the number of CPU opertions performed by your join. Assume that
- the cost of a single predicate application is roughly 1.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>j</code> - A LogicalJoinNode representing the join operation being
-            performed.</dd>
-<dd><code>card1</code> - Estimated cardinality of the left-hand side of the query</dd>
-<dd><code>card2</code> - Estimated cardinality of the right-hand side of the query</dd>
-<dd><code>cost1</code> - Estimated cost of one full scan of the table on the left-hand
-            side of the query</dd>
-<dd><code>cost2</code> - Estimated cost of one full scan of the table on the right-hand
-            side of the query</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>An estimate of the cost of this query, in terms of cost1 and
-         cost2</dd>
-</dl>
-</li>
-</ul>
-<a name="estimateJoinCardinality-simpledb.LogicalJoinNode-int-int-boolean-boolean-java.util.Map-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>estimateJoinCardinality</h4>
-<pre>public&nbsp;int&nbsp;estimateJoinCardinality(<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&nbsp;j,
-                                   int&nbsp;card1,
-                                   int&nbsp;card2,
-                                   boolean&nbsp;t1pkey,
-                                   boolean&nbsp;t2pkey,
-                                   java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats)</pre>
-<div class="block">Estimate the cardinality of a join. The cardinality of a join is the
- number of tuples produced by the join.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>j</code> - A LogicalJoinNode representing the join operation being
-            performed.</dd>
-<dd><code>card1</code> - Cardinality of the left-hand table in the join</dd>
-<dd><code>card2</code> - Cardinality of the right-hand table in the join</dd>
-<dd><code>t1pkey</code> - Is the left-hand table a primary-key table?</dd>
-<dd><code>t2pkey</code> - Is the right-hand table a primary-key table?</dd>
-<dd><code>stats</code> - The table stats, referenced by table names, not alias</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The cardinality of the join</dd>
-</dl>
-</li>
-</ul>
-<a name="estimateTableJoinCardinality-simpledb.Predicate.Op-java.lang.String-java.lang.String-java.lang.String-java.lang.String-int-int-boolean-boolean-java.util.Map-java.util.Map-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>estimateTableJoinCardinality</h4>
-<pre>public static&nbsp;int&nbsp;estimateTableJoinCardinality(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;joinOp,
-                                               java.lang.String&nbsp;table1Alias,
-                                               java.lang.String&nbsp;table2Alias,
-                                               java.lang.String&nbsp;field1PureName,
-                                               java.lang.String&nbsp;field2PureName,
-                                               int&nbsp;card1,
-                                               int&nbsp;card2,
-                                               boolean&nbsp;t1pkey,
-                                               boolean&nbsp;t2pkey,
-                                               java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats,
-                                               java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId)</pre>
-<div class="block">Estimate the join cardinality of two tables.</div>
-</li>
-</ul>
-<a name="enumerateSubsets-java.util.Vector-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>enumerateSubsets</h4>
-<pre>public&nbsp;&lt;T&gt;&nbsp;java.util.Set&lt;java.util.Set&lt;T&gt;&gt;&nbsp;enumerateSubsets(java.util.Vector&lt;T&gt;&nbsp;v,
-                                                            int&nbsp;size)</pre>
-<div class="block">Helper method to enumerate all of the subsets of a given size of a
- specified vector.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>v</code> - The vector whose subsets are desired</dd>
-<dd><code>size</code> - The size of the subsets of interest</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a set of all subsets of the specified size</dd>
-</dl>
-</li>
-</ul>
-<a name="orderJoins-java.util.HashMap-java.util.HashMap-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>orderJoins</h4>
-<pre>public&nbsp;java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;orderJoins(java.util.HashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats,
-                                                    java.util.HashMap&lt;java.lang.String,java.lang.Double&gt;&nbsp;filterSelectivities,
-                                                    boolean&nbsp;explain)
-                                             throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Compute a logical, reasonably efficient join on the specified tables. See
- PS4 for hints on how this should be implemented.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>stats</code> - Statistics for each table involved in the join, referenced by
-            base table names, not alias</dd>
-<dd><code>filterSelectivities</code> - Selectivities of the filter predicates on each table in the
-            join, referenced by table alias (if no alias, the base table
-            name)</dd>
-<dd><code>explain</code> - Indicates whether your code should explain its query plan or
-            simply execute it</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A Vector<LogicalJoinNode> that stores joins in the left-deep
-         order in which they should be executed.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code> - when stats or filter selectivities is missing a table in the
-             join, or or when another internal error occurs</dd>
-</dl>
-</li>
-</ul>
-<a name="computeCostAndCardOfSubplan-java.util.HashMap-java.util.HashMap-simpledb.LogicalJoinNode-java.util.Set-double-simpledb.PlanCache-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>computeCostAndCardOfSubplan</h4>
-<pre>private&nbsp;<a href="../simpledb/CostCard.html" title="class in simpledb">CostCard</a>&nbsp;computeCostAndCardOfSubplan(java.util.HashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats,
-                                             java.util.HashMap&lt;java.lang.String,java.lang.Double&gt;&nbsp;filterSelectivities,
-                                             <a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&nbsp;joinToRemove,
-                                             java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;joinSet,
-                                             double&nbsp;bestCostSoFar,
-                                             <a href="../simpledb/PlanCache.html" title="class in simpledb">PlanCache</a>&nbsp;pc)
-                                      throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">This is a helper method that computes the cost and cardinality of joining
- joinToRemove to joinSet (joinSet should contain joinToRemove), given that
- all of the subsets of size joinSet.size() - 1 have already been computed
- and stored in PlanCache pc.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>stats</code> - table stats for all of the tables, referenced by table names
-            rather than alias (see <a href="../simpledb/JoinOptimizer.html#orderJoins-java.util.HashMap-java.util.HashMap-boolean-"><code>orderJoins(java.util.HashMap&lt;java.lang.String, simpledb.TableStats&gt;, java.util.HashMap&lt;java.lang.String, java.lang.Double&gt;, boolean)</code></a>)</dd>
-<dd><code>filterSelectivities</code> - the selectivities of the filters over each of the tables
-            (where tables are indentified by their alias or name if no
-            alias is given)</dd>
-<dd><code>joinToRemove</code> - the join to remove from joinSet</dd>
-<dd><code>joinSet</code> - the set of joins being considered</dd>
-<dd><code>bestCostSoFar</code> - the best way to join joinSet so far (minimum of previous
-            invocations of computeCostAndCardOfSubplan for this joinSet,
-            from returned CostCard)</dd>
-<dd><code>pc</code> - the PlanCache for this join; should have subplans for all
-            plans of size joinSet.size()-1</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A <a href="../simpledb/CostCard.html" title="class in simpledb"><code>CostCard</code></a> objects desribing the cost, cardinality,
-         optimal subplan</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code> - when stats, filterSelectivities, or pc object is missing
-             tables involved in join</dd>
-</dl>
-</li>
-</ul>
-<a name="doesJoin-java.util.Vector-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>doesJoin</h4>
-<pre>private&nbsp;boolean&nbsp;doesJoin(java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;joinlist,
-                         java.lang.String&nbsp;table)</pre>
-<div class="block">Return true if the specified table is in the list of joins, false
- otherwise</div>
-</li>
-</ul>
-<a name="isPkey-java.lang.String-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isPkey</h4>
-<pre>private&nbsp;boolean&nbsp;isPkey(java.lang.String&nbsp;tableAlias,
-                       java.lang.String&nbsp;field)</pre>
-<div class="block">Return true if field is a primary key of the specified table, false
- otherwise</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableAlias</code> - The alias of the table in the query</dd>
-<dd><code>field</code> - The pure name of the field</dd>
-</dl>
-</li>
-</ul>
-<a name="hasPkey-java.util.Vector-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasPkey</h4>
-<pre>private&nbsp;boolean&nbsp;hasPkey(java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;joinlist)</pre>
-<div class="block">Return true if a primary key field is joined by one of the joins in
- joinlist</div>
-</li>
-</ul>
-<a name="printJoins-java.util.Vector-simpledb.PlanCache-java.util.HashMap-java.util.HashMap-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>printJoins</h4>
-<pre>private&nbsp;void&nbsp;printJoins(java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;js,
-                        <a href="../simpledb/PlanCache.html" title="class in simpledb">PlanCache</a>&nbsp;pc,
-                        java.util.HashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;stats,
-                        java.util.HashMap&lt;java.lang.String,java.lang.Double&gt;&nbsp;selectivities)</pre>
-<div class="block">Helper function to display a Swing window with a tree representation of
- the specified list of joins. See <a href="../simpledb/JoinOptimizer.html#orderJoins-java.util.HashMap-java.util.HashMap-boolean-"><code>orderJoins(java.util.HashMap&lt;java.lang.String, simpledb.TableStats&gt;, java.util.HashMap&lt;java.lang.String, java.lang.Double&gt;, boolean)</code></a>, which may want to
- call this when the analyze flag is true.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>js</code> - the join plan to visualize</dd>
-<dd><code>pc</code> - the PlanCache accumulated whild building the optimal plan</dd>
-<dd><code>stats</code> - table statistics for base tables</dd>
-<dd><code>selectivities</code> - the selectivities of the filters over each of the tables
-            (where tables are indentified by their alias or name if no
-            alias is given)</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Join.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/JoinPredicate.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/JoinOptimizer.html" target="_top">Frames</a></li>
-<li><a href="JoinOptimizer.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/JoinPredicate.html lab4/javadoc/simpledb/JoinPredicate.html
--- lab3/javadoc/simpledb/JoinPredicate.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/JoinPredicate.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,424 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>JoinPredicate</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="JoinPredicate";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/JoinOptimizer.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogFile.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/JoinPredicate.html" target="_top">Frames</a></li>
-<li><a href="JoinPredicate.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class JoinPredicate" class="title">Class JoinPredicate</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.JoinPredicate</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">JoinPredicate</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">JoinPredicate compares fields of two tuples using a predicate. JoinPredicate
- is most likely used by the Join operator.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.JoinPredicate">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinPredicate.html#field1">field1</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinPredicate.html#field2">field2</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinPredicate.html#op">op</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinPredicate.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/JoinPredicate.html#JoinPredicate-int-simpledb.Predicate.Op-int-">JoinPredicate</a></span>(int&nbsp;field1,
-             <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-             int&nbsp;field2)</code>
-<div class="block">Constructor -- create a new predicate over two fields of two tuples.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinPredicate.html#filter-simpledb.Tuple-simpledb.Tuple-">filter</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t1,
-      <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t2)</code>
-<div class="block">Apply the predicate to the two specified tuples.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinPredicate.html#getField1--">getField1</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinPredicate.html#getField2--">getField2</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/JoinPredicate.html#getOperator--">getOperator</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.JoinPredicate.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="op">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>op</h4>
-<pre>private&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> op</pre>
-</li>
-</ul>
-<a name="field1">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>field1</h4>
-<pre>private&nbsp;int field1</pre>
-</li>
-</ul>
-<a name="field2">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>field2</h4>
-<pre>private&nbsp;int field2</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="JoinPredicate-int-simpledb.Predicate.Op-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>JoinPredicate</h4>
-<pre>public&nbsp;JoinPredicate(int&nbsp;field1,
-                     <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                     int&nbsp;field2)</pre>
-<div class="block">Constructor -- create a new predicate over two fields of two tuples.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>field1</code> - The field index into the first tuple in the predicate</dd>
-<dd><code>field2</code> - The field index into the second tuple in the predicate</dd>
-<dd><code>op</code> - The operation to apply (as defined in Predicate.Op); either
-            Predicate.Op.GREATER_THAN, Predicate.Op.LESS_THAN,
-            Predicate.Op.EQUAL, Predicate.Op.GREATER_THAN_OR_EQ, or
-            Predicate.Op.LESS_THAN_OR_EQ</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Predicate.html" title="class in simpledb"><code>Predicate</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="filter-simpledb.Tuple-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>filter</h4>
-<pre>public&nbsp;boolean&nbsp;filter(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t1,
-                      <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t2)</pre>
-<div class="block">Apply the predicate to the two specified tuples. The comparison can be
- made through Field's compare method.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if the tuples satisfy the predicate.</dd>
-</dl>
-</li>
-</ul>
-<a name="getField1--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getField1</h4>
-<pre>public&nbsp;int&nbsp;getField1()</pre>
-</li>
-</ul>
-<a name="getField2--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getField2</h4>
-<pre>public&nbsp;int&nbsp;getField2()</pre>
-</li>
-</ul>
-<a name="getOperator--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getOperator</h4>
-<pre>public&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;getOperator()</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/JoinOptimizer.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogFile.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/JoinPredicate.html" target="_top">Frames</a></li>
-<li><a href="JoinPredicate.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/LogFile.html lab4/javadoc/simpledb/LogFile.html
--- lab3/javadoc/simpledb/LogFile.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/LogFile.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,874 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>LogFile</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="LogFile";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/JoinPredicate.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalFilterNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogFile.html" target="_top">Frames</a></li>
-<li><a href="LogFile.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class LogFile" class="title">Class LogFile</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.LogFile</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">LogFile</span>
-extends java.lang.Object</pre>
-<div class="block"><p> The format of the log file is as follows:
-
-<ul>
-
-<li> The first long integer of the file represents the offset of the
-last written checkpoint, or -1 if there are no checkpoints
-
-<li> All additional data in the log consists of log records.  Log
-records are variable length.
-
-<li> Each log record begins with an integer type and a long integer
-transaction id.
-
-<li> Each log record ends with a long integer file offset representing
-the position in the log file where the record began.
-
-<li> There are five record types: ABORT, COMMIT, UPDATE, BEGIN, and
-CHECKPOINT
-
-<li> ABORT, COMMIT, and BEGIN records contain no additional data
-
-<li>UPDATE RECORDS consist of two entries, a before image and an
-after image.  These images are serialized Page objects, and can be
-accessed with the LogFile.readPageData() and LogFile.writePageData()
-methods.  See LogFile.print() for an example.
-
-<li> CHECKPOINT records consist of active transactions at the time
-the checkpoint was taken and their first log record on disk.  The format
-of the record is an integer count of the number of transactions, as well
-as a long integer transaction id and a long integer first record offset
-for each active transaction.
-
-</ul></div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#ABORT_RECORD">ABORT_RECORD</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#BEGIN_RECORD">BEGIN_RECORD</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#CHECKPOINT_RECORD">CHECKPOINT_RECORD</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#COMMIT_RECORD">COMMIT_RECORD</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#currentOffset">currentOffset</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#INT_SIZE">INT_SIZE</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.io.File</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#logFile">logFile</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#LONG_SIZE">LONG_SIZE</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#NO_CHECKPOINT_ID">NO_CHECKPOINT_ID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.io.RandomAccessFile</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#raf">raf</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.lang.Boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#recoveryUndecided">recoveryUndecided</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.util.HashMap&lt;java.lang.Long,java.lang.Long&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#tidToFirstLogRecord">tidToFirstLogRecord</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#totalRecords">totalRecords</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#UPDATE_RECORD">UPDATE_RECORD</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#LogFile-java.io.File-">LogFile</a></span>(java.io.File&nbsp;f)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#force--">force</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#getTotalRecords--">getTotalRecords</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#logAbort-simpledb.TransactionId-">logAbort</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Write an abort record to the log for the specified tid, force
-        the log to disk, and perform a rollback</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#logCheckpoint--">logCheckpoint</a></span>()</code>
-<div class="block">Checkpoint the log and write a checkpoint record.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#logCommit-simpledb.TransactionId-">logCommit</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Write a commit record to disk for the specified tid,
-        and force the log to disk.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#logTruncate--">logTruncate</a></span>()</code>
-<div class="block">Truncate any unneeded portion of the log to reduce its space
-        consumption</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#logWrite-simpledb.TransactionId-simpledb.Page-simpledb.Page-">logWrite</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-        <a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;before,
-        <a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;after)</code>
-<div class="block">Write an UPDATE record to disk for the specified tid and page
-        (with provided         before and after images.)</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#logXactionBegin-simpledb.TransactionId-">logXactionBegin</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Write a BEGIN record for the specified transaction</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>(package private) void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#preAppend--">preAppend</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#print--">print</a></span>()</code>
-<div class="block">Print out a human readable represenation of the log</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#readPageData-java.io.RandomAccessFile-">readPageData</a></span>(java.io.RandomAccessFile&nbsp;raf)</code>&nbsp;</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#recover--">recover</a></span>()</code>
-<div class="block">Recover the database system by ensuring that the updates of
-        committed transactions are installed and that the
-        updates of uncommitted transactions are not installed.</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#rollback-simpledb.TransactionId-">rollback</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Rollback the specified transaction, setting the state of any
-        of pages it updated to their pre-updated state.</div>
-</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#shutdown--">shutdown</a></span>()</code>
-<div class="block">Shutdown the logging system, writing out whatever state
-        is necessary so that start up can happen quickly (without
-        extensive recovery.)</div>
-</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>(package private) void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogFile.html#writePageData-java.io.RandomAccessFile-simpledb.Page-">writePageData</a></span>(java.io.RandomAccessFile&nbsp;raf,
-             <a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;p)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="logFile">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>logFile</h4>
-<pre>final&nbsp;java.io.File logFile</pre>
-</li>
-</ul>
-<a name="raf">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>raf</h4>
-<pre>private&nbsp;java.io.RandomAccessFile raf</pre>
-</li>
-</ul>
-<a name="recoveryUndecided">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>recoveryUndecided</h4>
-<pre>java.lang.Boolean recoveryUndecided</pre>
-</li>
-</ul>
-<a name="ABORT_RECORD">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>ABORT_RECORD</h4>
-<pre>static final&nbsp;int ABORT_RECORD</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.LogFile.ABORT_RECORD">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="COMMIT_RECORD">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>COMMIT_RECORD</h4>
-<pre>static final&nbsp;int COMMIT_RECORD</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.LogFile.COMMIT_RECORD">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="UPDATE_RECORD">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>UPDATE_RECORD</h4>
-<pre>static final&nbsp;int UPDATE_RECORD</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.LogFile.UPDATE_RECORD">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="BEGIN_RECORD">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>BEGIN_RECORD</h4>
-<pre>static final&nbsp;int BEGIN_RECORD</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.LogFile.BEGIN_RECORD">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="CHECKPOINT_RECORD">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>CHECKPOINT_RECORD</h4>
-<pre>static final&nbsp;int CHECKPOINT_RECORD</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.LogFile.CHECKPOINT_RECORD">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="NO_CHECKPOINT_ID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>NO_CHECKPOINT_ID</h4>
-<pre>static final&nbsp;long NO_CHECKPOINT_ID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.LogFile.NO_CHECKPOINT_ID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="INT_SIZE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>INT_SIZE</h4>
-<pre>static final&nbsp;int INT_SIZE</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.LogFile.INT_SIZE">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="LONG_SIZE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>LONG_SIZE</h4>
-<pre>static final&nbsp;int LONG_SIZE</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.LogFile.LONG_SIZE">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="currentOffset">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>currentOffset</h4>
-<pre>long currentOffset</pre>
-</li>
-</ul>
-<a name="totalRecords">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>totalRecords</h4>
-<pre>int totalRecords</pre>
-</li>
-</ul>
-<a name="tidToFirstLogRecord">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>tidToFirstLogRecord</h4>
-<pre>java.util.HashMap&lt;java.lang.Long,java.lang.Long&gt; tidToFirstLogRecord</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="LogFile-java.io.File-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>LogFile</h4>
-<pre>public&nbsp;LogFile(java.io.File&nbsp;f)
-        throws java.io.IOException</pre>
-<div class="block">Constructor.
-        Initialize and back the log file with the specified file.
-        We're not sure yet whether the caller is creating a brand new DB,
-        in which case we should ignore the log file, or whether the caller
-        will eventually want to recover (after populating the Catalog).
-        So we make this decision lazily: if someone calls recover(), then
-        do it, while if someone starts adding log file entries, then first
-        throw out the initial log file contents.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>f</code> - The log file's name</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="preAppend--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>preAppend</h4>
-<pre>void&nbsp;preAppend()
-        throws java.io.IOException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="getTotalRecords--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTotalRecords</h4>
-<pre>public&nbsp;int&nbsp;getTotalRecords()</pre>
-</li>
-</ul>
-<a name="logAbort-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>logAbort</h4>
-<pre>public&nbsp;void&nbsp;logAbort(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)
-              throws java.io.IOException</pre>
-<div class="block">Write an abort record to the log for the specified tid, force
-        the log to disk, and perform a rollback</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The aborting transaction.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="logCommit-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>logCommit</h4>
-<pre>public&nbsp;void&nbsp;logCommit(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)
-               throws java.io.IOException</pre>
-<div class="block">Write a commit record to disk for the specified tid,
-        and force the log to disk.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The committing transaction.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="logWrite-simpledb.TransactionId-simpledb.Page-simpledb.Page-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>logWrite</h4>
-<pre>public&nbsp;void&nbsp;logWrite(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                     <a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;before,
-                     <a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;after)
-              throws java.io.IOException</pre>
-<div class="block">Write an UPDATE record to disk for the specified tid and page
-        (with provided         before and after images.)</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The transaction performing the write</dd>
-<dd><code>before</code> - The before image of the page</dd>
-<dd><code>after</code> - The after image of the page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Page.html#getBeforeImage--"><code>Page.getBeforeImage()</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="writePageData-java.io.RandomAccessFile-simpledb.Page-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>writePageData</h4>
-<pre>void&nbsp;writePageData(java.io.RandomAccessFile&nbsp;raf,
-                   <a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;p)
-            throws java.io.IOException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="readPageData-java.io.RandomAccessFile-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>readPageData</h4>
-<pre><a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;readPageData(java.io.RandomAccessFile&nbsp;raf)
-           throws java.io.IOException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="logXactionBegin-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>logXactionBegin</h4>
-<pre>public&nbsp;void&nbsp;logXactionBegin(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)
-                     throws java.io.IOException</pre>
-<div class="block">Write a BEGIN record for the specified transaction</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The transaction that is beginning</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="logCheckpoint--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>logCheckpoint</h4>
-<pre>public&nbsp;void&nbsp;logCheckpoint()
-                   throws java.io.IOException</pre>
-<div class="block">Checkpoint the log and write a checkpoint record.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="logTruncate--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>logTruncate</h4>
-<pre>public&nbsp;void&nbsp;logTruncate()
-                 throws java.io.IOException</pre>
-<div class="block">Truncate any unneeded portion of the log to reduce its space
-        consumption</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="rollback-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rollback</h4>
-<pre>public&nbsp;void&nbsp;rollback(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)
-              throws java.util.NoSuchElementException,
-                     java.io.IOException</pre>
-<div class="block">Rollback the specified transaction, setting the state of any
-        of pages it updated to their pre-updated state.  To preserve
-        transaction semantics, this should not be called on
-        transactions that have already committed (though this may not
-        be enforced by this method.)</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The transaction to rollback</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="shutdown--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>shutdown</h4>
-<pre>public&nbsp;void&nbsp;shutdown()</pre>
-<div class="block">Shutdown the logging system, writing out whatever state
-        is necessary so that start up can happen quickly (without
-        extensive recovery.)</div>
-</li>
-</ul>
-<a name="recover--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>recover</h4>
-<pre>public&nbsp;void&nbsp;recover()
-             throws java.io.IOException</pre>
-<div class="block">Recover the database system by ensuring that the updates of
-        committed transactions are installed and that the
-        updates of uncommitted transactions are not installed.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="print--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>print</h4>
-<pre>public&nbsp;void&nbsp;print()
-           throws java.io.IOException</pre>
-<div class="block">Print out a human readable represenation of the log</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="force--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>force</h4>
-<pre>public&nbsp;void&nbsp;force()
-           throws java.io.IOException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/JoinPredicate.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalFilterNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogFile.html" target="_top">Frames</a></li>
-<li><a href="LogFile.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/LogicalFilterNode.html lab4/javadoc/simpledb/LogicalFilterNode.html
--- lab3/javadoc/simpledb/LogicalFilterNode.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/LogicalFilterNode.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,341 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>LogicalFilterNode</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="LogicalFilterNode";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogFile.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalFilterNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalFilterNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class LogicalFilterNode" class="title">Class LogicalFilterNode</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.LogicalFilterNode</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">LogicalFilterNode</span>
-extends java.lang.Object</pre>
-<div class="block">A LogicalFilterNode represents the parameters of a filter in the WHERE clause of a query. 
-    <p>
-    Filter is of the form t.f p c
-    <p>
-    Where t is a table, f is a field in t, p is a predicate, and c is a constant</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalFilterNode.html#c">c</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalFilterNode.html#fieldPureName">fieldPureName</a></span></code>
-<div class="block">The field from t which is in the filter.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalFilterNode.html#fieldQuantifiedName">fieldQuantifiedName</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalFilterNode.html#p">p</a></span></code>
-<div class="block">The predicate in the filter</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalFilterNode.html#tableAlias">tableAlias</a></span></code>
-<div class="block">The alias of a table (or the name if no alias) over which the filter ranges</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/LogicalFilterNode.html#LogicalFilterNode-java.lang.String-java.lang.String-simpledb.Predicate.Op-java.lang.String-">LogicalFilterNode</a></span>(java.lang.String&nbsp;table,
-                 java.lang.String&nbsp;field,
-                 <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred,
-                 java.lang.String&nbsp;constant)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="tableAlias">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tableAlias</h4>
-<pre>public&nbsp;java.lang.String tableAlias</pre>
-<div class="block">The alias of a table (or the name if no alias) over which the filter ranges</div>
-</li>
-</ul>
-<a name="p">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>p</h4>
-<pre>public&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> p</pre>
-<div class="block">The predicate in the filter</div>
-</li>
-</ul>
-<a name="c">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>c</h4>
-<pre>public&nbsp;java.lang.String c</pre>
-</li>
-</ul>
-<a name="fieldPureName">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fieldPureName</h4>
-<pre>public&nbsp;java.lang.String fieldPureName</pre>
-<div class="block">The field from t which is in the filter. The pure name, without alias or tablename</div>
-</li>
-</ul>
-<a name="fieldQuantifiedName">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>fieldQuantifiedName</h4>
-<pre>public&nbsp;java.lang.String fieldQuantifiedName</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="LogicalFilterNode-java.lang.String-java.lang.String-simpledb.Predicate.Op-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>LogicalFilterNode</h4>
-<pre>public&nbsp;LogicalFilterNode(java.lang.String&nbsp;table,
-                         java.lang.String&nbsp;field,
-                         <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred,
-                         java.lang.String&nbsp;constant)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogFile.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalFilterNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalFilterNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/LogicalJoinNode.html lab4/javadoc/simpledb/LogicalJoinNode.html
--- lab3/javadoc/simpledb/LogicalJoinNode.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/LogicalJoinNode.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,478 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>LogicalJoinNode</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="LogicalJoinNode";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalFilterNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalPlan.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalJoinNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalJoinNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class LogicalJoinNode" class="title">Class LogicalJoinNode</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.LogicalJoinNode</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>Direct Known Subclasses:</dt>
-<dd><a href="../simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">LogicalJoinNode</span>
-extends java.lang.Object</pre>
-<div class="block">A LogicalJoinNode represens the state needed of a join of two
- tables in a LogicalQueryPlan</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#f1PureName">f1PureName</a></span></code>
-<div class="block">The name of the field in t1 to join with.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#f1QuantifiedName">f1QuantifiedName</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#f2PureName">f2PureName</a></span></code>
-<div class="block">The name of the field in t2 to join with.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#f2QuantifiedName">f2QuantifiedName</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#p">p</a></span></code>
-<div class="block">The join predicate</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#t1Alias">t1Alias</a></span></code>
-<div class="block">The first table to join (may be null).</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#t2Alias">t2Alias</a></span></code>
-<div class="block">The second table to join (may be null).</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#LogicalJoinNode--">LogicalJoinNode</a></span>()</code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#LogicalJoinNode-java.lang.String-java.lang.String-java.lang.String-java.lang.String-simpledb.Predicate.Op-">LogicalJoinNode</a></span>(java.lang.String&nbsp;table1,
-               java.lang.String&nbsp;table2,
-               java.lang.String&nbsp;joinField1,
-               java.lang.String&nbsp;joinField2,
-               <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;o)</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#hashCode--">hashCode</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#swapInnerOuter--">swapInnerOuter</a></span>()</code>
-<div class="block">Return a new LogicalJoinNode with the inner and outer (t1.f1
- and t2.f2) tables swapped.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalJoinNode.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="t1Alias">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>t1Alias</h4>
-<pre>public&nbsp;java.lang.String t1Alias</pre>
-<div class="block">The first table to join (may be null). It's the alias of the table (if no alias, the true table name)</div>
-</li>
-</ul>
-<a name="t2Alias">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>t2Alias</h4>
-<pre>public&nbsp;java.lang.String t2Alias</pre>
-<div class="block">The second table to join (may be null).  It's the alias of the table, (if no alias, the true table name).</div>
-</li>
-</ul>
-<a name="f1PureName">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>f1PureName</h4>
-<pre>public&nbsp;java.lang.String f1PureName</pre>
-<div class="block">The name of the field in t1 to join with. It's the pure name of a field, rather that alias.field.</div>
-</li>
-</ul>
-<a name="f1QuantifiedName">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>f1QuantifiedName</h4>
-<pre>public&nbsp;java.lang.String f1QuantifiedName</pre>
-</li>
-</ul>
-<a name="f2PureName">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>f2PureName</h4>
-<pre>public&nbsp;java.lang.String f2PureName</pre>
-<div class="block">The name of the field in t2 to join with. It's the pure name of a field.</div>
-</li>
-</ul>
-<a name="f2QuantifiedName">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>f2QuantifiedName</h4>
-<pre>public&nbsp;java.lang.String f2QuantifiedName</pre>
-</li>
-</ul>
-<a name="p">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>p</h4>
-<pre>public&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> p</pre>
-<div class="block">The join predicate</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="LogicalJoinNode--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>LogicalJoinNode</h4>
-<pre>public&nbsp;LogicalJoinNode()</pre>
-</li>
-</ul>
-<a name="LogicalJoinNode-java.lang.String-java.lang.String-java.lang.String-java.lang.String-simpledb.Predicate.Op-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>LogicalJoinNode</h4>
-<pre>public&nbsp;LogicalJoinNode(java.lang.String&nbsp;table1,
-                       java.lang.String&nbsp;table2,
-                       java.lang.String&nbsp;joinField1,
-                       java.lang.String&nbsp;joinField2,
-                       <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="swapInnerOuter--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>swapInnerOuter</h4>
-<pre>public&nbsp;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&nbsp;swapInnerOuter()</pre>
-<div class="block">Return a new LogicalJoinNode with the inner and outer (t1.f1
- and t2.f2) tables swapped.</div>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;o)</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>public&nbsp;int&nbsp;hashCode()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalFilterNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalPlan.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalJoinNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalJoinNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/LogicalPlan.html lab4/javadoc/simpledb/LogicalPlan.html
--- lab3/javadoc/simpledb/LogicalPlan.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/LogicalPlan.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,862 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>LogicalPlan</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="LogicalPlan";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":9,"i9":10,"i10":10,"i11":10,"i12":9,"i13":10,"i14":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalScanNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalPlan.html" target="_top">Frames</a></li>
-<li><a href="LogicalPlan.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class LogicalPlan" class="title">Class LogicalPlan</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.LogicalPlan</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">LogicalPlan</span>
-extends java.lang.Object</pre>
-<div class="block">LogicalPlan represents a logical query plan that has been through
- the parser and is ready to be processed by the optimizer.
- <p>
- A LogicalPlan consits of a collection of table scan nodes, join
- nodes, filter nodes, a select list, and a group by field.
- LogicalPlans can only represent queries with one aggregation field
- and one group by field.
- <p>
- LogicalPlans can be converted to physical (optimized) plans using
- the <a href="../simpledb/LogicalPlan.html#physicalPlan-simpledb.TransactionId-java.util.Map-boolean-"><code>physicalPlan(simpledb.TransactionId, java.util.Map&lt;java.lang.String, simpledb.TableStats&gt;, boolean)</code></a> method, which uses the
- <a href="../simpledb/JoinOptimizer.html" title="class in simpledb"><code>JoinOptimizer</code></a> to order joins optimally and to select the
- best implementations for joins.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#aggField">aggField</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#aggOp">aggOp</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.util.Vector&lt;<a href="../simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#filters">filters</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#groupByField">groupByField</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#hasAgg">hasAgg</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#hasOrderBy">hasOrderBy</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#joins">joins</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#oByAsc">oByAsc</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#oByField">oByField</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#query">query</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.util.Vector&lt;<a href="../simpledb/LogicalSelectListNode.html" title="class in simpledb">LogicalSelectListNode</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#selectList">selectList</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.util.HashMap&lt;java.lang.String,<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#subplanMap">subplanMap</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.util.HashMap&lt;java.lang.String,java.lang.Integer&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#tableMap">tableMap</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.util.Vector&lt;<a href="../simpledb/LogicalScanNode.html" title="class in simpledb">LogicalScanNode</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#tables">tables</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#LogicalPlan--">LogicalPlan</a></span>()</code>
-<div class="block">Constructor -- generate an empty logical plan</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#addAggregate-java.lang.String-java.lang.String-java.lang.String-">addAggregate</a></span>(java.lang.String&nbsp;op,
-            java.lang.String&nbsp;afield,
-            java.lang.String&nbsp;gfield)</code>
-<div class="block">Add an aggregate over the field with the specified grouping to
-        the query.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#addFilter-java.lang.String-simpledb.Predicate.Op-java.lang.String-">addFilter</a></span>(java.lang.String&nbsp;field,
-         <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;p,
-         java.lang.String&nbsp;constantValue)</code>
-<div class="block">Add a new filter to the logical plan</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#addJoin-java.lang.String-simpledb.DbIterator-simpledb.Predicate.Op-">addJoin</a></span>(java.lang.String&nbsp;joinField1,
-       <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;joinField2,
-       <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred)</code>
-<div class="block">Add a join between a field and a subquery.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#addJoin-java.lang.String-java.lang.String-simpledb.Predicate.Op-">addJoin</a></span>(java.lang.String&nbsp;joinField1,
-       java.lang.String&nbsp;joinField2,
-       <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred)</code>
-<div class="block">Add a join between two fields of two different tables.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#addOrderBy-java.lang.String-boolean-">addOrderBy</a></span>(java.lang.String&nbsp;field,
-          boolean&nbsp;asc)</code>
-<div class="block">Add an ORDER BY expression in the specified order on the specified field.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#addProjectField-java.lang.String-java.lang.String-">addProjectField</a></span>(java.lang.String&nbsp;fname,
-               java.lang.String&nbsp;aggOp)</code>
-<div class="block">Add a specified field/aggregate combination to the select list of the query.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#addScan-int-java.lang.String-">addScan</a></span>(int&nbsp;table,
-       java.lang.String&nbsp;name)</code>
-<div class="block">Add a scan to the plan.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>(package private) java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#disambiguateName-java.lang.String-">disambiguateName</a></span>(java.lang.String&nbsp;name)</code>
-<div class="block">Given a name of a field, try to figure out what table it belongs to by looking
-   through all of the tables added via <a href="../simpledb/LogicalPlan.html#addScan-int-java.lang.String-"><code>addScan(int, java.lang.String)</code></a>.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>(package private) static <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#getAggOp-java.lang.String-">getAggOp</a></span>(java.lang.String&nbsp;s)</code>
-<div class="block">Convert the aggregate operator name s into an Aggregator.op operation.</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#getQuery--">getQuery</a></span>()</code>
-<div class="block">Get the query text associated with this plan via <a href="../simpledb/LogicalPlan.html#setQuery-java.lang.String-"><code>setQuery(java.lang.String)</code></a>.</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>java.util.HashMap&lt;java.lang.String,java.lang.Integer&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#getTableAliasToIdMapping--">getTableAliasToIdMapping</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>java.lang.Integer</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#getTableId-java.lang.String-">getTableId</a></span>(java.lang.String&nbsp;alias)</code>
-<div class="block">Given a table alias, return id of the table object (this id can be supplied to <a href="../simpledb/Catalog.html#getDatabaseFile-int-"><code>Catalog.getDatabaseFile(int)</code></a>).</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#main-java.lang.String:A-">main</a></span>(java.lang.String[]&nbsp;argv)</code>&nbsp;</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#physicalPlan-simpledb.TransactionId-java.util.Map-boolean-">physicalPlan</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t,
-            java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;baseTableStats,
-            boolean&nbsp;explain)</code>
-<div class="block">Convert this LogicalPlan into a physicalPlan represented by a <a href="../simpledb/DbIterator.html" title="interface in simpledb"><code>DbIterator</code></a>.</div>
-</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalPlan.html#setQuery-java.lang.String-">setQuery</a></span>(java.lang.String&nbsp;query)</code>
-<div class="block">Set the text of the query representing this logical plan.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="joins">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>joins</h4>
-<pre>private&nbsp;java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt; joins</pre>
-</li>
-</ul>
-<a name="tables">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tables</h4>
-<pre>private&nbsp;java.util.Vector&lt;<a href="../simpledb/LogicalScanNode.html" title="class in simpledb">LogicalScanNode</a>&gt; tables</pre>
-</li>
-</ul>
-<a name="filters">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>filters</h4>
-<pre>private&nbsp;java.util.Vector&lt;<a href="../simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a>&gt; filters</pre>
-</li>
-</ul>
-<a name="subplanMap">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>subplanMap</h4>
-<pre>private&nbsp;java.util.HashMap&lt;java.lang.String,<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&gt; subplanMap</pre>
-</li>
-</ul>
-<a name="tableMap">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tableMap</h4>
-<pre>private&nbsp;java.util.HashMap&lt;java.lang.String,java.lang.Integer&gt; tableMap</pre>
-</li>
-</ul>
-<a name="selectList">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>selectList</h4>
-<pre>private&nbsp;java.util.Vector&lt;<a href="../simpledb/LogicalSelectListNode.html" title="class in simpledb">LogicalSelectListNode</a>&gt; selectList</pre>
-</li>
-</ul>
-<a name="groupByField">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>groupByField</h4>
-<pre>private&nbsp;java.lang.String groupByField</pre>
-</li>
-</ul>
-<a name="hasAgg">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasAgg</h4>
-<pre>private&nbsp;boolean hasAgg</pre>
-</li>
-</ul>
-<a name="aggOp">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>aggOp</h4>
-<pre>private&nbsp;java.lang.String aggOp</pre>
-</li>
-</ul>
-<a name="aggField">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>aggField</h4>
-<pre>private&nbsp;java.lang.String aggField</pre>
-</li>
-</ul>
-<a name="oByAsc">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>oByAsc</h4>
-<pre>private&nbsp;boolean oByAsc</pre>
-</li>
-</ul>
-<a name="hasOrderBy">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasOrderBy</h4>
-<pre>private&nbsp;boolean hasOrderBy</pre>
-</li>
-</ul>
-<a name="oByField">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>oByField</h4>
-<pre>private&nbsp;java.lang.String oByField</pre>
-</li>
-</ul>
-<a name="query">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>query</h4>
-<pre>private&nbsp;java.lang.String query</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="LogicalPlan--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>LogicalPlan</h4>
-<pre>public&nbsp;LogicalPlan()</pre>
-<div class="block">Constructor -- generate an empty logical plan</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="setQuery-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setQuery</h4>
-<pre>public&nbsp;void&nbsp;setQuery(java.lang.String&nbsp;query)</pre>
-<div class="block">Set the text of the query representing this logical plan.  Does NOT parse the
-        specified query -- this method is just used so that the object can print the
-        SQL it represents.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>query</code> - the text of the query associated with this plan</dd>
-</dl>
-</li>
-</ul>
-<a name="getQuery--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getQuery</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getQuery()</pre>
-<div class="block">Get the query text associated with this plan via <a href="../simpledb/LogicalPlan.html#setQuery-java.lang.String-"><code>setQuery(java.lang.String)</code></a>.</div>
-</li>
-</ul>
-<a name="getTableId-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableId</h4>
-<pre>public&nbsp;java.lang.Integer&nbsp;getTableId(java.lang.String&nbsp;alias)</pre>
-<div class="block">Given a table alias, return id of the table object (this id can be supplied to <a href="../simpledb/Catalog.html#getDatabaseFile-int-"><code>Catalog.getDatabaseFile(int)</code></a>).
-        Aliases are added as base tables are added via <a href="../simpledb/LogicalPlan.html#addScan-int-java.lang.String-"><code>addScan(int, java.lang.String)</code></a>.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>alias</code> - the table alias to return a table id for</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the id of the table corresponding to alias, or null if the alias is unknown</dd>
-</dl>
-</li>
-</ul>
-<a name="getTableAliasToIdMapping--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableAliasToIdMapping</h4>
-<pre>public&nbsp;java.util.HashMap&lt;java.lang.String,java.lang.Integer&gt;&nbsp;getTableAliasToIdMapping()</pre>
-</li>
-</ul>
-<a name="addFilter-java.lang.String-simpledb.Predicate.Op-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addFilter</h4>
-<pre>public&nbsp;void&nbsp;addFilter(java.lang.String&nbsp;field,
-                      <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;p,
-                      java.lang.String&nbsp;constantValue)
-               throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Add a new filter to the logical plan</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>field</code> - The name of the over which the filter applies;
-   this can be a fully qualified field (tablename.field or
-   alias.field), or can be a unique field name without a
-   tablename qualifier.  If it is an ambiguous name, it will
-   throw a ParsingException</dd>
-<dd><code>p</code> - The predicate for the filter</dd>
-<dd><code>constantValue</code> - the constant to compare the predicate
-   against; if field is an integer field, this should be a
-   String representing an integer</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code> - if field is not in one of the tables
-   added via <a href="../simpledb/LogicalPlan.html#addScan-int-java.lang.String-"><code>addScan(int, java.lang.String)</code></a> or if field is ambiguous (e.g., two
-   tables contain a field named field.)</dd>
-</dl>
-</li>
-</ul>
-<a name="addJoin-java.lang.String-java.lang.String-simpledb.Predicate.Op-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addJoin</h4>
-<pre>public&nbsp;void&nbsp;addJoin(java.lang.String&nbsp;joinField1,
-                    java.lang.String&nbsp;joinField2,
-                    <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred)
-             throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Add a join between two fields of two different tables.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>joinField1</code> - The name of the first join field; this can
-  be a fully qualified name (e.g., tableName.field or
-  alias.field) or may be an unqualified unique field name.  If
-  the name is ambiguous or unknown, a ParsingException will be
-  thrown.</dd>
-<dd><code>joinField2</code> - The name of the second join field</dd>
-<dd><code>pred</code> - The join predicate</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code> - if either of the fields is ambiguous,
-      or is not in one of the tables added via <a href="../simpledb/LogicalPlan.html#addScan-int-java.lang.String-"><code>addScan(int, java.lang.String)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="addJoin-java.lang.String-simpledb.DbIterator-simpledb.Predicate.Op-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addJoin</h4>
-<pre>public&nbsp;void&nbsp;addJoin(java.lang.String&nbsp;joinField1,
-                    <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;joinField2,
-                    <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred)
-             throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Add a join between a field and a subquery.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>joinField1</code> - The name of the first join field; this can
-  be a fully qualified name (e.g., tableName.field or
-  alias.field) or may be an unqualified unique field name.  If
-  the name is ambiguous or unknown, a ParsingException will be
-  thrown.</dd>
-<dd><code>joinField2</code> - the subquery to join with -- the join field
-    of the subquery is the first field in the result set of the query</dd>
-<dd><code>pred</code> - The join predicate.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code> - if either of the fields is ambiguous,
-      or is not in one of the tables added via <a href="../simpledb/LogicalPlan.html#addScan-int-java.lang.String-"><code>addScan(int, java.lang.String)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="addScan-int-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addScan</h4>
-<pre>public&nbsp;void&nbsp;addScan(int&nbsp;table,
-                    java.lang.String&nbsp;name)</pre>
-<div class="block">Add a scan to the plan. One scan node needs to be added for each alias of a table
-        accessed by the plan.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>table</code> - the id of the table accessed by the plan (can be resolved to a DbFile using <a href="../simpledb/Catalog.html#getDatabaseFile-int-"><code>Catalog.getDatabaseFile(int)</code></a></dd>
-<dd><code>name</code> - the alias of the table in the plan</dd>
-</dl>
-</li>
-</ul>
-<a name="addProjectField-java.lang.String-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addProjectField</h4>
-<pre>public&nbsp;void&nbsp;addProjectField(java.lang.String&nbsp;fname,
-                            java.lang.String&nbsp;aggOp)
-                     throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Add a specified field/aggregate combination to the select list of the query.
-        Fields are output by the query such that the rightmost field is the first added via addProjectField.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>fname</code> - the field to add to the output</dd>
-<dd><code>aggOp</code> - the aggregate operation over the field.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="addAggregate-java.lang.String-java.lang.String-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addAggregate</h4>
-<pre>public&nbsp;void&nbsp;addAggregate(java.lang.String&nbsp;op,
-                         java.lang.String&nbsp;afield,
-                         java.lang.String&nbsp;gfield)
-                  throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Add an aggregate over the field with the specified grouping to
-        the query.  SimpleDb only supports a single aggregate
-        expression and GROUP BY field.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>op</code> - the aggregation operator</dd>
-<dd><code>afield</code> - the field to aggregate over</dd>
-<dd><code>gfield</code> - the field to group by</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="addOrderBy-java.lang.String-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addOrderBy</h4>
-<pre>public&nbsp;void&nbsp;addOrderBy(java.lang.String&nbsp;field,
-                       boolean&nbsp;asc)
-                throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Add an ORDER BY expression in the specified order on the specified field.  SimpleDb only supports
-        a single ORDER BY field.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>field</code> - the field to order by</dd>
-<dd><code>asc</code> - true if should be ordered in ascending order, false for descending order</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="disambiguateName-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>disambiguateName</h4>
-<pre>java.lang.String&nbsp;disambiguateName(java.lang.String&nbsp;name)
-                           throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Given a name of a field, try to figure out what table it belongs to by looking
-   through all of the tables added via <a href="../simpledb/LogicalPlan.html#addScan-int-java.lang.String-"><code>addScan(int, java.lang.String)</code></a>.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A fully qualified name of the form tableAlias.name.  If the name parameter is already qualified
-   with a table name, simply returns name.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code> - if the field cannot be found in any of the tables, or if the
-   field is ambiguous (appears in multiple tables)</dd>
-</dl>
-</li>
-</ul>
-<a name="getAggOp-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getAggOp</h4>
-<pre>static&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;getAggOp(java.lang.String&nbsp;s)
-                       throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Convert the aggregate operator name s into an Aggregator.op operation.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code> - if s is not a valid operator name</dd>
-</dl>
-</li>
-</ul>
-<a name="physicalPlan-simpledb.TransactionId-java.util.Map-boolean-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>physicalPlan</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;physicalPlan(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t,
-                               java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;baseTableStats,
-                               boolean&nbsp;explain)
-                        throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<div class="block">Convert this LogicalPlan into a physicalPlan represented by a <a href="../simpledb/DbIterator.html" title="interface in simpledb"><code>DbIterator</code></a>.  Attempts to
-   find the optimal plan by using <a href="../simpledb/JoinOptimizer.html#orderJoins-java.util.HashMap-java.util.HashMap-boolean-"><code>JoinOptimizer.orderJoins(java.util.HashMap&lt;java.lang.String, simpledb.TableStats&gt;, java.util.HashMap&lt;java.lang.String, java.lang.Double&gt;, boolean)</code></a> to order the joins in the plan.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>t</code> - The transaction that the returned DbIterator will run as a part of</dd>
-<dd><code>baseTableStats</code> - a HashMap providing a <a href="../simpledb/TableStats.html" title="class in simpledb"><code>TableStats</code></a>
-    object for each table used in the LogicalPlan.  This should
-    have one entry for each table referenced by the plan, not one
-    entry for each table alias (so a table t aliases as t1 and
-    t2 would have just one entry with key 't' in this HashMap).</dd>
-<dd><code>explain</code> - flag indicating whether output visualizing the physical
-    query plan should be given.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A DbIterator representing this plan.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code> - if the logical plan is not valid</dd>
-</dl>
-</li>
-</ul>
-<a name="main-java.lang.String:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>main</h4>
-<pre>public static&nbsp;void&nbsp;main(java.lang.String[]&nbsp;argv)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalScanNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalPlan.html" target="_top">Frames</a></li>
-<li><a href="LogicalPlan.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/LogicalScanNode.html lab4/javadoc/simpledb/LogicalScanNode.html
--- lab3/javadoc/simpledb/LogicalScanNode.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/LogicalScanNode.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,294 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>LogicalScanNode</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="LogicalScanNode";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalPlan.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalSelectListNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalScanNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalScanNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class LogicalScanNode" class="title">Class LogicalScanNode</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.LogicalScanNode</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">LogicalScanNode</span>
-extends java.lang.Object</pre>
-<div class="block">A LogicalScanNode represents table in the FROM list in a
- LogicalQueryPlan</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalScanNode.html#alias">alias</a></span></code>
-<div class="block">The name (alias) of the table as it is used in the query</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalScanNode.html#t">t</a></span></code>
-<div class="block">The table identifier (can be passed to <a href="../simpledb/Catalog.html#getDatabaseFile-int-"><code>Catalog.getDatabaseFile(int)</code></a>)
-   to retrieve a DbFile</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/LogicalScanNode.html#LogicalScanNode-int-java.lang.String-">LogicalScanNode</a></span>(int&nbsp;table,
-               java.lang.String&nbsp;tableAlias)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="alias">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>alias</h4>
-<pre>public&nbsp;java.lang.String alias</pre>
-<div class="block">The name (alias) of the table as it is used in the query</div>
-</li>
-</ul>
-<a name="t">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>t</h4>
-<pre>public&nbsp;int t</pre>
-<div class="block">The table identifier (can be passed to <a href="../simpledb/Catalog.html#getDatabaseFile-int-"><code>Catalog.getDatabaseFile(int)</code></a>)
-   to retrieve a DbFile</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="LogicalScanNode-int-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>LogicalScanNode</h4>
-<pre>public&nbsp;LogicalScanNode(int&nbsp;table,
-                       java.lang.String&nbsp;tableAlias)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalPlan.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalSelectListNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalScanNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalScanNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/LogicalSelectListNode.html lab4/javadoc/simpledb/LogicalSelectListNode.html
--- lab3/javadoc/simpledb/LogicalSelectListNode.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/LogicalSelectListNode.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,294 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>LogicalSelectListNode</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="LogicalSelectListNode";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalScanNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalSubplanJoinNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalSelectListNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalSelectListNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class LogicalSelectListNode" class="title">Class LogicalSelectListNode</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.LogicalSelectListNode</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">LogicalSelectListNode</span>
-extends java.lang.Object</pre>
-<div class="block">A LogicalSelectListNode represents a clause in the select list in
- a LogicalQueryPlan</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalSelectListNode.html#aggOp">aggOp</a></span></code>
-<div class="block">The aggregation operation over the field (if any)</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalSelectListNode.html#fname">fname</a></span></code>
-<div class="block">The field name being selected; the name may be (optionally) be
- qualified with a table name or alias.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/LogicalSelectListNode.html#LogicalSelectListNode-java.lang.String-java.lang.String-">LogicalSelectListNode</a></span>(java.lang.String&nbsp;aggOp,
-                     java.lang.String&nbsp;fname)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="fname">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fname</h4>
-<pre>public&nbsp;java.lang.String fname</pre>
-<div class="block">The field name being selected; the name may be (optionally) be
- qualified with a table name or alias.</div>
-</li>
-</ul>
-<a name="aggOp">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>aggOp</h4>
-<pre>public&nbsp;java.lang.String aggOp</pre>
-<div class="block">The aggregation operation over the field (if any)</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="LogicalSelectListNode-java.lang.String-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>LogicalSelectListNode</h4>
-<pre>public&nbsp;LogicalSelectListNode(java.lang.String&nbsp;aggOp,
-                             java.lang.String&nbsp;fname)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalScanNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/LogicalSubplanJoinNode.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalSelectListNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalSelectListNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/LogicalSubplanJoinNode.html lab4/javadoc/simpledb/LogicalSubplanJoinNode.html
--- lab3/javadoc/simpledb/LogicalSubplanJoinNode.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/LogicalSubplanJoinNode.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,378 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>LogicalSubplanJoinNode</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="LogicalSubplanJoinNode";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalSelectListNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Operator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalSubplanJoinNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalSubplanJoinNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class LogicalSubplanJoinNode" class="title">Class LogicalSubplanJoinNode</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">simpledb.LogicalJoinNode</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.LogicalSubplanJoinNode</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">LogicalSubplanJoinNode</span>
-extends <a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></pre>
-<div class="block">A LogicalSubplanJoinNode represens the state needed of a join of a
- table to a subplan in a LogicalQueryPlan -- inherits state from
- <a href="../simpledb/LogicalJoinNode.html" title="class in simpledb"><code>LogicalJoinNode</code></a>; t2 and f2 should always be null</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalSubplanJoinNode.html#subPlan">subPlan</a></span></code>
-<div class="block">The subplan (used on the inner) of the join</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="fields.inherited.from.class.simpledb.LogicalJoinNode">
-<!--   -->
-</a>
-<h3>Fields inherited from class&nbsp;simpledb.<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></h3>
-<code><a href="../simpledb/LogicalJoinNode.html#f1PureName">f1PureName</a>, <a href="../simpledb/LogicalJoinNode.html#f1QuantifiedName">f1QuantifiedName</a>, <a href="../simpledb/LogicalJoinNode.html#f2PureName">f2PureName</a>, <a href="../simpledb/LogicalJoinNode.html#f2QuantifiedName">f2QuantifiedName</a>, <a href="../simpledb/LogicalJoinNode.html#p">p</a>, <a href="../simpledb/LogicalJoinNode.html#t1Alias">t1Alias</a>, <a href="../simpledb/LogicalJoinNode.html#t2Alias">t2Alias</a></code></li>
-</ul>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/LogicalSubplanJoinNode.html#LogicalSubplanJoinNode-java.lang.String-java.lang.String-simpledb.DbIterator-simpledb.Predicate.Op-">LogicalSubplanJoinNode</a></span>(java.lang.String&nbsp;table1,
-                      java.lang.String&nbsp;joinField1,
-                      <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;sp,
-                      <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalSubplanJoinNode.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;o)</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalSubplanJoinNode.html#hashCode--">hashCode</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/LogicalSubplanJoinNode.html#swapInnerOuter--">swapInnerOuter</a></span>()</code>
-<div class="block">Return a new LogicalJoinNode with the inner and outer (t1.f1
- and t2.f2) tables swapped.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.LogicalJoinNode">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></h3>
-<code><a href="../simpledb/LogicalJoinNode.html#toString--">toString</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="subPlan">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>subPlan</h4>
-<pre><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> subPlan</pre>
-<div class="block">The subplan (used on the inner) of the join</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="LogicalSubplanJoinNode-java.lang.String-java.lang.String-simpledb.DbIterator-simpledb.Predicate.Op-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>LogicalSubplanJoinNode</h4>
-<pre>public&nbsp;LogicalSubplanJoinNode(java.lang.String&nbsp;table1,
-                              java.lang.String&nbsp;joinField1,
-                              <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;sp,
-                              <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;pred)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>public&nbsp;int&nbsp;hashCode()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/LogicalJoinNode.html#hashCode--">hashCode</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;o)</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/LogicalJoinNode.html#equals-java.lang.Object-">equals</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="swapInnerOuter--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>swapInnerOuter</h4>
-<pre>public&nbsp;<a href="../simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a>&nbsp;swapInnerOuter()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/LogicalJoinNode.html#swapInnerOuter--">LogicalJoinNode</a></code></span></div>
-<div class="block">Return a new LogicalJoinNode with the inner and outer (t1.f1
- and t2.f2) tables swapped.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/LogicalJoinNode.html#swapInnerOuter--">swapInnerOuter</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalSelectListNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Operator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/LogicalSubplanJoinNode.html" target="_top">Frames</a></li>
-<li><a href="LogicalSubplanJoinNode.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Operator.html lab4/javadoc/simpledb/Operator.html
--- lab3/javadoc/simpledb/Operator.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Operator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,594 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Operator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Operator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":6,"i2":6,"i3":10,"i4":6,"i5":10,"i6":10,"i7":10,"i8":6,"i9":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalSubplanJoinNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/OperatorCardinality.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Operator.html" target="_top">Frames</a></li>
-<li><a href="Operator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Operator" class="title">Class Operator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Operator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<dl>
-<dt>Direct Known Subclasses:</dt>
-<dd><a href="../simpledb/Aggregate.html" title="class in simpledb">Aggregate</a>, <a href="../simpledb/Delete.html" title="class in simpledb">Delete</a>, <a href="../simpledb/Filter.html" title="class in simpledb">Filter</a>, <a href="../simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a>, <a href="../simpledb/Insert.html" title="class in simpledb">Insert</a>, <a href="../simpledb/Join.html" title="class in simpledb">Join</a>, <a href="../simpledb/OrderBy.html" title="class in simpledb">OrderBy</a>, <a href="../simpledb/Project.html" title="class in simpledb">Project</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public abstract class <span class="typeNameLabel">Operator</span>
-extends java.lang.Object
-implements <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></pre>
-<div class="block">Abstract class for implementing operators. It handles <code>close</code>,
- <code>next</code> and <code>hasNext</code>. Subclasses only need to implement
- <code>open</code> and <code>readNext</code>.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Operator">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#estimatedCardinality">estimatedCardinality</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#next">next</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#open">open</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#Operator--">Operator</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#close--">close</a></span>()</code>
-<div class="block">Closes this iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>protected abstract <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#fetchNext--">fetchNext</a></span>()</code>
-<div class="block">Returns the next Tuple in the iterator, or null if the iteration is
- finished.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>abstract <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#getChildren--">getChildren</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>abstract <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#hasNext--">hasNext</a></span>()</code>
-<div class="block">Returns true if the iterator has more tuples.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#next--">next</a></span>()</code>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>abstract void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</code>
-<div class="block">Set the children(child) of this operator.</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>protected void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality</a></span>(int&nbsp;card)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.DbIterator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;simpledb.<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></h3>
-<code><a href="../simpledb/DbIterator.html#rewind--">rewind</a></code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Operator.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="next">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>private&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a> next</pre>
-</li>
-</ul>
-<a name="open">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>private&nbsp;boolean open</pre>
-</li>
-</ul>
-<a name="estimatedCardinality">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>estimatedCardinality</h4>
-<pre>private&nbsp;int estimatedCardinality</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Operator--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Operator</h4>
-<pre>public&nbsp;Operator()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()
-                throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                       <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#hasNext--">DbIterator</a></code></span></div>
-<div class="block">Returns true if the iterator has more tuples.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#hasNext--">hasNext</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true f the iterator has more tuples.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()
-           throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                  java.util.NoSuchElementException</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#next--">DbIterator</a></code></span></div>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#next--">next</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next tuple in the iteration.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if there are no more tuples.</dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="fetchNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fetchNext</h4>
-<pre>protected abstract&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;fetchNext()
-                            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Returns the next Tuple in the iterator, or null if the iteration is
- finished. Operator uses this method to implement both <code>next</code>
- and <code>hasNext</code>.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next Tuple in the iterator, or null if the iteration is
-         finished.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block">Closes this iterator. If overridden by a subclass, they should call
- super.close() in order for Operator's internal state to be consistent.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildren--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getChildren</h4>
-<pre>public abstract&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;getChildren()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the children DbIterators of this operator. If there is
-         only one child, return an array of only one element. For join
-         operators, the order of the children is not important. But they
-         should be consistent among multiple calls.</dd>
-</dl>
-</li>
-</ul>
-<a name="setChildren-simpledb.DbIterator:A-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setChildren</h4>
-<pre>public abstract&nbsp;void&nbsp;setChildren(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</pre>
-<div class="block">Set the children(child) of this operator. If the operator has only one
- child, children[0] should be used. If the operator is a join, children[0]
- and children[1] should be used.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>children</code> - the DbIterators which are to be set as the children(child) of
-            this operator</dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public abstract&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#getTupleDesc--">DbIterator</a></code></span></div>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the TupleDesc of the output tuples of this operator</dd>
-</dl>
-</li>
-</ul>
-<a name="getEstimatedCardinality--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getEstimatedCardinality</h4>
-<pre>public&nbsp;int&nbsp;getEstimatedCardinality()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The estimated cardinality of this operator. Will only be used in
-         lab7</dd>
-</dl>
-</li>
-</ul>
-<a name="setEstimatedCardinality-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setEstimatedCardinality</h4>
-<pre>protected&nbsp;void&nbsp;setEstimatedCardinality(int&nbsp;card)</pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>card</code> - The estimated cardinality of this operator Will only be used
-            in lab7</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/LogicalSubplanJoinNode.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/OperatorCardinality.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Operator.html" target="_top">Frames</a></li>
-<li><a href="Operator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/OperatorCardinality.html lab4/javadoc/simpledb/OperatorCardinality.html
--- lab3/javadoc/simpledb/OperatorCardinality.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/OperatorCardinality.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,348 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>OperatorCardinality</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="OperatorCardinality";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Operator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/OrderBy.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/OperatorCardinality.html" target="_top">Frames</a></li>
-<li><a href="OperatorCardinality.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class OperatorCardinality" class="title">Class OperatorCardinality</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.OperatorCardinality</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">OperatorCardinality</span>
-extends java.lang.Object</pre>
-<div class="block">A utility class, which computes the estimated cardinalities of an operator
- tree.
- 
- All methods have been fully provided. No extra codes are required.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/OperatorCardinality.html#OperatorCardinality--">OperatorCardinality</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>private static boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OperatorCardinality.html#updateAggregateCardinality-simpledb.Aggregate-java.util.Map-java.util.Map-">updateAggregateCardinality</a></span>(<a href="../simpledb/Aggregate.html" title="class in simpledb">Aggregate</a>&nbsp;a,
-                          java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                          java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>private static boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OperatorCardinality.html#updateFilterCardinality-simpledb.Filter-java.util.Map-java.util.Map-">updateFilterCardinality</a></span>(<a href="../simpledb/Filter.html" title="class in simpledb">Filter</a>&nbsp;f,
-                       java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                       java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>private static boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OperatorCardinality.html#updateHashEquiJoinCardinality-simpledb.HashEquiJoin-java.util.Map-java.util.Map-">updateHashEquiJoinCardinality</a></span>(<a href="../simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a>&nbsp;j,
-                             java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                             java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>private static boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OperatorCardinality.html#updateJoinCardinality-simpledb.Join-java.util.Map-java.util.Map-">updateJoinCardinality</a></span>(<a href="../simpledb/Join.html" title="class in simpledb">Join</a>&nbsp;j,
-                     java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                     java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>static boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OperatorCardinality.html#updateOperatorCardinality-simpledb.Operator-java.util.Map-java.util.Map-">updateOperatorCardinality</a></span>(<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a>&nbsp;o,
-                         java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                         java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="OperatorCardinality--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>OperatorCardinality</h4>
-<pre>public&nbsp;OperatorCardinality()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="updateOperatorCardinality-simpledb.Operator-java.util.Map-java.util.Map-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>updateOperatorCardinality</h4>
-<pre>public static&nbsp;boolean&nbsp;updateOperatorCardinality(<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a>&nbsp;o,
-                                                java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                                                java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableAliasToId</code> - table alias to table id mapping</dd>
-<dd><code>tableStats</code> - table statistics</dd>
-</dl>
-</li>
-</ul>
-<a name="updateFilterCardinality-simpledb.Filter-java.util.Map-java.util.Map-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>updateFilterCardinality</h4>
-<pre>private static&nbsp;boolean&nbsp;updateFilterCardinality(<a href="../simpledb/Filter.html" title="class in simpledb">Filter</a>&nbsp;f,
-                                               java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                                               java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</pre>
-</li>
-</ul>
-<a name="updateJoinCardinality-simpledb.Join-java.util.Map-java.util.Map-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>updateJoinCardinality</h4>
-<pre>private static&nbsp;boolean&nbsp;updateJoinCardinality(<a href="../simpledb/Join.html" title="class in simpledb">Join</a>&nbsp;j,
-                                             java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                                             java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</pre>
-</li>
-</ul>
-<a name="updateHashEquiJoinCardinality-simpledb.HashEquiJoin-java.util.Map-java.util.Map-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>updateHashEquiJoinCardinality</h4>
-<pre>private static&nbsp;boolean&nbsp;updateHashEquiJoinCardinality(<a href="../simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a>&nbsp;j,
-                                                     java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                                                     java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</pre>
-</li>
-</ul>
-<a name="updateAggregateCardinality-simpledb.Aggregate-java.util.Map-java.util.Map-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>updateAggregateCardinality</h4>
-<pre>private static&nbsp;boolean&nbsp;updateAggregateCardinality(<a href="../simpledb/Aggregate.html" title="class in simpledb">Aggregate</a>&nbsp;a,
-                                                  java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;tableAliasToId,
-                                                  java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;tableStats)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Operator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/OrderBy.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/OperatorCardinality.html" target="_top">Frames</a></li>
-<li><a href="OperatorCardinality.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/OrderBy.html lab4/javadoc/simpledb/OrderBy.html
--- lab3/javadoc/simpledb/OrderBy.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/OrderBy.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,640 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>OrderBy</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="OrderBy";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/OperatorCardinality.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Page.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/OrderBy.html" target="_top">Frames</a></li>
-<li><a href="OrderBy.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class OrderBy" class="title">Class OrderBy</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/Operator.html" title="class in simpledb">simpledb.Operator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.OrderBy</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">OrderBy</span>
-extends <a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></pre>
-<div class="block">OrderBy is an operator that implements a relational ORDER BY.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.OrderBy">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#asc">asc</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#child">child</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#childTups">childTups</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#it">it</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#orderByField">orderByField</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#orderByFieldName">orderByFieldName</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#td">td</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#OrderBy-int-boolean-simpledb.DbIterator-">OrderBy</a></span>(int&nbsp;orderbyField,
-       boolean&nbsp;asc,
-       <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</code>
-<div class="block">Creates a new OrderBy node over the tuples from the iterator.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#close--">close</a></span>()</code>
-<div class="block">Closes this iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#fetchNext--">fetchNext</a></span>()</code>
-<div class="block">Operator.fetchNext implementation.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#getChildren--">getChildren</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#getOrderByField--">getOrderByField</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#getOrderFieldName--">getOrderFieldName</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#isASC--">isASC</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/OrderBy.html#setChildren-simpledb.DbIterator:A-">setChildren</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</code>
-<div class="block">Set the children(child) of this operator.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.Operator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></h3>
-<code><a href="../simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality</a>, <a href="../simpledb/Operator.html#hasNext--">hasNext</a>, <a href="../simpledb/Operator.html#next--">next</a>, <a href="../simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.OrderBy.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="child">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>child</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-</ul>
-<a name="td">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>td</h4>
-<pre>private&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-</ul>
-<a name="childTups">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>childTups</h4>
-<pre>private&nbsp;java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt; childTups</pre>
-</li>
-</ul>
-<a name="orderByField">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>orderByField</h4>
-<pre>private&nbsp;int orderByField</pre>
-</li>
-</ul>
-<a name="orderByFieldName">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>orderByFieldName</h4>
-<pre>private&nbsp;java.lang.String orderByFieldName</pre>
-</li>
-</ul>
-<a name="it">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>it</h4>
-<pre>private&nbsp;java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt; it</pre>
-</li>
-</ul>
-<a name="asc">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>asc</h4>
-<pre>private&nbsp;boolean asc</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="OrderBy-int-boolean-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>OrderBy</h4>
-<pre>public&nbsp;OrderBy(int&nbsp;orderbyField,
-               boolean&nbsp;asc,
-               <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</pre>
-<div class="block">Creates a new OrderBy node over the tuples from the iterator.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>orderbyField</code> - the field to which the sort is applied.</dd>
-<dd><code>asc</code> - true if the sort order is ascending.</dd>
-<dd><code>child</code> - the tuples to sort.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="isASC--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isASC</h4>
-<pre>public&nbsp;boolean&nbsp;isASC()</pre>
-</li>
-</ul>
-<a name="getOrderByField--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOrderByField</h4>
-<pre>public&nbsp;int&nbsp;getOrderByField()</pre>
-</li>
-</ul>
-<a name="getOrderFieldName--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOrderFieldName</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getOrderFieldName()</pre>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#getTupleDesc--">DbIterator</a></code></span></div>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the TupleDesc of the output tuples of this operator</dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 java.util.NoSuchElementException,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#open--">open</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#close--">Operator</a></code></span></div>
-<div class="block">Closes this iterator. If overridden by a subclass, they should call
- super.close() in order for Operator's internal state to be consistent.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="fetchNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fetchNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;fetchNext()
-                   throws java.util.NoSuchElementException,
-                          <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Operator.fetchNext implementation. Returns tuples from the child operator
- in order</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#fetchNext--">fetchNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The next tuple in the ordering, or null if there are no more
-         tuples</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildren--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getChildren</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;getChildren()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getChildren--">getChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the children DbIterators of this operator. If there is
-         only one child, return an array of only one element. For join
-         operators, the order of the children is not important. But they
-         should be consistent among multiple calls.</dd>
-</dl>
-</li>
-</ul>
-<a name="setChildren-simpledb.DbIterator:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setChildren</h4>
-<pre>public&nbsp;void&nbsp;setChildren(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">Operator</a></code></span></div>
-<div class="block">Set the children(child) of this operator. If the operator has only one
- child, children[0] should be used. If the operator is a join, children[0]
- and children[1] should be used.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>children</code> - the DbIterators which are to be set as the children(child) of
-            this operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/OperatorCardinality.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Page.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/OrderBy.html" target="_top">Frames</a></li>
-<li><a href="OrderBy.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Page.html lab4/javadoc/simpledb/Page.html
--- lab3/javadoc/simpledb/Page.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Page.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,332 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Page</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Page";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/OrderBy.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/PageId.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Page.html" target="_top">Frames</a></li>
-<li><a href="Page.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Interface Page" class="title">Interface Page</h2>
-</div>
-<div class="contentContainer">
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Known Implementing Classes:</dt>
-<dd><a href="../simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a>, <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>, <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>, <a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a>, <a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a>, <a href="../simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public interface <span class="typeNameLabel">Page</span></pre>
-<div class="block">Page is the interface used to represent pages that are resident in the
- BufferPool.  Typically, DbFiles will read and write pages from disk.
- <p>
- Pages may be "dirty", indicating that they have been modified since they
- were last written out to disk.
-
- For recovery purposes, pages MUST have a single constructor of the form:
-     Page(PageId id, byte[] data)</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Page.html#getBeforeImage--">getBeforeImage</a></span>()</code>
-<div class="block">Provide a representation of this page before any modifications were made
-        to it.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Page.html#getId--">getId</a></span>()</code>
-<div class="block">Return the id of this page.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>byte[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Page.html#getPageData--">getPageData</a></span>()</code>
-<div class="block">Generates a byte array representing the contents of this page.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Page.html#isDirty--">isDirty</a></span>()</code>
-<div class="block">Get the id of the transaction that last dirtied this page, or null if the page is clean..</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Page.html#markDirty-boolean-simpledb.TransactionId-">markDirty</a></span>(boolean&nbsp;dirty,
-         <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>
-<div class="block">Set the dirty state of this page as dirtied by a particular transaction</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Page.html#setBeforeImage--">setBeforeImage</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;getId()</pre>
-<div class="block">Return the id of this page.  The id is a unique identifier for a page
- that can be used to look up the page on disk or determine if the page
- is resident in the buffer pool.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the id of this page</dd>
-</dl>
-</li>
-</ul>
-<a name="isDirty--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>isDirty</h4>
-<pre><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;isDirty()</pre>
-<div class="block">Get the id of the transaction that last dirtied this page, or null if the page is clean..</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The id of the transaction that last dirtied this page, or null</dd>
-</dl>
-</li>
-</ul>
-<a name="markDirty-boolean-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>markDirty</h4>
-<pre>void&nbsp;markDirty(boolean&nbsp;dirty,
-               <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</pre>
-<div class="block">Set the dirty state of this page as dirtied by a particular transaction</div>
-</li>
-</ul>
-<a name="getPageData--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPageData</h4>
-<pre>byte[]&nbsp;getPageData()</pre>
-<div class="block">Generates a byte array representing the contents of this page.
- Used to serialize this page to disk.
- <p>
- The invariant here is that it should be possible to pass the byte array
- generated by getPageData to the Page constructor and have it produce
- an identical Page object.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>A byte array correspond to the bytes of this page.</dd>
-</dl>
-</li>
-</ul>
-<a name="getBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBeforeImage</h4>
-<pre><a href="../simpledb/Page.html" title="interface in simpledb">Page</a>&nbsp;getBeforeImage()</pre>
-<div class="block">Provide a representation of this page before any modifications were made
-        to it.  Used by recovery.</div>
-</li>
-</ul>
-<a name="setBeforeImage--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setBeforeImage</h4>
-<pre>void&nbsp;setBeforeImage()</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/OrderBy.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/PageId.html" title="interface in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Page.html" target="_top">Frames</a></li>
-<li><a href="Page.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/PageId.html lab4/javadoc/simpledb/PageId.html
--- lab3/javadoc/simpledb/PageId.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/PageId.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,311 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>PageId</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="PageId";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Page.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Parser.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/PageId.html" target="_top">Frames</a></li>
-<li><a href="PageId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Interface PageId" class="title">Interface PageId</h2>
-</div>
-<div class="contentContainer">
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Known Implementing Classes:</dt>
-<dd><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>, <a href="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public interface <span class="typeNameLabel">PageId</span></pre>
-<div class="block">PageId is an interface to a specific page of a specific table.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PageId.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;o)</code>
-<div class="block">Compares one PageId to another.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PageId.html#getTableId--">getTableId</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PageId.html#hashCode--">hashCode</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PageId.html#pageNumber--">pageNumber</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>int[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PageId.html#serialize--">serialize</a></span>()</code>
-<div class="block">Return a representation of this page id object as a collection of
-        integers (used for logging)
-
-        This class MUST have a constructor that accepts n integer parameters,
-        where n is the number of integers returned in the array from serialize.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="serialize--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialize</h4>
-<pre>int[]&nbsp;serialize()</pre>
-<div class="block">Return a representation of this page id object as a collection of
-        integers (used for logging)
-
-        This class MUST have a constructor that accepts n integer parameters,
-        where n is the number of integers returned in the array from serialize.</div>
-</li>
-</ul>
-<a name="getTableId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableId</h4>
-<pre>int&nbsp;getTableId()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the unique tableid hashcode with this PageId</dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>int&nbsp;hashCode()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a hash code for this page, represented by the concatenation of
-   the table number and the page number (needed if a PageId is used as a
-   key in a hash table in the BufferPool, for example.)</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/BufferPool.html" title="class in simpledb"><code>BufferPool</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>boolean&nbsp;equals(java.lang.Object&nbsp;o)</pre>
-<div class="block">Compares one PageId to another.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>o</code> - The object to compare against (must be a PageId)</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if the objects are equal (e.g., page numbers and table
-   ids are the same)</dd>
-</dl>
-</li>
-</ul>
-<a name="pageNumber--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>pageNumber</h4>
-<pre>int&nbsp;pageNumber()</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Page.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Parser.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/PageId.html" target="_top">Frames</a></li>
-<li><a href="PageId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li>Constr&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Parser.html lab4/javadoc/simpledb/Parser.html
--- lab3/javadoc/simpledb/Parser.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Parser.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,671 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Parser</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Parser";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":9,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":9,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/PageId.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/ParsingException.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Parser.html" target="_top">Frames</a></li>
-<li><a href="Parser.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Parser" class="title">Class Parser</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Parser</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Parser</span>
-extends java.lang.Object</pre>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Transaction.html" title="class in simpledb">Transaction</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#curtrans">curtrans</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#explain">explain</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>protected boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#interactive">interactive</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#inUserTrans">inUserTrans</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#SLEEP_TIME">SLEEP_TIME</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>static java.lang.String[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#SQL_COMMANDS">SQL_COMMANDS</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#usage">usage</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#Parser--">Parser</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#generateLogicalPlan-simpledb.TransactionId-java.lang.String-">generateLogicalPlan</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                   java.lang.String&nbsp;s)</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#getOp-java.lang.String-">getOp</a></span>(java.lang.String&nbsp;s)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Transaction.html" title="class in simpledb">Transaction</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#getTransaction--">getTransaction</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Query.html" title="class in simpledb">Query</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#handleDeleteStatement-Zql.ZDelete-simpledb.TransactionId-">handleDeleteStatement</a></span>(Zql.ZDelete&nbsp;s,
-                     <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Query.html" title="class in simpledb">Query</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#handleInsertStatement-Zql.ZInsert-simpledb.TransactionId-">handleInsertStatement</a></span>(Zql.ZInsert&nbsp;s,
-                     <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tId)</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Query.html" title="class in simpledb">Query</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#handleQueryStatement-Zql.ZQuery-simpledb.TransactionId-">handleQueryStatement</a></span>(Zql.ZQuery&nbsp;s,
-                    <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tId)</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#handleTransactStatement-Zql.ZTransactStmt-">handleTransactStatement</a></span>(Zql.ZTransactStmt&nbsp;s)</code>&nbsp;</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#main-java.lang.String:A-">main</a></span>(java.lang.String[]&nbsp;argv)</code>&nbsp;</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#parseQueryLogicalPlan-simpledb.TransactionId-Zql.ZQuery-">parseQueryLogicalPlan</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                     Zql.ZQuery&nbsp;q)</code>&nbsp;</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>(package private) void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#processExpression-simpledb.TransactionId-Zql.ZExpression-simpledb.LogicalPlan-">processExpression</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                 Zql.ZExpression&nbsp;wx,
-                 <a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a>&nbsp;lp)</code>&nbsp;</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#processNextStatement-java.io.InputStream-">processNextStatement</a></span>(java.io.InputStream&nbsp;is)</code>&nbsp;</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#processNextStatement-java.lang.String-">processNextStatement</a></span>(java.lang.String&nbsp;s)</code>&nbsp;</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#setTransaction-simpledb.Transaction-">setTransaction</a></span>(<a href="../simpledb/Transaction.html" title="class in simpledb">Transaction</a>&nbsp;t)</code>&nbsp;</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>protected void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#shutdown--">shutdown</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>protected void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Parser.html#start-java.lang.String:A-">start</a></span>(java.lang.String[]&nbsp;argv)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="explain">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>explain</h4>
-<pre>static&nbsp;boolean explain</pre>
-</li>
-</ul>
-<a name="curtrans">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>curtrans</h4>
-<pre>private&nbsp;<a href="../simpledb/Transaction.html" title="class in simpledb">Transaction</a> curtrans</pre>
-</li>
-</ul>
-<a name="inUserTrans">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>inUserTrans</h4>
-<pre>private&nbsp;boolean inUserTrans</pre>
-</li>
-</ul>
-<a name="SQL_COMMANDS">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>SQL_COMMANDS</h4>
-<pre>public static final&nbsp;java.lang.String[] SQL_COMMANDS</pre>
-</li>
-</ul>
-<a name="usage">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>usage</h4>
-<pre>static final&nbsp;java.lang.String usage</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Parser.usage">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="SLEEP_TIME">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>SLEEP_TIME</h4>
-<pre>static final&nbsp;int SLEEP_TIME</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Parser.SLEEP_TIME">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="interactive">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>interactive</h4>
-<pre>protected&nbsp;boolean interactive</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Parser--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Parser</h4>
-<pre>public&nbsp;Parser()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getOp-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOp</h4>
-<pre>public static&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;getOp(java.lang.String&nbsp;s)
-                          throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="processExpression-simpledb.TransactionId-Zql.ZExpression-simpledb.LogicalPlan-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>processExpression</h4>
-<pre>void&nbsp;processExpression(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                       Zql.ZExpression&nbsp;wx,
-                       <a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a>&nbsp;lp)
-                throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="parseQueryLogicalPlan-simpledb.TransactionId-Zql.ZQuery-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>parseQueryLogicalPlan</h4>
-<pre>public&nbsp;<a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a>&nbsp;parseQueryLogicalPlan(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                         Zql.ZQuery&nbsp;q)
-                                  throws java.io.IOException,
-                                         Zql.ParseException,
-                                         <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code>Zql.ParseException</code></dd>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="handleQueryStatement-Zql.ZQuery-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>handleQueryStatement</h4>
-<pre>public&nbsp;<a href="../simpledb/Query.html" title="class in simpledb">Query</a>&nbsp;handleQueryStatement(Zql.ZQuery&nbsp;s,
-                                  <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tId)
-                           throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                                  <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                  java.io.IOException,
-                                  <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a>,
-                                  Zql.ParseException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-<dd><code>Zql.ParseException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="handleInsertStatement-Zql.ZInsert-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>handleInsertStatement</h4>
-<pre>public&nbsp;<a href="../simpledb/Query.html" title="class in simpledb">Query</a>&nbsp;handleInsertStatement(Zql.ZInsert&nbsp;s,
-                                   <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tId)
-                            throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                                   <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                   java.io.IOException,
-                                   <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a>,
-                                   Zql.ParseException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-<dd><code>Zql.ParseException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="handleDeleteStatement-Zql.ZDelete-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>handleDeleteStatement</h4>
-<pre>public&nbsp;<a href="../simpledb/Query.html" title="class in simpledb">Query</a>&nbsp;handleDeleteStatement(Zql.ZDelete&nbsp;s,
-                                   <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid)
-                            throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                                   <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                   java.io.IOException,
-                                   <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a>,
-                                   Zql.ParseException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-<dd><code>Zql.ParseException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="handleTransactStatement-Zql.ZTransactStmt-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>handleTransactStatement</h4>
-<pre>public&nbsp;void&nbsp;handleTransactStatement(Zql.ZTransactStmt&nbsp;s)
-                             throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                                    <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                    java.io.IOException,
-                                    <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a>,
-                                    Zql.ParseException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-<dd><code>Zql.ParseException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="generateLogicalPlan-simpledb.TransactionId-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateLogicalPlan</h4>
-<pre>public&nbsp;<a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a>&nbsp;generateLogicalPlan(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-                                       java.lang.String&nbsp;s)
-                                throws <a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="setTransaction-simpledb.Transaction-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setTransaction</h4>
-<pre>public&nbsp;void&nbsp;setTransaction(<a href="../simpledb/Transaction.html" title="class in simpledb">Transaction</a>&nbsp;t)</pre>
-</li>
-</ul>
-<a name="getTransaction--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTransaction</h4>
-<pre>public&nbsp;<a href="../simpledb/Transaction.html" title="class in simpledb">Transaction</a>&nbsp;getTransaction()</pre>
-</li>
-</ul>
-<a name="processNextStatement-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>processNextStatement</h4>
-<pre>public&nbsp;void&nbsp;processNextStatement(java.lang.String&nbsp;s)</pre>
-</li>
-</ul>
-<a name="processNextStatement-java.io.InputStream-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>processNextStatement</h4>
-<pre>public&nbsp;void&nbsp;processNextStatement(java.io.InputStream&nbsp;is)</pre>
-</li>
-</ul>
-<a name="main-java.lang.String:A-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>main</h4>
-<pre>public static&nbsp;void&nbsp;main(java.lang.String[]&nbsp;argv)
-                 throws java.io.IOException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="shutdown--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>shutdown</h4>
-<pre>protected&nbsp;void&nbsp;shutdown()</pre>
-</li>
-</ul>
-<a name="start-java.lang.String:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>start</h4>
-<pre>protected&nbsp;void&nbsp;start(java.lang.String[]&nbsp;argv)
-              throws java.io.IOException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/PageId.html" title="interface in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/ParsingException.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Parser.html" target="_top">Frames</a></li>
-<li><a href="Parser.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/ParsingException.html lab4/javadoc/simpledb/ParsingException.html
--- lab3/javadoc/simpledb/ParsingException.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/ParsingException.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,310 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>ParsingException</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="ParsingException";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Parser.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Permissions.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/ParsingException.html" target="_top">Frames</a></li>
-<li><a href="ParsingException.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Throwable">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class ParsingException" class="title">Class ParsingException</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Throwable</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Exception</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.ParsingException</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">ParsingException</span>
-extends java.lang.Exception</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.ParsingException">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/ParsingException.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/ParsingException.html#ParsingException-java.lang.Exception-">ParsingException</a></span>(java.lang.Exception&nbsp;e)</code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/ParsingException.html#ParsingException-java.lang.String-">ParsingException</a></span>(java.lang.String&nbsp;string)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Throwable">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Throwable</h3>
-<code>addSuppressed, fillInStackTrace, getCause, getLocalizedMessage, getMessage, getStackTrace, getSuppressed, initCause, printStackTrace, printStackTrace, printStackTrace, setStackTrace, toString</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.ParsingException.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="ParsingException-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>ParsingException</h4>
-<pre>public&nbsp;ParsingException(java.lang.String&nbsp;string)</pre>
-</li>
-</ul>
-<a name="ParsingException-java.lang.Exception-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>ParsingException</h4>
-<pre>public&nbsp;ParsingException(java.lang.Exception&nbsp;e)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Parser.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Permissions.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/ParsingException.html" target="_top">Frames</a></li>
-<li><a href="ParsingException.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Throwable">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Permissions.html lab4/javadoc/simpledb/Permissions.html
--- lab3/javadoc/simpledb/Permissions.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Permissions.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,338 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Permissions</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Permissions";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/ParsingException.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/PlanCache.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Permissions.html" target="_top">Frames</a></li>
-<li><a href="Permissions.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Permissions" class="title">Class Permissions</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Permissions</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Permissions</span>
-extends java.lang.Object</pre>
-<div class="block">Class representing requested permissions to a relation/file.
- Private constructor with two static objects READ_ONLY and READ_WRITE that
- represent the two levels of permission.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Permissions.html#permLevel">permLevel</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Permissions.html#READ_ONLY">READ_ONLY</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Permissions.html#READ_WRITE">READ_WRITE</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier</th>
-<th class="colLast" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private </code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Permissions.html#Permissions-int-">Permissions</a></span>(int&nbsp;permLevel)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Permissions.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="permLevel">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>permLevel</h4>
-<pre>int permLevel</pre>
-</li>
-</ul>
-<a name="READ_ONLY">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>READ_ONLY</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a> READ_ONLY</pre>
-</li>
-</ul>
-<a name="READ_WRITE">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>READ_WRITE</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a> READ_WRITE</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Permissions-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Permissions</h4>
-<pre>private&nbsp;Permissions(int&nbsp;permLevel)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/ParsingException.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/PlanCache.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Permissions.html" target="_top">Frames</a></li>
-<li><a href="Permissions.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/PlanCache.html lab4/javadoc/simpledb/PlanCache.html
--- lab3/javadoc/simpledb/PlanCache.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/PlanCache.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,415 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>PlanCache</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="PlanCache";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Permissions.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Predicate.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/PlanCache.html" target="_top">Frames</a></li>
-<li><a href="PlanCache.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class PlanCache" class="title">Class PlanCache</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.PlanCache</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">PlanCache</span>
-extends java.lang.Object</pre>
-<div class="block">A PlanCache is a helper class that can be used to store the best
- way to order a given set of joins</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.util.HashMap&lt;java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;,java.lang.Integer&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PlanCache.html#bestCardinalities">bestCardinalities</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.util.HashMap&lt;java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;,java.lang.Double&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PlanCache.html#bestCosts">bestCosts</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.util.HashMap&lt;java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;,java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PlanCache.html#bestOrders">bestOrders</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/PlanCache.html#PlanCache--">PlanCache</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>(package private) void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PlanCache.html#addPlan-java.util.Set-double-int-java.util.Vector-">addPlan</a></span>(java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;s,
-       double&nbsp;cost,
-       int&nbsp;card,
-       java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;order)</code>
-<div class="block">Add a new cost, cardinality and ordering for a particular join set.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PlanCache.html#getCard-java.util.Set-">getCard</a></span>(java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;s)</code>
-<div class="block">Find the cardinality of the best join order in the cache for the specified plan</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>(package private) double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PlanCache.html#getCost-java.util.Set-">getCost</a></span>(java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;s)</code>
-<div class="block">Find the cost of the best join order in the cache for the specified plan</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>(package private) java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/PlanCache.html#getOrder-java.util.Set-">getOrder</a></span>(java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;s)</code>
-<div class="block">Find the best join order in the cache for the specified plan</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="bestOrders">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>bestOrders</h4>
-<pre>java.util.HashMap&lt;java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;,java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&gt; bestOrders</pre>
-</li>
-</ul>
-<a name="bestCosts">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>bestCosts</h4>
-<pre>java.util.HashMap&lt;java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;,java.lang.Double&gt; bestCosts</pre>
-</li>
-</ul>
-<a name="bestCardinalities">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>bestCardinalities</h4>
-<pre>java.util.HashMap&lt;java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;,java.lang.Integer&gt; bestCardinalities</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="PlanCache--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>PlanCache</h4>
-<pre>public&nbsp;PlanCache()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="addPlan-java.util.Set-double-int-java.util.Vector-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addPlan</h4>
-<pre>void&nbsp;addPlan(java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;s,
-             double&nbsp;cost,
-             int&nbsp;card,
-             java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;order)</pre>
-<div class="block">Add a new cost, cardinality and ordering for a particular join set.  Does not verify that the
-        new cost is less than any previously added cost -- simply adds or replaces an existing plan for the
-        specified join set</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>s</code> - the set of joins for which a new ordering (plan) is being added</dd>
-<dd><code>cost</code> - the estimated cost of the specified plan</dd>
-<dd><code>card</code> - the estimatied cardinality of the specified plan</dd>
-<dd><code>order</code> - the ordering of the joins in the plan</dd>
-</dl>
-</li>
-</ul>
-<a name="getOrder-java.util.Set-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOrder</h4>
-<pre>java.util.Vector&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;getOrder(java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;s)</pre>
-<div class="block">Find the best join order in the cache for the specified plan</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>s</code> - the set of joins to look up the best order for</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the best order for s in the cache</dd>
-</dl>
-</li>
-</ul>
-<a name="getCost-java.util.Set-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getCost</h4>
-<pre>double&nbsp;getCost(java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;s)</pre>
-<div class="block">Find the cost of the best join order in the cache for the specified plan</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>s</code> - the set of joins to look up the best cost for</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the cost of the best order for s in the cache</dd>
-</dl>
-</li>
-</ul>
-<a name="getCard-java.util.Set-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getCard</h4>
-<pre>int&nbsp;getCard(java.util.Set&lt;<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a>&gt;&nbsp;s)</pre>
-<div class="block">Find the cardinality of the best join order in the cache for the specified plan</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>s</code> - the set of joins to look up the best cardinality for</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the cardinality of the best order for s in the cache</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Permissions.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Predicate.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/PlanCache.html" target="_top">Frames</a></li>
-<li><a href="PlanCache.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Predicate.Op.html lab4/javadoc/simpledb/Predicate.Op.html
--- lab3/javadoc/simpledb/Predicate.Op.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Predicate.Op.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,442 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Predicate.Op</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Predicate.Op";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":10,"i2":9,"i3":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Predicate.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Project.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Predicate.Op.html" target="_top">Frames</a></li>
-<li><a href="Predicate.Op.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#enum.constant.summary">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#enum.constant.detail">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Enum Predicate.Op" class="title">Enum Predicate.Op</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Enum&lt;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&gt;</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Predicate.Op</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, java.lang.Comparable&lt;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&gt;</dd>
-</dl>
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/Predicate.html" title="class in simpledb">Predicate</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public static enum <span class="typeNameLabel">Predicate.Op</span>
-extends java.lang.Enum&lt;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&gt;
-implements java.io.Serializable</pre>
-<div class="block">Constants used for return codes in Field.compare</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== ENUM CONSTANT SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="enum.constant.summary">
-<!--   -->
-</a>
-<h3>Enum Constant Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Enum Constant Summary table, listing enum constants, and an explanation">
-<caption><span>Enum Constants</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Enum Constant and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#EQUALS">EQUALS</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#GREATER_THAN">GREATER_THAN</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#GREATER_THAN_OR_EQ">GREATER_THAN_OR_EQ</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#LESS_THAN">LESS_THAN</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#LESS_THAN_OR_EQ">LESS_THAN_OR_EQ</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#LIKE">LIKE</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#NOT_EQUALS">NOT_EQUALS</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#getOp-int-">getOp</a></span>(int&nbsp;i)</code>
-<div class="block">Interface to access operations by integer value for command-line
- convenience.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#valueOf-java.lang.String-">valueOf</a></span>(java.lang.String&nbsp;name)</code>
-<div class="block">Returns the enum constant of this type with the specified name.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html#values--">values</a></span>()</code>
-<div class="block">Returns an array containing the constants of this enum type, in
-the order they are declared.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Enum">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Enum</h3>
-<code>clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>getClass, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ ENUM CONSTANT DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="enum.constant.detail">
-<!--   -->
-</a>
-<h3>Enum Constant Detail</h3>
-<a name="EQUALS">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>EQUALS</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> EQUALS</pre>
-</li>
-</ul>
-<a name="GREATER_THAN">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>GREATER_THAN</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> GREATER_THAN</pre>
-</li>
-</ul>
-<a name="LESS_THAN">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>LESS_THAN</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> LESS_THAN</pre>
-</li>
-</ul>
-<a name="LESS_THAN_OR_EQ">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>LESS_THAN_OR_EQ</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> LESS_THAN_OR_EQ</pre>
-</li>
-</ul>
-<a name="GREATER_THAN_OR_EQ">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>GREATER_THAN_OR_EQ</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> GREATER_THAN_OR_EQ</pre>
-</li>
-</ul>
-<a name="LIKE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>LIKE</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> LIKE</pre>
-</li>
-</ul>
-<a name="NOT_EQUALS">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>NOT_EQUALS</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> NOT_EQUALS</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="values--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>values</h4>
-<pre>public static&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>[]&nbsp;values()</pre>
-<div class="block">Returns an array containing the constants of this enum type, in
-the order they are declared.  This method may be used to iterate
-over the constants as follows:
-<pre>
-for (Predicate.Op c : Predicate.Op.values())
-&nbsp;   System.out.println(c);
-</pre></div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an array containing the constants of this enum type, in the order they are declared</dd>
-</dl>
-</li>
-</ul>
-<a name="valueOf-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>valueOf</h4>
-<pre>public static&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;valueOf(java.lang.String&nbsp;name)</pre>
-<div class="block">Returns the enum constant of this type with the specified name.
-The string must match <i>exactly</i> an identifier used to declare an
-enum constant in this type.  (Extraneous whitespace characters are 
-not permitted.)</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>name</code> - the name of the enum constant to be returned.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the enum constant with the specified name</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.lang.IllegalArgumentException</code> - if this enum type has no constant with the specified name</dd>
-<dd><code>java.lang.NullPointerException</code> - if the argument is null</dd>
-</dl>
-</li>
-</ul>
-<a name="getOp-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOp</h4>
-<pre>public static&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;getOp(int&nbsp;i)</pre>
-<div class="block">Interface to access operations by integer value for command-line
- convenience.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - a valid integer Op index</dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Enum&lt;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Predicate.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Project.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Predicate.Op.html" target="_top">Frames</a></li>
-<li><a href="Predicate.Op.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#enum.constant.summary">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#enum.constant.detail">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Predicate.html lab4/javadoc/simpledb/Predicate.html
--- lab3/javadoc/simpledb/Predicate.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Predicate.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,477 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Predicate</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Predicate";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/PlanCache.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Predicate.Op.html" title="enum in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Predicate.html" target="_top">Frames</a></li>
-<li><a href="Predicate.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Predicate" class="title">Class Predicate</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Predicate</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Predicate</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">Predicate compares tuples to a specified Field value.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Predicate">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Class and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></span></code>
-<div class="block">Constants used for return codes in Field.compare</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#field">field</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#op">op</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#operand">operand</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#Predicate-int-simpledb.Predicate.Op-simpledb.Field-">Predicate</a></span>(int&nbsp;field,
-         <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-         <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;operand)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#filter-simpledb.Tuple-">filter</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</code>
-<div class="block">Compares the field number of t specified in the constructor to the
- operand field specified in the constructor using the operator specific in
- the constructor.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#getField--">getField</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#getOp--">getOp</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#getOperand--">getOperand</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Predicate.html#toString--">toString</a></span>()</code>
-<div class="block">Returns something useful, like "f = field_id op = op_string operand =
- operand_string</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Predicate.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="op">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>op</h4>
-<pre>private&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a> op</pre>
-</li>
-</ul>
-<a name="field">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>field</h4>
-<pre>private&nbsp;int field</pre>
-</li>
-</ul>
-<a name="operand">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>operand</h4>
-<pre>private&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a> operand</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Predicate-int-simpledb.Predicate.Op-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Predicate</h4>
-<pre>public&nbsp;Predicate(int&nbsp;field,
-                 <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                 <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;operand)</pre>
-<div class="block">Constructor.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>field</code> - field number of passed in tuples to compare against.</dd>
-<dd><code>op</code> - operation to use for comparison</dd>
-<dd><code>operand</code> - field value to compare passed in tuples to</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getField--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getField</h4>
-<pre>public&nbsp;int&nbsp;getField()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the field number</dd>
-</dl>
-</li>
-</ul>
-<a name="getOp--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOp</h4>
-<pre>public&nbsp;<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;getOp()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the operator</dd>
-</dl>
-</li>
-</ul>
-<a name="getOperand--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOperand</h4>
-<pre>public&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;getOperand()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the operand</dd>
-</dl>
-</li>
-</ul>
-<a name="filter-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>filter</h4>
-<pre>public&nbsp;boolean&nbsp;filter(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;t)</pre>
-<div class="block">Compares the field number of t specified in the constructor to the
- operand field specified in the constructor using the operator specific in
- the constructor. The comparison can be made through Field's compare
- method.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>t</code> - The tuple to compare against</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if the comparison is true, false otherwise.</dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<div class="block">Returns something useful, like "f = field_id op = op_string operand =
- operand_string</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/PlanCache.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Predicate.Op.html" title="enum in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Predicate.html" target="_top">Frames</a></li>
-<li><a href="Predicate.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Project.html lab4/javadoc/simpledb/Project.html
--- lab3/javadoc/simpledb/Project.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Project.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,566 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Project</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Project";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Predicate.Op.html" title="enum in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Query.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Project.html" target="_top">Frames</a></li>
-<li><a href="Project.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Project" class="title">Class Project</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li><a href="../simpledb/Operator.html" title="class in simpledb">simpledb.Operator</a></li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Project</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Project</span>
-extends <a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></pre>
-<div class="block">Project is an operator that implements a relational projection.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Project">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#child">child</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.util.ArrayList&lt;java.lang.Integer&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#outFieldIds">outFieldIds</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#td">td</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Project.html#Project-java.util.ArrayList-java.util.ArrayList-simpledb.DbIterator-">Project</a></span>(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;fieldList,
-       java.util.ArrayList&lt;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&gt;&nbsp;typesList,
-       <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</code>
-<div class="block">Constructor accepts a child operator to read tuples to apply projection
- to and a list of fields in output tuple</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Project.html#Project-java.util.ArrayList-simpledb.Type:A-simpledb.DbIterator-">Project</a></span>(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;fieldList,
-       <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;types,
-       <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#close--">close</a></span>()</code>
-<div class="block">Closes this iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>protected <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#fetchNext--">fetchNext</a></span>()</code>
-<div class="block">Operator.fetchNext implementation.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#getChildren--">getChildren</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Project.html#setChildren-simpledb.DbIterator:A-">setChildren</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</code>
-<div class="block">Set the children(child) of this operator.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.simpledb.Operator">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;simpledb.<a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></h3>
-<code><a href="../simpledb/Operator.html#getEstimatedCardinality--">getEstimatedCardinality</a>, <a href="../simpledb/Operator.html#hasNext--">hasNext</a>, <a href="../simpledb/Operator.html#next--">next</a>, <a href="../simpledb/Operator.html#setEstimatedCardinality-int-">setEstimatedCardinality</a></code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Project.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="child">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>child</h4>
-<pre>private&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> child</pre>
-</li>
-</ul>
-<a name="td">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>td</h4>
-<pre>private&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-</ul>
-<a name="outFieldIds">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>outFieldIds</h4>
-<pre>private&nbsp;java.util.ArrayList&lt;java.lang.Integer&gt; outFieldIds</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Project-java.util.ArrayList-java.util.ArrayList-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>Project</h4>
-<pre>public&nbsp;Project(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;fieldList,
-               java.util.ArrayList&lt;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&gt;&nbsp;typesList,
-               <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</pre>
-<div class="block">Constructor accepts a child operator to read tuples to apply projection
- to and a list of fields in output tuple</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>fieldList</code> - The ids of the fields child's tupleDesc to project out</dd>
-<dd><code>typesList</code> - the types of the fields in the final projection</dd>
-<dd><code>child</code> - The child operator</dd>
-</dl>
-</li>
-</ul>
-<a name="Project-java.util.ArrayList-simpledb.Type:A-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Project</h4>
-<pre>public&nbsp;Project(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;fieldList,
-               <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;types,
-               <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;child)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#getTupleDesc--">DbIterator</a></code></span></div>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the TupleDesc of the output tuples of this operator</dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 java.util.NoSuchElementException,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#open--">open</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#close--">Operator</a></code></span></div>
-<div class="block">Closes this iterator. If overridden by a subclass, they should call
- super.close() in order for Operator's internal state to be consistent.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#close--">close</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="fetchNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fetchNext</h4>
-<pre>protected&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;fetchNext()
-                   throws java.util.NoSuchElementException,
-                          <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                          <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block">Operator.fetchNext implementation. Iterates over tuples from the child
- operator, projecting out the fields from the tuple</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#fetchNext--">fetchNext</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The next tuple, or null if there are no more tuples</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getChildren--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getChildren</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;getChildren()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#getChildren--">getChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the children DbIterators of this operator. If there is
-         only one child, return an array of only one element. For join
-         operators, the order of the children is not important. But they
-         should be consistent among multiple calls.</dd>
-</dl>
-</li>
-</ul>
-<a name="setChildren-simpledb.DbIterator:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>setChildren</h4>
-<pre>public&nbsp;void&nbsp;setChildren(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>[]&nbsp;children)</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">Operator</a></code></span></div>
-<div class="block">Set the children(child) of this operator. If the operator has only one
- child, children[0] should be used. If the operator is a join, children[0]
- and children[1] should be used.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Operator.html#setChildren-simpledb.DbIterator:A-">setChildren</a></code>&nbsp;in class&nbsp;<code><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>children</code> - the DbIterators which are to be set as the children(child) of
-            this operator</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Predicate.Op.html" title="enum in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Query.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Project.html" target="_top">Frames</a></li>
-<li><a href="Project.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Query.html lab4/javadoc/simpledb/Query.html
--- lab3/javadoc/simpledb/Query.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Query.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,569 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Query</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Query";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Project.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/QueryPlanVisualizer.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Query.html" target="_top">Frames</a></li>
-<li><a href="Query.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Query" class="title">Class Query</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Query</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Query</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">Query is a wrapper class to manage the execution of queries. It takes a query
- plan in the form of a high level DbIterator (built by initiating the
- constructors of query plans) and runs it as a part of a specified
- transaction.</div>
-<dl>
-<dt><span class="simpleTagLabel">Author:</span></dt>
-<dd>Sam Madden</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Query">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#logicalPlan">logicalPlan</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#op">op</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#started">started</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Query.html#Query-simpledb.DbIterator-simpledb.TransactionId-">Query</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;root,
-     <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t)</code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Query.html#Query-simpledb.TransactionId-">Query</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#close--">close</a></span>()</code>
-<div class="block">Close the iterator</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#execute--">execute</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#getLogicalPlan--">getLogicalPlan</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#getOutputTupleDesc--">getOutputTupleDesc</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#getPhysicalPlan--">getPhysicalPlan</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#getTransactionId--">getTransactionId</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#hasNext--">hasNext</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#next--">next</a></span>()</code>
-<div class="block">Returns the next tuple, or throws NoSuchElementException if the iterator
- is closed.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#setLogicalPlan-simpledb.LogicalPlan-">setLogicalPlan</a></span>(<a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a>&nbsp;lp)</code>&nbsp;</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#setPhysicalPlan-simpledb.DbIterator-">setPhysicalPlan</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;pp)</code>&nbsp;</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Query.html#start--">start</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Query.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="op">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>op</h4>
-<pre>private transient&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a> op</pre>
-</li>
-</ul>
-<a name="logicalPlan">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>logicalPlan</h4>
-<pre>private transient&nbsp;<a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a> logicalPlan</pre>
-</li>
-</ul>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="started">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>started</h4>
-<pre>private transient&nbsp;boolean started</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Query-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>Query</h4>
-<pre>public&nbsp;Query(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t)</pre>
-</li>
-</ul>
-<a name="Query-simpledb.DbIterator-simpledb.TransactionId-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Query</h4>
-<pre>public&nbsp;Query(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;root,
-             <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;t)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTransactionId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTransactionId</h4>
-<pre>public&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;getTransactionId()</pre>
-</li>
-</ul>
-<a name="setLogicalPlan-simpledb.LogicalPlan-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setLogicalPlan</h4>
-<pre>public&nbsp;void&nbsp;setLogicalPlan(<a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a>&nbsp;lp)</pre>
-</li>
-</ul>
-<a name="getLogicalPlan--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getLogicalPlan</h4>
-<pre>public&nbsp;<a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a>&nbsp;getLogicalPlan()</pre>
-</li>
-</ul>
-<a name="setPhysicalPlan-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setPhysicalPlan</h4>
-<pre>public&nbsp;void&nbsp;setPhysicalPlan(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;pp)</pre>
-</li>
-</ul>
-<a name="getPhysicalPlan--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPhysicalPlan</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;getPhysicalPlan()</pre>
-</li>
-</ul>
-<a name="start--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>start</h4>
-<pre>public&nbsp;void&nbsp;start()
-           throws java.io.IOException,
-                  <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getOutputTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getOutputTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getOutputTupleDesc()</pre>
-</li>
-</ul>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()
-                throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                       <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if there are more tuples remaining.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()
-           throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                  java.util.NoSuchElementException,
-                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Returns the next tuple, or throws NoSuchElementException if the iterator
- is closed.</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The next tuple in the iterator</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - If there is an error in the database system</dd>
-<dd><code>java.util.NoSuchElementException</code> - If the iterator has finished iterating</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code> - If the transaction is aborted (e.g., due to a deadlock)</dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()
-           throws java.io.IOException</pre>
-<div class="block">Close the iterator</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="execute--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>execute</h4>
-<pre>public&nbsp;void&nbsp;execute()
-             throws java.io.IOException,
-                    <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                    <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Project.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/QueryPlanVisualizer.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Query.html" target="_top">Frames</a></li>
-<li><a href="Query.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/QueryPlanVisualizer.SubTreeDescriptor.html lab4/javadoc/simpledb/QueryPlanVisualizer.SubTreeDescriptor.html
--- lab3/javadoc/simpledb/QueryPlanVisualizer.SubTreeDescriptor.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/QueryPlanVisualizer.SubTreeDescriptor.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,353 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>QueryPlanVisualizer.SubTreeDescriptor</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="QueryPlanVisualizer.SubTreeDescriptor";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/QueryPlanVisualizer.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/RecordId.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" target="_top">Frames</a></li>
-<li><a href="QueryPlanVisualizer.SubTreeDescriptor.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class QueryPlanVisualizer.SubTreeDescriptor" class="title">Class QueryPlanVisualizer.SubTreeDescriptor</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.QueryPlanVisualizer.SubTreeDescriptor</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></dd>
-</dl>
-<hr>
-<br>
-<pre>private static class <span class="typeNameLabel">QueryPlanVisualizer.SubTreeDescriptor</span>
-extends java.lang.Object</pre>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#height">height</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#leftChild">leftChild</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#rightChild">rightChild</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#text">text</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#textStartPosition">textStartPosition</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#upBarPosition">upBarPosition</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#width">width</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html#SubTreeDescriptor-simpledb.QueryPlanVisualizer.SubTreeDescriptor-simpledb.QueryPlanVisualizer.SubTreeDescriptor-">SubTreeDescriptor</a></span>(<a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a>&nbsp;leftChild,
-                 <a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a>&nbsp;rightChild)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="width">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>width</h4>
-<pre>int width</pre>
-</li>
-</ul>
-<a name="upBarPosition">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>upBarPosition</h4>
-<pre>int upBarPosition</pre>
-</li>
-</ul>
-<a name="leftChild">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>leftChild</h4>
-<pre><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a> leftChild</pre>
-</li>
-</ul>
-<a name="rightChild">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rightChild</h4>
-<pre><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a> rightChild</pre>
-</li>
-</ul>
-<a name="textStartPosition">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>textStartPosition</h4>
-<pre>int textStartPosition</pre>
-</li>
-</ul>
-<a name="text">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>text</h4>
-<pre>java.lang.String text</pre>
-</li>
-</ul>
-<a name="height">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>height</h4>
-<pre>int height</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="SubTreeDescriptor-simpledb.QueryPlanVisualizer.SubTreeDescriptor-simpledb.QueryPlanVisualizer.SubTreeDescriptor-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>SubTreeDescriptor</h4>
-<pre>SubTreeDescriptor(<a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a>&nbsp;leftChild,
-                  <a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a>&nbsp;rightChild)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/QueryPlanVisualizer.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/RecordId.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" target="_top">Frames</a></li>
-<li><a href="QueryPlanVisualizer.SubTreeDescriptor.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/QueryPlanVisualizer.html lab4/javadoc/simpledb/QueryPlanVisualizer.html
--- lab3/javadoc/simpledb/QueryPlanVisualizer.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/QueryPlanVisualizer.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,528 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>QueryPlanVisualizer</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="QueryPlanVisualizer";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Query.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/QueryPlanVisualizer.html" target="_top">Frames</a></li>
-<li><a href="QueryPlanVisualizer.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class QueryPlanVisualizer" class="title">Class QueryPlanVisualizer</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.QueryPlanVisualizer</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">QueryPlanVisualizer</span>
-extends java.lang.Object</pre>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Class and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#GROUPBY">GROUPBY</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#HASH_JOIN">HASH_JOIN</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#JOIN">JOIN</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#ORDERBY">ORDERBY</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#PROJECT">PROJECT</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#RENAME">RENAME</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#SCAN">SCAN</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#SELECT">SELECT</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#SPACE">SPACE</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#QueryPlanVisualizer--">QueryPlanVisualizer</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#buildTree-int-int-simpledb.DbIterator-int-int-">buildTree</a></span>(int&nbsp;queryPlanDepth,
-         int&nbsp;currentDepth,
-         <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;queryPlan,
-         int&nbsp;currentStartPosition,
-         int&nbsp;parentUpperBarStartShift)</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#calculateQueryPlanTreeDepth-simpledb.DbIterator-">calculateQueryPlanTreeDepth</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;root)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#getQueryPlanTree-simpledb.DbIterator-">getQueryPlanTree</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;physicalPlan)</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#printQueryPlanTree-simpledb.DbIterator-java.io.PrintStream-">printQueryPlanTree</a></span>(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;physicalPlan,
-                  java.io.PrintStream&nbsp;out)</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>private void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/QueryPlanVisualizer.html#printTree-simpledb.QueryPlanVisualizer.SubTreeDescriptor-char:A-int-">printTree</a></span>(<a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a>&nbsp;root,
-         char[]&nbsp;buffer,
-         int&nbsp;width)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="JOIN">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>JOIN</h4>
-<pre>static final&nbsp;java.lang.String JOIN</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.QueryPlanVisualizer.JOIN">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="HASH_JOIN">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>HASH_JOIN</h4>
-<pre>static final&nbsp;java.lang.String HASH_JOIN</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.QueryPlanVisualizer.HASH_JOIN">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="SELECT">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>SELECT</h4>
-<pre>static final&nbsp;java.lang.String SELECT</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.QueryPlanVisualizer.SELECT">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="PROJECT">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>PROJECT</h4>
-<pre>static final&nbsp;java.lang.String PROJECT</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.QueryPlanVisualizer.PROJECT">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="RENAME">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>RENAME</h4>
-<pre>static final&nbsp;java.lang.String RENAME</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.QueryPlanVisualizer.RENAME">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="SCAN">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>SCAN</h4>
-<pre>static final&nbsp;java.lang.String SCAN</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.QueryPlanVisualizer.SCAN">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="ORDERBY">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>ORDERBY</h4>
-<pre>static final&nbsp;java.lang.String ORDERBY</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.QueryPlanVisualizer.ORDERBY">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="GROUPBY">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>GROUPBY</h4>
-<pre>static final&nbsp;java.lang.String GROUPBY</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.QueryPlanVisualizer.GROUPBY">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="SPACE">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>SPACE</h4>
-<pre>static final&nbsp;java.lang.String SPACE</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.QueryPlanVisualizer.SPACE">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="QueryPlanVisualizer--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>QueryPlanVisualizer</h4>
-<pre>public&nbsp;QueryPlanVisualizer()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="calculateQueryPlanTreeDepth-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>calculateQueryPlanTreeDepth</h4>
-<pre>private&nbsp;int&nbsp;calculateQueryPlanTreeDepth(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;root)</pre>
-</li>
-</ul>
-<a name="buildTree-int-int-simpledb.DbIterator-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>buildTree</h4>
-<pre>private&nbsp;<a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a>&nbsp;buildTree(int&nbsp;queryPlanDepth,
-                                                        int&nbsp;currentDepth,
-                                                        <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;queryPlan,
-                                                        int&nbsp;currentStartPosition,
-                                                        int&nbsp;parentUpperBarStartShift)</pre>
-</li>
-</ul>
-<a name="printTree-simpledb.QueryPlanVisualizer.SubTreeDescriptor-char:A-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>printTree</h4>
-<pre>private&nbsp;void&nbsp;printTree(<a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a>&nbsp;root,
-                       char[]&nbsp;buffer,
-                       int&nbsp;width)</pre>
-</li>
-</ul>
-<a name="getQueryPlanTree-simpledb.DbIterator-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getQueryPlanTree</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getQueryPlanTree(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;physicalPlan)</pre>
-</li>
-</ul>
-<a name="printQueryPlanTree-simpledb.DbIterator-java.io.PrintStream-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>printQueryPlanTree</h4>
-<pre>public&nbsp;void&nbsp;printQueryPlanTree(<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;physicalPlan,
-                               java.io.PrintStream&nbsp;out)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Query.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/QueryPlanVisualizer.html" target="_top">Frames</a></li>
-<li><a href="QueryPlanVisualizer.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/RecordId.html lab4/javadoc/simpledb/RecordId.html
--- lab3/javadoc/simpledb/RecordId.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/RecordId.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,399 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>RecordId</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="RecordId";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/SeqScan.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/RecordId.html" target="_top">Frames</a></li>
-<li><a href="RecordId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class RecordId" class="title">Class RecordId</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.RecordId</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">RecordId</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">A RecordId is a reference to a specific tuple on a specific page of a
- specific table.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.RecordId">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/RecordId.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/RecordId.html#RecordId-simpledb.PageId-int-">RecordId</a></span>(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid,
-        int&nbsp;tupleno)</code>
-<div class="block">Creates a new RecordId referring to the specified PageId and tuple
- number.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/RecordId.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;o)</code>
-<div class="block">Two RecordId objects are considered equal if they represent the same
- tuple.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/RecordId.html#getPageId--">getPageId</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/RecordId.html#hashCode--">hashCode</a></span>()</code>
-<div class="block">You should implement the hashCode() so that two equal RecordId instances
- (with respect to equals()) have the same hashCode().</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/RecordId.html#tupleno--">tupleno</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, finalize, getClass, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.RecordId.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="RecordId-simpledb.PageId-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>RecordId</h4>
-<pre>public&nbsp;RecordId(<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;pid,
-                int&nbsp;tupleno)</pre>
-<div class="block">Creates a new RecordId referring to the specified PageId and tuple
- number.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - the pageid of the page on which the tuple resides</dd>
-<dd><code>tupleno</code> - the tuple number within the page.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="tupleno--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tupleno</h4>
-<pre>public&nbsp;int&nbsp;tupleno()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the tuple number this RecordId references.</dd>
-</dl>
-</li>
-</ul>
-<a name="getPageId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getPageId</h4>
-<pre>public&nbsp;<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>&nbsp;getPageId()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the page id this RecordId references.</dd>
-</dl>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;o)</pre>
-<div class="block">Two RecordId objects are considered equal if they represent the same
- tuple.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>True if this and o represent the same tuple</dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>public&nbsp;int&nbsp;hashCode()</pre>
-<div class="block">You should implement the hashCode() so that two equal RecordId instances
- (with respect to equals()) have the same hashCode().</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>An int that is the same for equal RecordId objects.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/SeqScan.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/RecordId.html" target="_top">Frames</a></li>
-<li><a href="RecordId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/SeqScan.html lab4/javadoc/simpledb/SeqScan.html
--- lab3/javadoc/simpledb/SeqScan.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/SeqScan.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,567 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>SeqScan</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="SeqScan";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/RecordId.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/SimpleDb.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/SeqScan.html" target="_top">Frames</a></li>
-<li><a href="SeqScan.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class SeqScan" class="title">Class SeqScan</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.SeqScan</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">SeqScan</span>
-extends java.lang.Object
-implements <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></pre>
-<div class="block">SeqScan is an implementation of a sequential scan access method that reads
- each tuple of a table in no particular order (e.g., as they are laid out on
- disk).</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.SeqScan">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#SeqScan-simpledb.TransactionId-int-">SeqScan</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-       int&nbsp;tableid)</code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#SeqScan-simpledb.TransactionId-int-java.lang.String-">SeqScan</a></span>(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-       int&nbsp;tableid,
-       java.lang.String&nbsp;tableAlias)</code>
-<div class="block">Creates a sequential scan over the specified table as a part of the
- specified transaction.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#close--">close</a></span>()</code>
-<div class="block">Closes the iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#getAlias--">getAlias</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#getTableName--">getTableName</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc with field names from the underlying HeapFile,
- prefixed with the tableAlias string from the constructor.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#hasNext--">hasNext</a></span>()</code>
-<div class="block">Returns true if the iterator has more tuples.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#next--">next</a></span>()</code>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#reset-int-java.lang.String-">reset</a></span>(int&nbsp;tableid,
-     java.lang.String&nbsp;tableAlias)</code>
-<div class="block">Reset the tableid, and tableAlias of this operator.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SeqScan.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.SeqScan.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="SeqScan-simpledb.TransactionId-int-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>SeqScan</h4>
-<pre>public&nbsp;SeqScan(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-               int&nbsp;tableid,
-               java.lang.String&nbsp;tableAlias)</pre>
-<div class="block">Creates a sequential scan over the specified table as a part of the
- specified transaction.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tid</code> - The transaction this scan is running as a part of.</dd>
-<dd><code>tableid</code> - the table to scan.</dd>
-<dd><code>tableAlias</code> - the alias of this table (needed by the parser); the returned
-            tupleDesc should have fields with name tableAlias.fieldName
-            (note: this class is not responsible for handling a case where
-            tableAlias or fieldName are null. It shouldn't crash if they
-            are, but the resulting name can be null.fieldName,
-            tableAlias.null, or null.null).</dd>
-</dl>
-</li>
-</ul>
-<a name="SeqScan-simpledb.TransactionId-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>SeqScan</h4>
-<pre>public&nbsp;SeqScan(<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;tid,
-               int&nbsp;tableid)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTableName--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableName</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getTableName()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>return the table name of the table the operator scans. This should
-       be the actual name of the table in the catalog of the database</dd>
-</dl>
-</li>
-</ul>
-<a name="getAlias--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getAlias</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getAlias()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>Return the alias of the table this operator scans.</dd>
-</dl>
-</li>
-</ul>
-<a name="reset-int-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>reset</h4>
-<pre>public&nbsp;void&nbsp;reset(int&nbsp;tableid,
-                  java.lang.String&nbsp;tableAlias)</pre>
-<div class="block">Reset the tableid, and tableAlias of this operator.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableid</code> - the table to scan.</dd>
-<dd><code>tableAlias</code> - the alias of this table (needed by the parser); the returned
-            tupleDesc should have fields with name tableAlias.fieldName
-            (note: this class is not responsible for handling a case where
-            tableAlias or fieldName are null. It shouldn't crash if they
-            are, but the resulting name can be null.fieldName,
-            tableAlias.null, or null.null).</dd>
-</dl>
-</li>
-</ul>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block">Returns the TupleDesc with field names from the underlying HeapFile,
- prefixed with the tableAlias string from the constructor. This prefix
- becomes useful when joining tables containing a field(s) with the same
- name.  The alias and name should be separated with a "." character
- (e.g., "alias.fieldName").</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the TupleDesc with field names from the underlying HeapFile,
-         prefixed with the tableAlias string from the constructor.</dd>
-</dl>
-</li>
-</ul>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()
-                throws <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                       <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#hasNext--">DbIterator</a></code></span></div>
-<div class="block">Returns true if the iterator has more tuples.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#hasNext--">hasNext</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true f the iterator has more tuples.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()
-           throws java.util.NoSuchElementException,
-                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                  <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#next--">DbIterator</a></code></span></div>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#next--">next</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next tuple in the iteration.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if there are no more tuples.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#close--">DbIterator</a></code></span></div>
-<div class="block">Closes the iterator. When the iterator is closed, calling next(),
- hasNext(), or rewind() should fail by throwing IllegalStateException.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   java.util.NoSuchElementException,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#rewind--">rewind</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when rewind is unsupported.</dd>
-<dd><code>java.util.NoSuchElementException</code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/RecordId.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/SimpleDb.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/SeqScan.html" target="_top">Frames</a></li>
-<li><a href="SeqScan.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/SimpleDb.html lab4/javadoc/simpledb/SimpleDb.html
--- lab3/javadoc/simpledb/SimpleDb.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/SimpleDb.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,276 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>SimpleDb</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="SimpleDb";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/SeqScan.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/StringAggregator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/SimpleDb.html" target="_top">Frames</a></li>
-<li><a href="SimpleDb.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class SimpleDb" class="title">Class SimpleDb</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.SimpleDb</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">SimpleDb</span>
-extends java.lang.Object</pre>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/SimpleDb.html#SimpleDb--">SimpleDb</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/SimpleDb.html#main-java.lang.String:A-">main</a></span>(java.lang.String[]&nbsp;args)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="SimpleDb--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>SimpleDb</h4>
-<pre>public&nbsp;SimpleDb()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="main-java.lang.String:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>main</h4>
-<pre>public static&nbsp;void&nbsp;main(java.lang.String[]&nbsp;args)
-                 throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                        <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                        java.io.IOException</pre>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/SeqScan.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/StringAggregator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/SimpleDb.html" target="_top">Frames</a></li>
-<li><a href="SimpleDb.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/StringAggregator.AggregateFields.html lab4/javadoc/simpledb/StringAggregator.AggregateFields.html
--- lab3/javadoc/simpledb/StringAggregator.AggregateFields.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/StringAggregator.AggregateFields.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,287 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>StringAggregator.AggregateFields</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="StringAggregator.AggregateFields";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/StringAggregator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/StringField.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/StringAggregator.AggregateFields.html" target="_top">Frames</a></li>
-<li><a href="StringAggregator.AggregateFields.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class StringAggregator.AggregateFields" class="title">Class StringAggregator.AggregateFields</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.StringAggregator.AggregateFields</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>private class <span class="typeNameLabel">StringAggregator.AggregateFields</span>
-extends java.lang.Object</pre>
-<div class="block">A helper struct to store accumulated aggregate values.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.AggregateFields.html#count">count</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.AggregateFields.html#groupVal">groupVal</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.AggregateFields.html#AggregateFields-java.lang.String-">AggregateFields</a></span>(java.lang.String&nbsp;groupVal)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="groupVal">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>groupVal</h4>
-<pre>public&nbsp;java.lang.String groupVal</pre>
-</li>
-</ul>
-<a name="count">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>count</h4>
-<pre>public&nbsp;int count</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="AggregateFields-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>AggregateFields</h4>
-<pre>public&nbsp;AggregateFields(java.lang.String&nbsp;groupVal)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/StringAggregator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/StringField.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/StringAggregator.AggregateFields.html" target="_top">Frames</a></li>
-<li><a href="StringAggregator.AggregateFields.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Object">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/StringAggregator.html lab4/javadoc/simpledb/StringAggregator.html
--- lab3/javadoc/simpledb/StringAggregator.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/StringAggregator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,471 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>StringAggregator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="StringAggregator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/SimpleDb.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/StringAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/StringAggregator.html" target="_top">Frames</a></li>
-<li><a href="StringAggregator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class StringAggregator" class="title">Class StringAggregator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.StringAggregator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">StringAggregator</span>
-extends java.lang.Object
-implements <a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></pre>
-<div class="block">Knows how to compute some aggregate over a set of StringFields.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.StringAggregator">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Class and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.AggregateFields.html" title="class in simpledb">StringAggregator.AggregateFields</a></span></code>
-<div class="block">A helper struct to store accumulated aggregate values.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="nested.classes.inherited.from.class.simpledb.Aggregator">
-<!--   -->
-</a>
-<h3>Nested classes/interfaces inherited from interface&nbsp;simpledb.<a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></h3>
-<code><a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></li>
-</ul>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.html#afield">afield</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.html#gbfield">gbfield</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private <a href="../simpledb/Type.html" title="enum in simpledb">Type</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.html#gbfieldtype">gbfieldtype</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private java.util.HashMap&lt;java.lang.String,<a href="../simpledb/StringAggregator.AggregateFields.html" title="class in simpledb">StringAggregator.AggregateFields</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.html#groups">groups</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.html#what">what</a></span></code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="fields.inherited.from.class.simpledb.Aggregator">
-<!--   -->
-</a>
-<h3>Fields inherited from interface&nbsp;simpledb.<a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></h3>
-<code><a href="../simpledb/Aggregator.html#NO_GROUPING">NO_GROUPING</a></code></li>
-</ul>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.html#StringAggregator-int-simpledb.Type-int-simpledb.Aggregator.Op-">StringAggregator</a></span>(int&nbsp;gbfield,
-                <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;gbfieldtype,
-                int&nbsp;afield,
-                <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;what)</code>
-<div class="block">Aggregate constructor</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.html#iterator--">iterator</a></span>()</code>
-<div class="block">Create a DbIterator over group aggregate results.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringAggregator.html#mergeTupleIntoGroup-simpledb.Tuple-">mergeTupleIntoGroup</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tup)</code>
-<div class="block">Merge a new tuple into the aggregate, grouping as indicated in the constructor</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.StringAggregator.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="what">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>what</h4>
-<pre>private&nbsp;<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a> what</pre>
-</li>
-</ul>
-<a name="gbfield">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>gbfield</h4>
-<pre>private&nbsp;int gbfield</pre>
-</li>
-</ul>
-<a name="gbfieldtype">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>gbfieldtype</h4>
-<pre>private&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a> gbfieldtype</pre>
-</li>
-</ul>
-<a name="afield">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>afield</h4>
-<pre>private&nbsp;int afield</pre>
-</li>
-</ul>
-<a name="groups">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>groups</h4>
-<pre>private&nbsp;java.util.HashMap&lt;java.lang.String,<a href="../simpledb/StringAggregator.AggregateFields.html" title="class in simpledb">StringAggregator.AggregateFields</a>&gt; groups</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="StringAggregator-int-simpledb.Type-int-simpledb.Aggregator.Op-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>StringAggregator</h4>
-<pre>public&nbsp;StringAggregator(int&nbsp;gbfield,
-                        <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;gbfieldtype,
-                        int&nbsp;afield,
-                        <a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a>&nbsp;what)</pre>
-<div class="block">Aggregate constructor</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>gbfield</code> - the 0-based index of the group-by field in the tuple, or NO_GROUPING if there is no grouping</dd>
-<dd><code>gbfieldtype</code> - the type of the group by field (e.g., Type.INT_TYPE), or null if there is no grouping</dd>
-<dd><code>afield</code> - the 0-based index of the aggregate field in the tuple</dd>
-<dd><code>what</code> - aggregation operator to use -- only supports COUNT</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.lang.IllegalArgumentException</code> - if what != COUNT</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="mergeTupleIntoGroup-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>mergeTupleIntoGroup</h4>
-<pre>public&nbsp;void&nbsp;mergeTupleIntoGroup(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tup)</pre>
-<div class="block">Merge a new tuple into the aggregate, grouping as indicated in the constructor</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Aggregator.html#mergeTupleIntoGroup-simpledb.Tuple-">mergeTupleIntoGroup</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tup</code> - the Tuple containing an aggregate field and a group-by field</dd>
-</dl>
-</li>
-</ul>
-<a name="iterator--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>iterator</h4>
-<pre>public&nbsp;<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>&nbsp;iterator()</pre>
-<div class="block">Create a DbIterator over group aggregate results.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Aggregator.html#iterator--">iterator</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a DbIterator whose tuples are the pair (groupVal,
-   aggregateVal) if using group, or a single (aggregateVal) if no
-   grouping. The aggregateVal is determined by the type of
-   aggregate specified in the constructor.</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/TupleIterator.html" title="class in simpledb"><code>for a possible helper</code></a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/SimpleDb.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/StringAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/StringAggregator.html" target="_top">Frames</a></li>
-<li><a href="StringAggregator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/StringField.html lab4/javadoc/simpledb/StringField.html
--- lab3/javadoc/simpledb/StringField.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/StringField.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,500 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>StringField</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="StringField";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/StringAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/StringHistogram.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/StringField.html" target="_top">Frames</a></li>
-<li><a href="StringField.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class StringField" class="title">Class StringField</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.StringField</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">StringField</span>
-extends java.lang.Object
-implements <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></pre>
-<div class="block">Instance of Field that stores a single String of a fixed length.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.StringField">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#maxSize">maxSize</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#value">value</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#StringField-java.lang.String-int-">StringField</a></span>(java.lang.String&nbsp;s,
-           int&nbsp;maxSize)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#compare-simpledb.Predicate.Op-simpledb.Field-">compare</a></span>(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-       <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;val)</code>
-<div class="block">Compare the specified field to the value of this Field.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;field)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/Type.html" title="enum in simpledb">Type</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#getType--">getType</a></span>()</code>
-<div class="block">Returns the type of this field (see <a href="../simpledb/Type.html#INT_TYPE"><code>Type.INT_TYPE</code></a> or <a href="../simpledb/Type.html#STRING_TYPE"><code>Type.STRING_TYPE</code></a></div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#getValue--">getValue</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#hashCode--">hashCode</a></span>()</code>
-<div class="block">Hash code.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#serialize-java.io.DataOutputStream-">serialize</a></span>(java.io.DataOutputStream&nbsp;dos)</code>
-<div class="block">Write this string to dos.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringField.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.StringField.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="value">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>value</h4>
-<pre>private final&nbsp;java.lang.String value</pre>
-</li>
-</ul>
-<a name="maxSize">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>maxSize</h4>
-<pre>private final&nbsp;int maxSize</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="StringField-java.lang.String-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>StringField</h4>
-<pre>public&nbsp;StringField(java.lang.String&nbsp;s,
-                   int&nbsp;maxSize)</pre>
-<div class="block">Constructor.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>s</code> - The value of this field.</dd>
-<dd><code>maxSize</code> - The maximum size of this string</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getValue--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getValue</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getValue()</pre>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#toString--">toString</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>public&nbsp;int&nbsp;hashCode()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Field.html#hashCode--">Field</a></code></span></div>
-<div class="block">Hash code.
- Different Field objects representing the same value should probably
- return the same hashCode.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#hashCode--">hashCode</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;field)</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#equals-java.lang.Object-">equals</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="serialize-java.io.DataOutputStream-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialize</h4>
-<pre>public&nbsp;void&nbsp;serialize(java.io.DataOutputStream&nbsp;dos)
-               throws java.io.IOException</pre>
-<div class="block">Write this string to dos. Always writes maxSize + 4 bytes to the passed
- in dos. First four bytes are string length, next bytes are string, with
- remainder padded with 0 to maxSize.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#serialize-java.io.DataOutputStream-">serialize</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>dos</code> - Where the string is written</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><code>DataOutputStream</code></dd>
-</dl>
-</li>
-</ul>
-<a name="compare-simpledb.Predicate.Op-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>compare</h4>
-<pre>public&nbsp;boolean&nbsp;compare(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                       <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;val)</pre>
-<div class="block">Compare the specified field to the value of this Field. Return semantics
- are as specified by Field.compare</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#compare-simpledb.Predicate.Op-simpledb.Field-">compare</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>op</code> - The operator</dd>
-<dd><code>val</code> - The value to compare this Field to</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>Whether or not the comparison yields true.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>IllegalCastException</code> - if val is not a StringField</dd>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../simpledb/Field.html#compare-simpledb.Predicate.Op-simpledb.Field-"><code>Field.compare(simpledb.Predicate.Op, simpledb.Field)</code></a></dd>
-</dl>
-</li>
-</ul>
-<a name="getType--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>getType</h4>
-<pre>public&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;getType()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/Field.html#getType--">Field</a></code></span></div>
-<div class="block">Returns the type of this field (see <a href="../simpledb/Type.html#INT_TYPE"><code>Type.INT_TYPE</code></a> or <a href="../simpledb/Type.html#STRING_TYPE"><code>Type.STRING_TYPE</code></a></div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/Field.html#getType--">getType</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the Type for this Field</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/StringAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/StringHistogram.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/StringField.html" target="_top">Frames</a></li>
-<li><a href="StringField.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/StringHistogram.html lab4/javadoc/simpledb/StringHistogram.html
--- lab3/javadoc/simpledb/StringHistogram.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/StringHistogram.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,416 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>StringHistogram</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="StringHistogram";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/StringField.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TableStats.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/StringHistogram.html" target="_top">Frames</a></li>
-<li><a href="StringHistogram.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class StringHistogram" class="title">Class StringHistogram</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.StringHistogram</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">StringHistogram</span>
-extends java.lang.Object</pre>
-<div class="block">A class to represent a fixed-width histogram over a single String-based
- field.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/IntHistogram.html" title="class in simpledb">IntHistogram</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringHistogram.html#hist">hist</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/StringHistogram.html#StringHistogram-int-">StringHistogram</a></span>(int&nbsp;buckets)</code>
-<div class="block">Create a new StringHistogram with a specified number of buckets.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringHistogram.html#addValue-java.lang.String-">addValue</a></span>(java.lang.String&nbsp;s)</code>
-<div class="block">Add a new value to thte histogram</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringHistogram.html#avgSelectivity--">avgSelectivity</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringHistogram.html#estimateSelectivity-simpledb.Predicate.Op-java.lang.String-">estimateSelectivity</a></span>(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                   java.lang.String&nbsp;s)</code>
-<div class="block">Estimate the selectivity (as a double between 0 and 1) of the specified
- predicate over the specified string</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringHistogram.html#maxVal--">maxVal</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringHistogram.html#minVal--">minVal</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>private int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/StringHistogram.html#stringToInt-java.lang.String-">stringToInt</a></span>(java.lang.String&nbsp;s)</code>
-<div class="block">Convert a string to an integer, with the property that if the return
- value(s1) < return value(s2), then s1 < s2</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="hist">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>hist</h4>
-<pre>final&nbsp;<a href="../simpledb/IntHistogram.html" title="class in simpledb">IntHistogram</a> hist</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="StringHistogram-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>StringHistogram</h4>
-<pre>public&nbsp;StringHistogram(int&nbsp;buckets)</pre>
-<div class="block">Create a new StringHistogram with a specified number of buckets.
- <p>
- Our implementation is written in terms of an IntHistogram by converting
- each String to an integer.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>buckets</code> - the number of buckets</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="stringToInt-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>stringToInt</h4>
-<pre>private&nbsp;int&nbsp;stringToInt(java.lang.String&nbsp;s)</pre>
-<div class="block">Convert a string to an integer, with the property that if the return
- value(s1) < return value(s2), then s1 < s2</div>
-</li>
-</ul>
-<a name="maxVal--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>maxVal</h4>
-<pre>int&nbsp;maxVal()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the maximum value indexed by the histogram</dd>
-</dl>
-</li>
-</ul>
-<a name="minVal--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>minVal</h4>
-<pre>int&nbsp;minVal()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the minimum value indexed by the histogram</dd>
-</dl>
-</li>
-</ul>
-<a name="addValue-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>addValue</h4>
-<pre>public&nbsp;void&nbsp;addValue(java.lang.String&nbsp;s)</pre>
-<div class="block">Add a new value to thte histogram</div>
-</li>
-</ul>
-<a name="estimateSelectivity-simpledb.Predicate.Op-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>estimateSelectivity</h4>
-<pre>public&nbsp;double&nbsp;estimateSelectivity(<a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                                  java.lang.String&nbsp;s)</pre>
-<div class="block">Estimate the selectivity (as a double between 0 and 1) of the specified
- predicate over the specified string</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>op</code> - The operation being applied</dd>
-<dd><code>s</code> - The string to apply op to</dd>
-</dl>
-</li>
-</ul>
-<a name="avgSelectivity--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>avgSelectivity</h4>
-<pre>public&nbsp;double&nbsp;avgSelectivity()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the average selectivity of this histogram.
- 
-         This is not an indispensable method to implement the basic join
-         optimization. It may be needed if you want to implement a more
-         efficient optimization</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/StringField.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TableStats.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/StringHistogram.html" target="_top">Frames</a></li>
-<li><a href="StringHistogram.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/TableStats.html lab4/javadoc/simpledb/TableStats.html
--- lab3/javadoc/simpledb/TableStats.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/TableStats.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,539 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>TableStats</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="TableStats";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":9,"i2":10,"i3":10,"i4":10,"i5":9,"i6":9,"i7":9,"i8":9,"i9":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/StringHistogram.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Transaction.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TableStats.html" target="_top">Frames</a></li>
-<li><a href="TableStats.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class TableStats" class="title">Class TableStats</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.TableStats</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">TableStats</span>
-extends java.lang.Object</pre>
-<div class="block">TableStats represents statistics (e.g., histograms) about base tables in a
- query. 
- 
- This class is not needed in implementing lab1 and lab2.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#IOCOSTPERPAGE">IOCOSTPERPAGE</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#NUM_HIST_BINS">NUM_HIST_BINS</a></span></code>
-<div class="block">Number of bins for the histogram.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static java.util.concurrent.ConcurrentHashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#statsMap">statsMap</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#TableStats-int-int-">TableStats</a></span>(int&nbsp;tableid,
-          int&nbsp;ioCostPerPage)</code>
-<div class="block">Create a new TableStats object, that keeps track of statistics on each
- column of a table</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#avgSelectivity-int-simpledb.Predicate.Op-">avgSelectivity</a></span>(int&nbsp;field,
-              <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op)</code>
-<div class="block">The average selectivity of the field under op.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#computeStatistics--">computeStatistics</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#estimateScanCost--">estimateScanCost</a></span>()</code>
-<div class="block">Estimates the cost of sequentially scanning the file, given that the cost
- to read a page is costPerPageIO.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>double</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#estimateSelectivity-int-simpledb.Predicate.Op-simpledb.Field-">estimateSelectivity</a></span>(int&nbsp;field,
-                   <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                   <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;constant)</code>
-<div class="block">Estimate the selectivity of predicate <tt>field op constant</tt> on the
- table.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#estimateTableCardinality-double-">estimateTableCardinality</a></span>(double&nbsp;selectivityFactor)</code>
-<div class="block">This method returns the number of tuples in the relation, given that a
- predicate with selectivity selectivityFactor is applied.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>static java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#getStatsMap--">getStatsMap</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#getTableStats-java.lang.String-">getTableStats</a></span>(java.lang.String&nbsp;tablename)</code>&nbsp;</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#setStatsMap-java.util.HashMap-">setStatsMap</a></span>(java.util.HashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;s)</code>&nbsp;</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#setTableStats-java.lang.String-simpledb.TableStats-">setTableStats</a></span>(java.lang.String&nbsp;tablename,
-             <a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&nbsp;stats)</code>&nbsp;</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TableStats.html#totalTuples--">totalTuples</a></span>()</code>
-<div class="block">return the total number of tuples in this table</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="statsMap">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>statsMap</h4>
-<pre>private static final&nbsp;java.util.concurrent.ConcurrentHashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt; statsMap</pre>
-</li>
-</ul>
-<a name="IOCOSTPERPAGE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>IOCOSTPERPAGE</h4>
-<pre>static final&nbsp;int IOCOSTPERPAGE</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.TableStats.IOCOSTPERPAGE">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="NUM_HIST_BINS">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>NUM_HIST_BINS</h4>
-<pre>static final&nbsp;int NUM_HIST_BINS</pre>
-<div class="block">Number of bins for the histogram. Feel free to increase this value over
- 100, though our tests assume that you have at least 100 bins in your
- histograms.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.TableStats.NUM_HIST_BINS">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="TableStats-int-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>TableStats</h4>
-<pre>public&nbsp;TableStats(int&nbsp;tableid,
-                  int&nbsp;ioCostPerPage)</pre>
-<div class="block">Create a new TableStats object, that keeps track of statistics on each
- column of a table</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tableid</code> - The table over which to compute statistics</dd>
-<dd><code>ioCostPerPage</code> - The cost per page of IO. This doesn't differentiate between
-            sequential-scan IO and disk seeks.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTableStats-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTableStats</h4>
-<pre>public static&nbsp;<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&nbsp;getTableStats(java.lang.String&nbsp;tablename)</pre>
-</li>
-</ul>
-<a name="setTableStats-java.lang.String-simpledb.TableStats-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setTableStats</h4>
-<pre>public static&nbsp;void&nbsp;setTableStats(java.lang.String&nbsp;tablename,
-                                 <a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&nbsp;stats)</pre>
-</li>
-</ul>
-<a name="setStatsMap-java.util.HashMap-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setStatsMap</h4>
-<pre>public static&nbsp;void&nbsp;setStatsMap(java.util.HashMap&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;s)</pre>
-</li>
-</ul>
-<a name="getStatsMap--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getStatsMap</h4>
-<pre>public static&nbsp;java.util.Map&lt;java.lang.String,<a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a>&gt;&nbsp;getStatsMap()</pre>
-</li>
-</ul>
-<a name="computeStatistics--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>computeStatistics</h4>
-<pre>public static&nbsp;void&nbsp;computeStatistics()</pre>
-</li>
-</ul>
-<a name="estimateScanCost--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>estimateScanCost</h4>
-<pre>public&nbsp;double&nbsp;estimateScanCost()</pre>
-<div class="block">Estimates the cost of sequentially scanning the file, given that the cost
- to read a page is costPerPageIO. You can assume that there are no seeks
- and that no pages are in the buffer pool.
- 
- Also, assume that your hard drive can only read entire pages at once, so
- if the last page of the table only has one tuple on it, it's just as
- expensive to read as a full page. (Most real hard drives can't
- efficiently address regions smaller than a page at a time.)</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The estimated cost of scanning the table.</dd>
-</dl>
-</li>
-</ul>
-<a name="estimateTableCardinality-double-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>estimateTableCardinality</h4>
-<pre>public&nbsp;int&nbsp;estimateTableCardinality(double&nbsp;selectivityFactor)</pre>
-<div class="block">This method returns the number of tuples in the relation, given that a
- predicate with selectivity selectivityFactor is applied.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>selectivityFactor</code> - The selectivity of any predicates over the table</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The estimated cardinality of the scan with the specified
-         selectivityFactor</dd>
-</dl>
-</li>
-</ul>
-<a name="avgSelectivity-int-simpledb.Predicate.Op-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>avgSelectivity</h4>
-<pre>public&nbsp;double&nbsp;avgSelectivity(int&nbsp;field,
-                             <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op)</pre>
-<div class="block">The average selectivity of the field under op.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>field</code> - the index of the field</dd>
-<dd><code>op</code> - the operator in the predicate
- The semantic of the method is that, given the table, and then given a
- tuple, of which we do not know the value of the field, return the
- expected selectivity. You may estimate this value from the histograms.</dd>
-</dl>
-</li>
-</ul>
-<a name="estimateSelectivity-int-simpledb.Predicate.Op-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>estimateSelectivity</h4>
-<pre>public&nbsp;double&nbsp;estimateSelectivity(int&nbsp;field,
-                                  <a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a>&nbsp;op,
-                                  <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;constant)</pre>
-<div class="block">Estimate the selectivity of predicate <tt>field op constant</tt> on the
- table.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>field</code> - The field over which the predicate ranges</dd>
-<dd><code>op</code> - The logical operation in the predicate</dd>
-<dd><code>constant</code> - The value against which the field is compared</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The estimated selectivity (fraction of tuples that satisfy) the
-         predicate</dd>
-</dl>
-</li>
-</ul>
-<a name="totalTuples--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>totalTuples</h4>
-<pre>public&nbsp;int&nbsp;totalTuples()</pre>
-<div class="block">return the total number of tuples in this table</div>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/StringHistogram.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Transaction.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TableStats.html" target="_top">Frames</a></li>
-<li><a href="TableStats.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Transaction.html lab4/javadoc/simpledb/Transaction.html
--- lab3/javadoc/simpledb/Transaction.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Transaction.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,397 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Transaction</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Transaction";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TableStats.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Transaction.html" target="_top">Frames</a></li>
-<li><a href="Transaction.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Transaction" class="title">Class Transaction</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Transaction</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Transaction</span>
-extends java.lang.Object</pre>
-<div class="block">Transaction encapsulates information about the state of
- a transaction and manages transaction commit / abort.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Transaction.html#started">started</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private <a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Transaction.html#tid">tid</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Transaction.html#Transaction--">Transaction</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Transaction.html#abort--">abort</a></span>()</code>
-<div class="block">Finish the transaction</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Transaction.html#commit--">commit</a></span>()</code>
-<div class="block">Finish the transaction</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Transaction.html#getId--">getId</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Transaction.html#start--">start</a></span>()</code>
-<div class="block">Start the transaction running</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Transaction.html#transactionComplete-boolean-">transactionComplete</a></span>(boolean&nbsp;abort)</code>
-<div class="block">Handle the details of transaction commit / abort</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="tid">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tid</h4>
-<pre>private final&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a> tid</pre>
-</li>
-</ul>
-<a name="started">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>started</h4>
-<pre>volatile&nbsp;boolean started</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Transaction--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Transaction</h4>
-<pre>public&nbsp;Transaction()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="start--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>start</h4>
-<pre>public&nbsp;void&nbsp;start()</pre>
-<div class="block">Start the transaction running</div>
-</li>
-</ul>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>public&nbsp;<a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a>&nbsp;getId()</pre>
-</li>
-</ul>
-<a name="commit--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>commit</h4>
-<pre>public&nbsp;void&nbsp;commit()
-            throws java.io.IOException</pre>
-<div class="block">Finish the transaction</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="abort--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>abort</h4>
-<pre>public&nbsp;void&nbsp;abort()
-           throws java.io.IOException</pre>
-<div class="block">Finish the transaction</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="transactionComplete-boolean-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>transactionComplete</h4>
-<pre>public&nbsp;void&nbsp;transactionComplete(boolean&nbsp;abort)
-                         throws java.io.IOException</pre>
-<div class="block">Handle the details of transaction commit / abort</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TableStats.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Transaction.html" target="_top">Frames</a></li>
-<li><a href="Transaction.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/TransactionAbortedException.html lab4/javadoc/simpledb/TransactionAbortedException.html
--- lab3/javadoc/simpledb/TransactionAbortedException.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/TransactionAbortedException.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,299 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>TransactionAbortedException</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="TransactionAbortedException";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Transaction.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TransactionId.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TransactionAbortedException.html" target="_top">Frames</a></li>
-<li><a href="TransactionAbortedException.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Throwable">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class TransactionAbortedException" class="title">Class TransactionAbortedException</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Throwable</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Exception</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.TransactionAbortedException</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">TransactionAbortedException</span>
-extends java.lang.Exception</pre>
-<div class="block">Exception that is thrown when a transaction has aborted.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.TransactionAbortedException">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TransactionAbortedException.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/TransactionAbortedException.html#TransactionAbortedException--">TransactionAbortedException</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Throwable">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Throwable</h3>
-<code>addSuppressed, fillInStackTrace, getCause, getLocalizedMessage, getMessage, getStackTrace, getSuppressed, initCause, printStackTrace, printStackTrace, printStackTrace, setStackTrace, toString</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.TransactionAbortedException.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="TransactionAbortedException--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>TransactionAbortedException</h4>
-<pre>public&nbsp;TransactionAbortedException()</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Transaction.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TransactionId.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TransactionAbortedException.html" target="_top">Frames</a></li>
-<li><a href="TransactionAbortedException.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#methods.inherited.from.class.java.lang.Throwable">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li>Method</li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/TransactionId.html lab4/javadoc/simpledb/TransactionId.html
--- lab3/javadoc/simpledb/TransactionId.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/TransactionId.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,377 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>TransactionId</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="TransactionId";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Tuple.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TransactionId.html" target="_top">Frames</a></li>
-<li><a href="TransactionId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class TransactionId" class="title">Class TransactionId</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.TransactionId</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">TransactionId</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">TransactionId is a class that contains the identifier of a transaction.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.TransactionId">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static java.util.concurrent.atomic.AtomicLong</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TransactionId.html#counter">counter</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TransactionId.html#myid">myid</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TransactionId.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/TransactionId.html#TransactionId--">TransactionId</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TransactionId.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;obj)</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TransactionId.html#getId--">getId</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TransactionId.html#hashCode--">hashCode</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, finalize, getClass, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.TransactionId.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="counter">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>counter</h4>
-<pre>static&nbsp;java.util.concurrent.atomic.AtomicLong counter</pre>
-</li>
-</ul>
-<a name="myid">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>myid</h4>
-<pre>final&nbsp;long myid</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="TransactionId--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>TransactionId</h4>
-<pre>public&nbsp;TransactionId()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getId</h4>
-<pre>public&nbsp;long&nbsp;getId()</pre>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;obj)</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>public&nbsp;int&nbsp;hashCode()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Tuple.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TransactionId.html" target="_top">Frames</a></li>
-<li><a href="TransactionId.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Tuple.html lab4/javadoc/simpledb/Tuple.html
--- lab3/javadoc/simpledb/Tuple.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Tuple.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,469 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Tuple</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Tuple";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TransactionId.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleArrayIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Tuple.html" target="_top">Frames</a></li>
-<li><a href="Tuple.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Tuple" class="title">Class Tuple</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Tuple</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Tuple</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">Tuple maintains information about the contents of a tuple. Tuples have a
- specified schema specified by a TupleDesc object and contain Field objects
- with the data for each field.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.Tuple">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#Tuple-simpledb.TupleDesc-">Tuple</a></span>(<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td)</code>
-<div class="block">Create a new tuple with the specified schema (type).</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>java.util.Iterator&lt;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#fields--">fields</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#getField-int-">getField</a></span>(int&nbsp;i)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code><a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#getRecordId--">getRecordId</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#getTupleDesc--">getTupleDesc</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#resetTupleDesc-simpledb.TupleDesc-">resetTupleDesc</a></span>(<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td)</code>
-<div class="block">reset the TupleDesc of thi tuple</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#setField-int-simpledb.Field-">setField</a></span>(int&nbsp;i,
-        <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;f)</code>
-<div class="block">Change the value of the ith field of this tuple.</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#setRecordId-simpledb.RecordId-">setRecordId</a></span>(<a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a>&nbsp;rid)</code>
-<div class="block">Set the RecordId information for this tuple.</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Tuple.html#toString--">toString</a></span>()</code>
-<div class="block">Returns the contents of this Tuple as a string.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Tuple.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Tuple-simpledb.TupleDesc-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Tuple</h4>
-<pre>public&nbsp;Tuple(<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td)</pre>
-<div class="block">Create a new tuple with the specified schema (type).</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>td</code> - the schema of this tuple. It must be a valid TupleDesc
-            instance with at least one field.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The TupleDesc representing the schema of this tuple.</dd>
-</dl>
-</li>
-</ul>
-<a name="getRecordId--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getRecordId</h4>
-<pre>public&nbsp;<a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a>&nbsp;getRecordId()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The RecordId representing the location of this tuple on disk. May
-         be null.</dd>
-</dl>
-</li>
-</ul>
-<a name="setRecordId-simpledb.RecordId-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setRecordId</h4>
-<pre>public&nbsp;void&nbsp;setRecordId(<a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a>&nbsp;rid)</pre>
-<div class="block">Set the RecordId information for this tuple.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>rid</code> - the new RecordId for this tuple.</dd>
-</dl>
-</li>
-</ul>
-<a name="setField-int-simpledb.Field-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>setField</h4>
-<pre>public&nbsp;void&nbsp;setField(int&nbsp;i,
-                     <a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;f)</pre>
-<div class="block">Change the value of the ith field of this tuple.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - index of the field to change. It must be a valid index.</dd>
-<dd><code>f</code> - new value for the field.</dd>
-</dl>
-</li>
-</ul>
-<a name="getField-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getField</h4>
-<pre>public&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;getField(int&nbsp;i)</pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - field index to return. Must be a valid index.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the value of the ith field, or null if it has not been set.</dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<div class="block">Returns the contents of this Tuple as a string. Note that to pass the
- system tests, the format needs to be as follows:
-
- column1\tcolumn2\tcolumn3\t...\tcolumnN
-
- where \t is any whitespace (except a newline)</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="fields--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fields</h4>
-<pre>public&nbsp;java.util.Iterator&lt;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&gt;&nbsp;fields()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>An iterator which iterates over all the fields of this tuple</dd>
-</dl>
-</li>
-</ul>
-<a name="resetTupleDesc-simpledb.TupleDesc-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>resetTupleDesc</h4>
-<pre>public&nbsp;void&nbsp;resetTupleDesc(<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td)</pre>
-<div class="block">reset the TupleDesc of thi tuple</div>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TransactionId.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleArrayIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Tuple.html" target="_top">Frames</a></li>
-<li><a href="Tuple.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/TupleArrayIterator.html lab4/javadoc/simpledb/TupleArrayIterator.html
--- lab3/javadoc/simpledb/TupleArrayIterator.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/TupleArrayIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,478 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>TupleArrayIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="TupleArrayIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Tuple.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleComparator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleArrayIterator.html" target="_top">Frames</a></li>
-<li><a href="TupleArrayIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class TupleArrayIterator" class="title">Class TupleArrayIterator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.TupleArrayIterator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>class <span class="typeNameLabel">TupleArrayIterator</span>
-extends java.lang.Object
-implements <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></pre>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#it">it</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#tups">tups</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#TupleArrayIterator-java.util.ArrayList-">TupleArrayIterator</a></span>(java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;tups)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#close--">close</a></span>()</code>
-<div class="block">Closes the iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#hasNext--">hasNext</a></span>()</code>
-<div class="block">Returns true if the iterator has more tuples.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#next--">next</a></span>()</code>
-<div class="block">Gets the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleArrayIterator.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.TupleArrayIterator.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="tups">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tups</h4>
-<pre>java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt; tups</pre>
-</li>
-</ul>
-<a name="it">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>it</h4>
-<pre>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt; it</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="TupleArrayIterator-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>TupleArrayIterator</h4>
-<pre>public&nbsp;TupleArrayIterator(java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;tups)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()
-          throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                 <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - when there are problems opening/accessing the database.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()
-                throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                       <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#hasNext--">DbIterator</a></code></span></div>
-<div class="block">Returns true if the iterator has more tuples.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#hasNext--">hasNext</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if the iterator has more items.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()
-           throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                  <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a>,
-                  java.util.NoSuchElementException</pre>
-<div class="block">Gets the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#next--">next</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The next tuple in the iterator, or null if there are no more
-         tuples.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if there are no more tuples.</dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()
-            throws <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                   <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#rewind--">rewind</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code> - When rewind is unsupported.</dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the TupleDesc associated with this DbIterator.</dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block">Closes the iterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Tuple.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleComparator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleArrayIterator.html" target="_top">Frames</a></li>
-<li><a href="TupleArrayIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/TupleComparator.html lab4/javadoc/simpledb/TupleComparator.html
--- lab3/javadoc/simpledb/TupleComparator.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/TupleComparator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,336 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>TupleComparator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="TupleComparator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleArrayIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleDesc.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleComparator.html" target="_top">Frames</a></li>
-<li><a href="TupleComparator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class TupleComparator" class="title">Class TupleComparator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.TupleComparator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.util.Comparator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</dd>
-</dl>
-<hr>
-<br>
-<pre>class <span class="typeNameLabel">TupleComparator</span>
-extends java.lang.Object
-implements java.util.Comparator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</pre>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleComparator.html#asc">asc</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleComparator.html#field">field</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/TupleComparator.html#TupleComparator-int-boolean-">TupleComparator</a></span>(int&nbsp;field,
-               boolean&nbsp;asc)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleComparator.html#compare-simpledb.Tuple-simpledb.Tuple-">compare</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;o1,
-       <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;o2)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.util.Comparator">
-<!--   -->
-</a>
-<h3>Methods inherited from interface&nbsp;java.util.Comparator</h3>
-<code>comparing, comparing, comparingDouble, comparingInt, comparingLong, equals, naturalOrder, nullsFirst, nullsLast, reversed, reverseOrder, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="field">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>field</h4>
-<pre>int field</pre>
-</li>
-</ul>
-<a name="asc">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>asc</h4>
-<pre>boolean asc</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="TupleComparator-int-boolean-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>TupleComparator</h4>
-<pre>public&nbsp;TupleComparator(int&nbsp;field,
-                       boolean&nbsp;asc)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="compare-simpledb.Tuple-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>compare</h4>
-<pre>public&nbsp;int&nbsp;compare(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;o1,
-                   <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;o2)</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code>compare</code>&nbsp;in interface&nbsp;<code>java.util.Comparator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleArrayIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleDesc.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleComparator.html" target="_top">Frames</a></li>
-<li><a href="TupleComparator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/TupleDesc.TDItem.html lab4/javadoc/simpledb/TupleDesc.TDItem.html
--- lab3/javadoc/simpledb/TupleDesc.TDItem.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/TupleDesc.TDItem.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,359 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>TupleDesc.TDItem</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="TupleDesc.TDItem";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleDesc.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleDesc.TDItem.html" target="_top">Frames</a></li>
-<li><a href="TupleDesc.TDItem.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class TupleDesc.TDItem" class="title">Class TupleDesc.TDItem</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.TupleDesc.TDItem</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<dl>
-<dt>Enclosing class:</dt>
-<dd><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public static class <span class="typeNameLabel">TupleDesc.TDItem</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">A help class to facilitate organizing the information of each field</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.TupleDesc.TDItem">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.TDItem.html#fieldName">fieldName</a></span></code>
-<div class="block">The name of the field</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Type.html" title="enum in simpledb">Type</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.TDItem.html#fieldType">fieldType</a></span></code>
-<div class="block">The type of the field</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.TDItem.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.TDItem.html#TDItem-simpledb.Type-java.lang.String-">TDItem</a></span>(<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;t,
-      java.lang.String&nbsp;n)</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.TDItem.html#toString--">toString</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.TupleDesc.TDItem.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="fieldType">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fieldType</h4>
-<pre>public final&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a> fieldType</pre>
-<div class="block">The type of the field</div>
-</li>
-</ul>
-<a name="fieldName">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>fieldName</h4>
-<pre>public final&nbsp;java.lang.String fieldName</pre>
-<div class="block">The name of the field</div>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="TDItem-simpledb.Type-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>TDItem</h4>
-<pre>public&nbsp;TDItem(<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;t,
-              java.lang.String&nbsp;n)</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleDesc.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleIterator.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleDesc.TDItem.html" target="_top">Frames</a></li>
-<li><a href="TupleDesc.TDItem.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/TupleDesc.html lab4/javadoc/simpledb/TupleDesc.html
--- lab3/javadoc/simpledb/TupleDesc.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/TupleDesc.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,583 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>TupleDesc</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="TupleDesc";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":9,"i8":10,"i9":10};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleComparator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleDesc.TDItem.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleDesc.html" target="_top">Frames</a></li>
-<li><a href="TupleDesc.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class TupleDesc" class="title">Class TupleDesc</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.TupleDesc</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable</dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">TupleDesc</span>
-extends java.lang.Object
-implements java.io.Serializable</pre>
-<div class="block">TupleDesc describes the schema of a tuple.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.TupleDesc">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Class and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a></span></code>
-<div class="block">A help class to facilitate organizing the information of each field</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#TupleDesc-simpledb.Type:A-">TupleDesc</a></span>(<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr)</code>
-<div class="block">Constructor.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#TupleDesc-simpledb.Type:A-java.lang.String:A-">TupleDesc</a></span>(<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-         java.lang.String[]&nbsp;fieldAr)</code>
-<div class="block">Create a new TupleDesc with typeAr.length fields with fields of the
- specified types, with associated named fields.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;o)</code>
-<div class="block">Compares the specified object with this TupleDesc for equality.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#fieldNameToIndex-java.lang.String-">fieldNameToIndex</a></span>(java.lang.String&nbsp;name)</code>
-<div class="block">Find the index of the field with a given name.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#getFieldName-int-">getFieldName</a></span>(int&nbsp;i)</code>
-<div class="block">Gets the (possibly null) field name of the ith field of this TupleDesc.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Type.html" title="enum in simpledb">Type</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#getFieldType-int-">getFieldType</a></span>(int&nbsp;i)</code>
-<div class="block">Gets the type of the ith field of this TupleDesc.</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#getSize--">getSize</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#hashCode--">hashCode</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>java.util.Iterator&lt;<a href="../simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#iterator--">iterator</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#merge-simpledb.TupleDesc-simpledb.TupleDesc-">merge</a></span>(<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td1,
-     <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td2)</code>
-<div class="block">Merge two TupleDescs into one, with td1.numFields + td2.numFields fields,
- with the first td1.numFields coming from td1 and the remaining from td2.</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#numFields--">numFields</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleDesc.html#toString--">toString</a></span>()</code>
-<div class="block">Returns a String describing this descriptor.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.TupleDesc.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="TupleDesc-simpledb.Type:A-java.lang.String:A-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>TupleDesc</h4>
-<pre>public&nbsp;TupleDesc(<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr,
-                 java.lang.String[]&nbsp;fieldAr)</pre>
-<div class="block">Create a new TupleDesc with typeAr.length fields with fields of the
- specified types, with associated named fields.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>typeAr</code> - array specifying the number of and types of fields in this
-            TupleDesc. It must contain at least one entry.</dd>
-<dd><code>fieldAr</code> - array specifying the names of the fields. Note that names may
-            be null.</dd>
-</dl>
-</li>
-</ul>
-<a name="TupleDesc-simpledb.Type:A-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>TupleDesc</h4>
-<pre>public&nbsp;TupleDesc(<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;typeAr)</pre>
-<div class="block">Constructor. Create a new tuple desc with typeAr.length fields with
- fields of the specified types, with anonymous (unnamed) fields.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>typeAr</code> - array specifying the number of and types of fields in this
-            TupleDesc. It must contain at least one entry.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="iterator--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>iterator</h4>
-<pre>public&nbsp;java.util.Iterator&lt;<a href="../simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a>&gt;&nbsp;iterator()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>An iterator which iterates over all the field TDItems
-        that are included in this TupleDesc</dd>
-</dl>
-</li>
-</ul>
-<a name="numFields--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>numFields</h4>
-<pre>public&nbsp;int&nbsp;numFields()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the number of fields in this TupleDesc</dd>
-</dl>
-</li>
-</ul>
-<a name="getFieldName-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getFieldName</h4>
-<pre>public&nbsp;java.lang.String&nbsp;getFieldName(int&nbsp;i)
-                              throws java.util.NoSuchElementException</pre>
-<div class="block">Gets the (possibly null) field name of the ith field of this TupleDesc.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - index of the field name to return. It must be a valid index.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the name of the ith field</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if i is not a valid field reference.</dd>
-</dl>
-</li>
-</ul>
-<a name="getFieldType-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getFieldType</h4>
-<pre>public&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;getFieldType(int&nbsp;i)
-                  throws java.util.NoSuchElementException</pre>
-<div class="block">Gets the type of the ith field of this TupleDesc.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>i</code> - The index of the field to get the type of. It must be a valid
-            index.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the type of the ith field</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if i is not a valid field reference.</dd>
-</dl>
-</li>
-</ul>
-<a name="fieldNameToIndex-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>fieldNameToIndex</h4>
-<pre>public&nbsp;int&nbsp;fieldNameToIndex(java.lang.String&nbsp;name)
-                     throws java.util.NoSuchElementException</pre>
-<div class="block">Find the index of the field with a given name.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>name</code> - name of the field.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the index of the field that is first to have the given name.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.util.NoSuchElementException</code> - if no field with a matching name is found.</dd>
-</dl>
-</li>
-</ul>
-<a name="getSize--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getSize</h4>
-<pre>public&nbsp;int&nbsp;getSize()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>The size (in bytes) of tuples corresponding to this TupleDesc.
-         Note that tuples from a given TupleDesc are of a fixed size.</dd>
-</dl>
-</li>
-</ul>
-<a name="merge-simpledb.TupleDesc-simpledb.TupleDesc-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>merge</h4>
-<pre>public static&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;merge(<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td1,
-                              <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td2)</pre>
-<div class="block">Merge two TupleDescs into one, with td1.numFields + td2.numFields fields,
- with the first td1.numFields coming from td1 and the remaining from td2.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>td1</code> - The TupleDesc with the first fields of the new TupleDesc</dd>
-<dd><code>td2</code> - The TupleDesc with the last fields of the TupleDesc</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the new TupleDesc</dd>
-</dl>
-</li>
-</ul>
-<a name="equals-java.lang.Object-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>equals</h4>
-<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;o)</pre>
-<div class="block">Compares the specified object with this TupleDesc for equality. Two
- TupleDescs are considered equal if they are the same size and if the n-th
- type in this TupleDesc is equal to the n-th type in td.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>o</code> - the Object to be compared for equality with this TupleDesc.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true if the object is equal to this TupleDesc.</dd>
-</dl>
-</li>
-</ul>
-<a name="hashCode--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hashCode</h4>
-<pre>public&nbsp;int&nbsp;hashCode()</pre>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-</dl>
-</li>
-</ul>
-<a name="toString--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>toString</h4>
-<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
-<div class="block">Returns a String describing this descriptor. It should be of the form
- "fieldType[0](fieldName[0]), ..., fieldType[M](fieldName[M])", although
- the exact format does not matter.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
-<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>String describing this descriptor.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleComparator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/TupleDesc.TDItem.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleDesc.html" target="_top">Frames</a></li>
-<li><a href="TupleDesc.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/TupleIterator.html lab4/javadoc/simpledb/TupleIterator.html
--- lab3/javadoc/simpledb/TupleIterator.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/TupleIterator.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,489 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>TupleIterator</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="TupleIterator";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10};
-var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleDesc.TDItem.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Type.html" title="enum in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleIterator.html" target="_top">Frames</a></li>
-<li><a href="TupleIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class TupleIterator" class="title">Class TupleIterator</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.TupleIterator</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></dd>
-</dl>
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">TupleIterator</span>
-extends java.lang.Object
-implements <a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></pre>
-<div class="block">Implements a DbIterator by wrapping an Iterable<Tuple>.</div>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../serialized-form.html#simpledb.TupleIterator">Serialized Form</a></dd>
-</dl>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#i">i</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>private static long</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#serialVersionUID">serialVersionUID</a></span></code>&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#td">td</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) java.lang.Iterable&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#tuples">tuples</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#TupleIterator-simpledb.TupleDesc-java.lang.Iterable-">TupleIterator</a></span>(<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td,
-             java.lang.Iterable&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;tuples)</code>
-<div class="block">Constructs an iterator from the specified Iterable, and the specified
- descriptor.</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#close--">close</a></span>()</code>
-<div class="block">Closes the iterator.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#getTupleDesc--">getTupleDesc</a></span>()</code>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>boolean</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#hasNext--">hasNext</a></span>()</code>
-<div class="block">Returns true if the iterator has more tuples.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#next--">next</a></span>()</code>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#open--">open</a></span>()</code>
-<div class="block">Opens the iterator.</div>
-</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/TupleIterator.html#rewind--">rewind</a></span>()</code>
-<div class="block">Resets the iterator to the start.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="serialVersionUID">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>serialVersionUID</h4>
-<pre>private static final&nbsp;long serialVersionUID</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.TupleIterator.serialVersionUID">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-<a name="i">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>i</h4>
-<pre>java.util.Iterator&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt; i</pre>
-</li>
-</ul>
-<a name="td">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>td</h4>
-<pre><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a> td</pre>
-</li>
-</ul>
-<a name="tuples">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>tuples</h4>
-<pre>java.lang.Iterable&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt; tuples</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="TupleIterator-simpledb.TupleDesc-java.lang.Iterable-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>TupleIterator</h4>
-<pre>public&nbsp;TupleIterator(<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;td,
-                     java.lang.Iterable&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;tuples)</pre>
-<div class="block">Constructs an iterator from the specified Iterable, and the specified
- descriptor.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>tuples</code> - The set of tuples to iterate over</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="open--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>open</h4>
-<pre>public&nbsp;void&nbsp;open()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#open--">DbIterator</a></code></span></div>
-<div class="block">Opens the iterator. This must be called before any of the other methods.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#open--">open</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="hasNext--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>hasNext</h4>
-<pre>public&nbsp;boolean&nbsp;hasNext()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#hasNext--">DbIterator</a></code></span></div>
-<div class="block">Returns true if the iterator has more tuples.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#hasNext--">hasNext</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>true f the iterator has more tuples.</dd>
-</dl>
-</li>
-</ul>
-<a name="next--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>next</h4>
-<pre>public&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;next()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#next--">DbIterator</a></code></span></div>
-<div class="block">Returns the next tuple from the operator (typically implementing by reading
- from a child operator or an access method).</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#next--">next</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the next tuple in the iteration.</dd>
-</dl>
-</li>
-</ul>
-<a name="rewind--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>rewind</h4>
-<pre>public&nbsp;void&nbsp;rewind()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#rewind--">DbIterator</a></code></span></div>
-<div class="block">Resets the iterator to the start.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#rewind--">rewind</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#getTupleDesc--">DbIterator</a></code></span></div>
-<div class="block">Returns the TupleDesc associated with this DbIterator.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#getTupleDesc--">getTupleDesc</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the TupleDesc associated with this DbIterator.</dd>
-</dl>
-</li>
-</ul>
-<a name="close--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>close</h4>
-<pre>public&nbsp;void&nbsp;close()</pre>
-<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../simpledb/DbIterator.html#close--">DbIterator</a></code></span></div>
-<div class="block">Closes the iterator. When the iterator is closed, calling next(),
- hasNext(), or rewind() should fail by throwing IllegalStateException.</div>
-<dl>
-<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
-<dd><code><a href="../simpledb/DbIterator.html#close--">close</a></code>&nbsp;in interface&nbsp;<code><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleDesc.TDItem.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Type.html" title="enum in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/TupleIterator.html" target="_top">Frames</a></li>
-<li><a href="TupleIterator.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Type.html lab4/javadoc/simpledb/Type.html
--- lab3/javadoc/simpledb/Type.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Type.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,422 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Type</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Type";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":6,"i1":6,"i2":9,"i3":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Utility.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Type.html" target="_top">Frames</a></li>
-<li><a href="Type.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#enum.constant.summary">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#enum.constant.detail">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Enum Type" class="title">Enum Type</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>java.lang.Enum&lt;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&gt;</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Type</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<dl>
-<dt>All Implemented Interfaces:</dt>
-<dd>java.io.Serializable, java.lang.Comparable&lt;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&gt;</dd>
-</dl>
-<hr>
-<br>
-<pre>public enum <span class="typeNameLabel">Type</span>
-extends java.lang.Enum&lt;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&gt;
-implements java.io.Serializable</pre>
-<div class="block">Class representing a type in SimpleDB.
- Types are static objects defined by this class; hence, the Type
- constructor is private.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- =========== ENUM CONSTANT SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="enum.constant.summary">
-<!--   -->
-</a>
-<h3>Enum Constant Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Enum Constant Summary table, listing enum constants, and an explanation">
-<caption><span>Enum Constants</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Enum Constant and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Type.html#INT_TYPE">INT_TYPE</a></span></code>&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Type.html#STRING_TYPE">STRING_TYPE</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Type.html#STRING_LEN">STRING_LEN</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>abstract int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Type.html#getLen--">getLen</a></span>()</code>&nbsp;</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>abstract <a href="../simpledb/Field.html" title="interface in simpledb">Field</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Type.html#parse-java.io.DataInputStream-">parse</a></span>(java.io.DataInputStream&nbsp;dis)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Type.html" title="enum in simpledb">Type</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Type.html#valueOf-java.lang.String-">valueOf</a></span>(java.lang.String&nbsp;name)</code>
-<div class="block">Returns the enum constant of this type with the specified name.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Type.html#values--">values</a></span>()</code>
-<div class="block">Returns an array containing the constants of this enum type, in
-the order they are declared.</div>
-</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Enum">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Enum</h3>
-<code>clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf</code></li>
-</ul>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>getClass, notify, notifyAll, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ ENUM CONSTANT DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="enum.constant.detail">
-<!--   -->
-</a>
-<h3>Enum Constant Detail</h3>
-<a name="INT_TYPE">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>INT_TYPE</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a> INT_TYPE</pre>
-</li>
-</ul>
-<a name="STRING_TYPE">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>STRING_TYPE</h4>
-<pre>public static final&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a> STRING_TYPE</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="STRING_LEN">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>STRING_LEN</h4>
-<pre>public static final&nbsp;int STRING_LEN</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.Type.STRING_LEN">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="values--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>values</h4>
-<pre>public static&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;values()</pre>
-<div class="block">Returns an array containing the constants of this enum type, in
-the order they are declared.  This method may be used to iterate
-over the constants as follows:
-<pre>
-for (Type c : Type.values())
-&nbsp;   System.out.println(c);
-</pre></div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>an array containing the constants of this enum type, in the order they are declared</dd>
-</dl>
-</li>
-</ul>
-<a name="valueOf-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>valueOf</h4>
-<pre>public static&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>&nbsp;valueOf(java.lang.String&nbsp;name)</pre>
-<div class="block">Returns the enum constant of this type with the specified name.
-The string must match <i>exactly</i> an identifier used to declare an
-enum constant in this type.  (Extraneous whitespace characters are 
-not permitted.)</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>name</code> - the name of the enum constant to be returned.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the enum constant with the specified name</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.lang.IllegalArgumentException</code> - if this enum type has no constant with the specified name</dd>
-<dd><code>java.lang.NullPointerException</code> - if the argument is null</dd>
-</dl>
-</li>
-</ul>
-<a name="getLen--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getLen</h4>
-<pre>public abstract&nbsp;int&nbsp;getLen()</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the number of bytes required to store a field of this type.</dd>
-</dl>
-</li>
-</ul>
-<a name="parse-java.io.DataInputStream-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>parse</h4>
-<pre>public abstract&nbsp;<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>&nbsp;parse(java.io.DataInputStream&nbsp;dis)
-                     throws java.text.ParseException</pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>dis</code> - The input stream to read from</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Field object of the same type as this object that has contents
-   read from the specified DataInputStream.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.text.ParseException</code> - if the data read from the input stream is not
-   of the appropriate type.</dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/TupleIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/Utility.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Type.html" target="_top">Frames</a></li>
-<li><a href="Type.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li><a href="#enum.constant.summary">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#enum.constant.detail">Enum Constants</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/Utility.html lab4/javadoc/simpledb/Utility.html
--- lab3/javadoc/simpledb/Utility.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/Utility.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,489 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>Utility</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="Utility";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9,"i5":9,"i6":9,"i7":9,"i8":9,"i9":9,"i10":9,"i11":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Type.html" title="enum in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li>Next&nbsp;Class</li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Utility.html" target="_top">Frames</a></li>
-<li><a href="Utility.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class Utility" class="title">Class Utility</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.Utility</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">Utility</span>
-extends java.lang.Object</pre>
-<div class="block">Helper methods used for testing and implementing random features.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#Utility--">Utility</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#createEmptyHeapFile-java.lang.String-int-">createEmptyHeapFile</a></span>(java.lang.String&nbsp;path,
-                   int&nbsp;cols)</code>
-<div class="block">A utility method to create a new HeapFile with a single empty page,
- assuming the path does not already exist.</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#getHeapTuple-int-">getHeapTuple</a></span>(int&nbsp;n)</code>&nbsp;</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#getHeapTuple-int:A-">getHeapTuple</a></span>(int[]&nbsp;tupdata)</code>&nbsp;</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#getHeapTuple-int-int-">getHeapTuple</a></span>(int&nbsp;n,
-            int&nbsp;width)</code>&nbsp;</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>static java.lang.String[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#getStrings-int-java.lang.String-">getStrings</a></span>(int&nbsp;len,
-          java.lang.String&nbsp;val)</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#getTuple-int:A-int-">getTuple</a></span>(int[]&nbsp;tupledata,
-        int&nbsp;width)</code>&nbsp;</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#getTupleDesc-int-">getTupleDesc</a></span>(int&nbsp;n)</code>&nbsp;</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#getTupleDesc-int-java.lang.String-">getTupleDesc</a></span>(int&nbsp;n,
-            java.lang.String&nbsp;name)</code>&nbsp;</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#getTypes-int-">getTypes</a></span>(int&nbsp;len)</code>&nbsp;</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>static java.lang.String</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#listToString-java.util.ArrayList-">listToString</a></span>(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;list)</code>&nbsp;</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#openHeapFile-int-java.io.File-">openHeapFile</a></span>(int&nbsp;cols,
-            java.io.File&nbsp;f)</code>
-<div class="block">Opens a HeapFile and adds it to the catalog.</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/Utility.html#openHeapFile-int-java.lang.String-java.io.File-">openHeapFile</a></span>(int&nbsp;cols,
-            java.lang.String&nbsp;colPrefix,
-            java.io.File&nbsp;f)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="Utility--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>Utility</h4>
-<pre>public&nbsp;Utility()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="getTypes-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTypes</h4>
-<pre>public static&nbsp;<a href="../simpledb/Type.html" title="enum in simpledb">Type</a>[]&nbsp;getTypes(int&nbsp;len)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Type array of length len populated with Type.INT_TYPE</dd>
-</dl>
-</li>
-</ul>
-<a name="getStrings-int-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getStrings</h4>
-<pre>public static&nbsp;java.lang.String[]&nbsp;getStrings(int&nbsp;len,
-                                            java.lang.String&nbsp;val)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a String array of length len populated with the (possibly null) strings in val,
- and an appended increasing integer at the end (val1, val2, etc.).</dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc-int-java.lang.String-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public static&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc(int&nbsp;n,
-                                     java.lang.String&nbsp;name)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a TupleDesc with n fields of type Type.INT_TYPE, each named
- name + n (name1, name2, etc.).</dd>
-</dl>
-</li>
-</ul>
-<a name="getTupleDesc-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTupleDesc</h4>
-<pre>public static&nbsp;<a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a>&nbsp;getTupleDesc(int&nbsp;n)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a TupleDesc with n fields of type Type.INT_TYPE</dd>
-</dl>
-</li>
-</ul>
-<a name="getHeapTuple-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getHeapTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getHeapTuple(int&nbsp;n)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with a single IntField with value n and with
-   RecordId(HeapPageId(1,2), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getHeapTuple-int:A-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getHeapTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getHeapTuple(int[]&nbsp;tupdata)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with an IntField for every element of tupdata
-   and RecordId(HeapPageId(1, 2), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getHeapTuple-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getHeapTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getHeapTuple(int&nbsp;n,
-                                 int&nbsp;width)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with a 'width' IntFields each with value n and
-   with RecordId(HeapPageId(1, 2), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getTuple-int:A-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getTuple(int[]&nbsp;tupledata,
-                             int&nbsp;width)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with a 'width' IntFields with the value tupledata[i]
-         in each field.
-         do not set it's RecordId, hence do not distinguish which
-         sort of file it belongs to.</dd>
-</dl>
-</li>
-</ul>
-<a name="createEmptyHeapFile-java.lang.String-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createEmptyHeapFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/HeapFile.html" title="class in simpledb">HeapFile</a>&nbsp;createEmptyHeapFile(java.lang.String&nbsp;path,
-                                           int&nbsp;cols)
-                                    throws java.io.IOException</pre>
-<div class="block">A utility method to create a new HeapFile with a single empty page,
- assuming the path does not already exist. If the path exists, the file
- will be overwritten. The new table will be added to the Catalog with
- the specified number of columns as IntFields.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="openHeapFile-int-java.io.File-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>openHeapFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/HeapFile.html" title="class in simpledb">HeapFile</a>&nbsp;openHeapFile(int&nbsp;cols,
-                                    java.io.File&nbsp;f)</pre>
-<div class="block">Opens a HeapFile and adds it to the catalog.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>cols</code> - number of columns in the table.</dd>
-<dd><code>f</code> - location of the file storing the table.</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the opened table.</dd>
-</dl>
-</li>
-</ul>
-<a name="openHeapFile-int-java.lang.String-java.io.File-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>openHeapFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/HeapFile.html" title="class in simpledb">HeapFile</a>&nbsp;openHeapFile(int&nbsp;cols,
-                                    java.lang.String&nbsp;colPrefix,
-                                    java.io.File&nbsp;f)</pre>
-</li>
-</ul>
-<a name="listToString-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>listToString</h4>
-<pre>public static&nbsp;java.lang.String&nbsp;listToString(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;list)</pre>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/Type.html" title="enum in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li>Next&nbsp;Class</li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/Utility.html" target="_top">Frames</a></li>
-<li><a href="Utility.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li>Nested&nbsp;|&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li>Field&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/package-frame.html lab4/javadoc/simpledb/package-frame.html
--- lab3/javadoc/simpledb/package-frame.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/package-frame.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,125 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>simpledb</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<h1 class="bar"><a href="../simpledb/package-summary.html" target="classFrame">simpledb</a></h1>
-<div class="indexContainer">
-<h2 title="Interfaces">Interfaces</h2>
-<ul title="Interfaces">
-<li><a href="Aggregator.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">Aggregator</span></a></li>
-<li><a href="DbFile.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">DbFile</span></a></li>
-<li><a href="DbFileIterator.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">DbFileIterator</span></a></li>
-<li><a href="DbIterator.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">DbIterator</span></a></li>
-<li><a href="Field.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">Field</span></a></li>
-<li><a href="IndexDbIterator.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">IndexDbIterator</span></a></li>
-<li><a href="Page.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">Page</span></a></li>
-<li><a href="PageId.html" title="interface in simpledb" target="classFrame"><span class="interfaceName">PageId</span></a></li>
-</ul>
-<h2 title="Classes">Classes</h2>
-<ul title="Classes">
-<li><a href="AbstractDbFileIterator.html" title="class in simpledb" target="classFrame">AbstractDbFileIterator</a></li>
-<li><a href="Aggregate.html" title="class in simpledb" target="classFrame">Aggregate</a></li>
-<li><a href="BTreeChecker.html" title="class in simpledb" target="classFrame">BTreeChecker</a></li>
-<li><a href="BTreeChecker.SubtreeSummary.html" title="class in simpledb" target="classFrame">BTreeChecker.SubtreeSummary</a></li>
-<li><a href="BTreeEntry.html" title="class in simpledb" target="classFrame">BTreeEntry</a></li>
-<li><a href="BTreeFile.html" title="class in simpledb" target="classFrame">BTreeFile</a></li>
-<li><a href="BTreeFileEncoder.html" title="class in simpledb" target="classFrame">BTreeFileEncoder</a></li>
-<li><a href="BTreeFileEncoder.EntryComparator.html" title="class in simpledb" target="classFrame">BTreeFileEncoder.EntryComparator</a></li>
-<li><a href="BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb" target="classFrame">BTreeFileEncoder.ReverseEntryComparator</a></li>
-<li><a href="BTreeFileEncoder.TupleComparator.html" title="class in simpledb" target="classFrame">BTreeFileEncoder.TupleComparator</a></li>
-<li><a href="BTreeFileIterator.html" title="class in simpledb" target="classFrame">BTreeFileIterator</a></li>
-<li><a href="BTreeHeaderPage.html" title="class in simpledb" target="classFrame">BTreeHeaderPage</a></li>
-<li><a href="BTreeInternalPage.html" title="class in simpledb" target="classFrame">BTreeInternalPage</a></li>
-<li><a href="BTreeInternalPageIterator.html" title="class in simpledb" target="classFrame">BTreeInternalPageIterator</a></li>
-<li><a href="BTreeInternalPageReverseIterator.html" title="class in simpledb" target="classFrame">BTreeInternalPageReverseIterator</a></li>
-<li><a href="BTreeLeafPage.html" title="class in simpledb" target="classFrame">BTreeLeafPage</a></li>
-<li><a href="BTreeLeafPageIterator.html" title="class in simpledb" target="classFrame">BTreeLeafPageIterator</a></li>
-<li><a href="BTreeLeafPageReverseIterator.html" title="class in simpledb" target="classFrame">BTreeLeafPageReverseIterator</a></li>
-<li><a href="BTreePage.html" title="class in simpledb" target="classFrame">BTreePage</a></li>
-<li><a href="BTreePageId.html" title="class in simpledb" target="classFrame">BTreePageId</a></li>
-<li><a href="BTreeRootPtrPage.html" title="class in simpledb" target="classFrame">BTreeRootPtrPage</a></li>
-<li><a href="BTreeScan.html" title="class in simpledb" target="classFrame">BTreeScan</a></li>
-<li><a href="BTreeSearchIterator.html" title="class in simpledb" target="classFrame">BTreeSearchIterator</a></li>
-<li><a href="BTreeUtility.html" title="class in simpledb" target="classFrame">BTreeUtility</a></li>
-<li><a href="BTreeUtility.BTreeDeleter.html" title="class in simpledb" target="classFrame">BTreeUtility.BTreeDeleter</a></li>
-<li><a href="BTreeUtility.BTreeInserter.html" title="class in simpledb" target="classFrame">BTreeUtility.BTreeInserter</a></li>
-<li><a href="BTreeUtility.BTreeReader.html" title="class in simpledb" target="classFrame">BTreeUtility.BTreeReader</a></li>
-<li><a href="BTreeUtility.BTreeWriter.html" title="class in simpledb" target="classFrame">BTreeUtility.BTreeWriter</a></li>
-<li><a href="BufferPool.html" title="class in simpledb" target="classFrame">BufferPool</a></li>
-<li><a href="Catalog.html" title="class in simpledb" target="classFrame">Catalog</a></li>
-<li><a href="CostCard.html" title="class in simpledb" target="classFrame">CostCard</a></li>
-<li><a href="Database.html" title="class in simpledb" target="classFrame">Database</a></li>
-<li><a href="Debug.html" title="class in simpledb" target="classFrame">Debug</a></li>
-<li><a href="Delete.html" title="class in simpledb" target="classFrame">Delete</a></li>
-<li><a href="Filter.html" title="class in simpledb" target="classFrame">Filter</a></li>
-<li><a href="HashEquiJoin.html" title="class in simpledb" target="classFrame">HashEquiJoin</a></li>
-<li><a href="HeapFile.html" title="class in simpledb" target="classFrame">HeapFile</a></li>
-<li><a href="HeapFileEncoder.html" title="class in simpledb" target="classFrame">HeapFileEncoder</a></li>
-<li><a href="HeapPage.html" title="class in simpledb" target="classFrame">HeapPage</a></li>
-<li><a href="HeapPageId.html" title="class in simpledb" target="classFrame">HeapPageId</a></li>
-<li><a href="IndexPredicate.html" title="class in simpledb" target="classFrame">IndexPredicate</a></li>
-<li><a href="Insert.html" title="class in simpledb" target="classFrame">Insert</a></li>
-<li><a href="IntegerAggregator.html" title="class in simpledb" target="classFrame">IntegerAggregator</a></li>
-<li><a href="IntField.html" title="class in simpledb" target="classFrame">IntField</a></li>
-<li><a href="IntHistogram.html" title="class in simpledb" target="classFrame">IntHistogram</a></li>
-<li><a href="Join.html" title="class in simpledb" target="classFrame">Join</a></li>
-<li><a href="JoinOptimizer.html" title="class in simpledb" target="classFrame">JoinOptimizer</a></li>
-<li><a href="JoinPredicate.html" title="class in simpledb" target="classFrame">JoinPredicate</a></li>
-<li><a href="LogFile.html" title="class in simpledb" target="classFrame">LogFile</a></li>
-<li><a href="LogicalFilterNode.html" title="class in simpledb" target="classFrame">LogicalFilterNode</a></li>
-<li><a href="LogicalJoinNode.html" title="class in simpledb" target="classFrame">LogicalJoinNode</a></li>
-<li><a href="LogicalPlan.html" title="class in simpledb" target="classFrame">LogicalPlan</a></li>
-<li><a href="LogicalScanNode.html" title="class in simpledb" target="classFrame">LogicalScanNode</a></li>
-<li><a href="LogicalSelectListNode.html" title="class in simpledb" target="classFrame">LogicalSelectListNode</a></li>
-<li><a href="LogicalSubplanJoinNode.html" title="class in simpledb" target="classFrame">LogicalSubplanJoinNode</a></li>
-<li><a href="Operator.html" title="class in simpledb" target="classFrame">Operator</a></li>
-<li><a href="OperatorCardinality.html" title="class in simpledb" target="classFrame">OperatorCardinality</a></li>
-<li><a href="OrderBy.html" title="class in simpledb" target="classFrame">OrderBy</a></li>
-<li><a href="Parser.html" title="class in simpledb" target="classFrame">Parser</a></li>
-<li><a href="Permissions.html" title="class in simpledb" target="classFrame">Permissions</a></li>
-<li><a href="PlanCache.html" title="class in simpledb" target="classFrame">PlanCache</a></li>
-<li><a href="Predicate.html" title="class in simpledb" target="classFrame">Predicate</a></li>
-<li><a href="Project.html" title="class in simpledb" target="classFrame">Project</a></li>
-<li><a href="Query.html" title="class in simpledb" target="classFrame">Query</a></li>
-<li><a href="QueryPlanVisualizer.html" title="class in simpledb" target="classFrame">QueryPlanVisualizer</a></li>
-<li><a href="QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb" target="classFrame">QueryPlanVisualizer.SubTreeDescriptor</a></li>
-<li><a href="RecordId.html" title="class in simpledb" target="classFrame">RecordId</a></li>
-<li><a href="SeqScan.html" title="class in simpledb" target="classFrame">SeqScan</a></li>
-<li><a href="SimpleDb.html" title="class in simpledb" target="classFrame">SimpleDb</a></li>
-<li><a href="StringAggregator.html" title="class in simpledb" target="classFrame">StringAggregator</a></li>
-<li><a href="StringField.html" title="class in simpledb" target="classFrame">StringField</a></li>
-<li><a href="StringHistogram.html" title="class in simpledb" target="classFrame">StringHistogram</a></li>
-<li><a href="TableStats.html" title="class in simpledb" target="classFrame">TableStats</a></li>
-<li><a href="Transaction.html" title="class in simpledb" target="classFrame">Transaction</a></li>
-<li><a href="TransactionId.html" title="class in simpledb" target="classFrame">TransactionId</a></li>
-<li><a href="Tuple.html" title="class in simpledb" target="classFrame">Tuple</a></li>
-<li><a href="TupleArrayIterator.html" title="class in simpledb" target="classFrame">TupleArrayIterator</a></li>
-<li><a href="TupleComparator.html" title="class in simpledb" target="classFrame">TupleComparator</a></li>
-<li><a href="TupleDesc.html" title="class in simpledb" target="classFrame">TupleDesc</a></li>
-<li><a href="TupleDesc.TDItem.html" title="class in simpledb" target="classFrame">TupleDesc.TDItem</a></li>
-<li><a href="TupleIterator.html" title="class in simpledb" target="classFrame">TupleIterator</a></li>
-<li><a href="Utility.html" title="class in simpledb" target="classFrame">Utility</a></li>
-</ul>
-<h2 title="Enums">Enums</h2>
-<ul title="Enums">
-<li><a href="Aggregator.Op.html" title="enum in simpledb" target="classFrame">Aggregator.Op</a></li>
-<li><a href="Predicate.Op.html" title="enum in simpledb" target="classFrame">Predicate.Op</a></li>
-<li><a href="Type.html" title="enum in simpledb" target="classFrame">Type</a></li>
-</ul>
-<h2 title="Exceptions">Exceptions</h2>
-<ul title="Exceptions">
-<li><a href="DbException.html" title="class in simpledb" target="classFrame">DbException</a></li>
-<li><a href="DeadlockException.html" title="class in simpledb" target="classFrame">DeadlockException</a></li>
-<li><a href="ParsingException.html" title="class in simpledb" target="classFrame">ParsingException</a></li>
-<li><a href="TransactionAbortedException.html" title="class in simpledb" target="classFrame">TransactionAbortedException</a></li>
-</ul>
-</div>
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/package-summary.html lab4/javadoc/simpledb/package-summary.html
--- lab3/javadoc/simpledb/package-summary.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/package-summary.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,789 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>simpledb</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="simpledb";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev&nbsp;Package</li>
-<li>Next&nbsp;Package</li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/package-summary.html" target="_top">Frames</a></li>
-<li><a href="package-summary.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<div class="header">
-<h1 title="Package" class="title">Package&nbsp;simpledb</h1>
-</div>
-<div class="contentContainer">
-<ul class="blockList">
-<li class="blockList">
-<table class="typeSummary" border="0" cellpadding="3" cellspacing="0" summary="Interface Summary table, listing interfaces, and an explanation">
-<caption><span>Interface Summary</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Interface</th>
-<th class="colLast" scope="col">Description</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a></td>
-<td class="colLast">
-<div class="block">The common interface for any class that can compute an aggregate over a
- list of Tuples.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a></td>
-<td class="colLast">
-<div class="block">The interface for database files on disk.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a></td>
-<td class="colLast">
-<div class="block">DbFileIterator is the iterator interface that all SimpleDB Dbfile should
- implement.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a></td>
-<td class="colLast">
-<div class="block">DbIterator is the iterator interface that all SimpleDB operators should
- implement.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Field.html" title="interface in simpledb">Field</a></td>
-<td class="colLast">
-<div class="block">Interface for values of fields in tuples in SimpleDB.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/IndexDbIterator.html" title="interface in simpledb">IndexDbIterator</a></td>
-<td class="colLast">
-<div class="block">IndexDBIterator is the interface that index access methods
-    implement in SimpleDb.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Page.html" title="interface in simpledb">Page</a></td>
-<td class="colLast">
-<div class="block">Page is the interface used to represent pages that are resident in the
- BufferPool.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a></td>
-<td class="colLast">
-<div class="block">PageId is an interface to a specific page of a specific table.</div>
-</td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="typeSummary" border="0" cellpadding="3" cellspacing="0" summary="Class Summary table, listing classes, and an explanation">
-<caption><span>Class Summary</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Class</th>
-<th class="colLast" scope="col">Description</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb">AbstractDbFileIterator</a></td>
-<td class="colLast">
-<div class="block">Helper for implementing DbFileIterators.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Aggregate.html" title="class in simpledb">Aggregate</a></td>
-<td class="colLast">
-<div class="block">The Aggregation operator that computes an aggregate (e.g., sum, avg, max,
- min).</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeChecker.html" title="class in simpledb">BTreeChecker</a></td>
-<td class="colLast">
-<div class="block">Created by orm on 10/7/15.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb">BTreeChecker.SubtreeSummary</a></td>
-<td class="colLast">
-<div class="block">This class is only used for error-checking code.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></td>
-<td class="colLast">
-<div class="block">Each instance of BTreeEntry stores one key and two child page ids.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></td>
-<td class="colLast">
-<div class="block">BTreeFile is an implementation of a DbFile that stores a B+ tree.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeFileEncoder.html" title="class in simpledb">BTreeFileEncoder</a></td>
-<td class="colLast">
-<div class="block">BTreeFileEncoder reads a comma delimited text file and converts it to
- pages of binary data in the appropriate format for simpledb B+ tree
- pages.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb">BTreeFileEncoder.EntryComparator</a></td>
-<td class="colLast">
-<div class="block">Comparator to sort BTreeEntry objects by key</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb">BTreeFileEncoder.ReverseEntryComparator</a></td>
-<td class="colLast">
-<div class="block">Comparator to sort BTreeEntry objects by key in descending order</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb">BTreeFileEncoder.TupleComparator</a></td>
-<td class="colLast">
-<div class="block">comparator to sort Tuples by key field</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeFileIterator.html" title="class in simpledb">BTreeFileIterator</a></td>
-<td class="colLast">
-<div class="block">Helper class that implements the Java Iterator for tuples on a BTreeFile</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeHeaderPage.html" title="class in simpledb">BTreeHeaderPage</a></td>
-<td class="colLast">
-<div class="block">Each instance of BTreeHeaderPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></td>
-<td class="colLast">
-<div class="block">Each instance of BTreeInternalPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeInternalPageIterator.html" title="class in simpledb">BTreeInternalPageIterator</a></td>
-<td class="colLast">
-<div class="block">Helper class that implements the Java Iterator for entries on a BTreeInternalPage.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb">BTreeInternalPageReverseIterator</a></td>
-<td class="colLast">
-<div class="block">Helper class that implements the Java Iterator for entries on a BTreeInternalPage in reverse.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></td>
-<td class="colLast">
-<div class="block">Each instance of BTreeLeafPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeLeafPageIterator.html" title="class in simpledb">BTreeLeafPageIterator</a></td>
-<td class="colLast">
-<div class="block">Helper class that implements the Java Iterator for tuples on a BTreeLeafPage.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb">BTreeLeafPageReverseIterator</a></td>
-<td class="colLast">
-<div class="block">Helper class that implements the Java Iterator for tuples on a BTreeLeafPage in reverse.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreePage.html" title="class in simpledb">BTreePage</a></td>
-<td class="colLast">
-<div class="block">Each instance of BTreeInternalPage stores data for one page of a BTreeFile and 
- implements the Page interface that is used by BufferPool.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a></td>
-<td class="colLast">
-<div class="block">Unique identifier for BTreeInternalPage, BTreeLeafPage, BTreeHeaderPage
-  and BTreeRootPtrPage objects.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb">BTreeRootPtrPage</a></td>
-<td class="colLast">
-<div class="block">BTreeRootPtrPage stores the pointer to the root node used in the B+ tree and
- implements Page Interface that is used by BufferPool</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeScan.html" title="class in simpledb">BTreeScan</a></td>
-<td class="colLast">
-<div class="block">BTreeScan is an operator which reads tuples in sorted order 
- according to a predicate</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb">BTreeSearchIterator</a></td>
-<td class="colLast">
-<div class="block">Helper class that implements the DbFileIterator for search tuples on a
- B+ Tree File</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeUtility.html" title="class in simpledb">BTreeUtility</a></td>
-<td class="colLast">
-<div class="block">Helper methods used for testing and implementing random features.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></td>
-<td class="colLast">
-<div class="block">Helper class that attempts to delete tuple(s) in a new thread</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></td>
-<td class="colLast">
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></td>
-<td class="colLast">
-<div class="block">Helper class that searches for tuple(s) in a new thread</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></td>
-<td class="colLast">
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/BufferPool.html" title="class in simpledb">BufferPool</a></td>
-<td class="colLast">
-<div class="block">BufferPool manages the reading and writing of pages into memory from
- disk.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Catalog.html" title="class in simpledb">Catalog</a></td>
-<td class="colLast">
-<div class="block">The Catalog keeps track of all available tables in the database and their
- associated schemas.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/CostCard.html" title="class in simpledb">CostCard</a></td>
-<td class="colLast">
-<div class="block">Class returned by <a href="../simpledb/JoinOptimizer.html#computeCostAndCardOfSubplan-java.util.HashMap-java.util.HashMap-simpledb.LogicalJoinNode-java.util.Set-double-simpledb.PlanCache-"><code>JoinOptimizer.computeCostAndCardOfSubplan(java.util.HashMap&lt;java.lang.String, simpledb.TableStats&gt;, java.util.HashMap&lt;java.lang.String, java.lang.Double&gt;, simpledb.LogicalJoinNode, java.util.Set&lt;simpledb.LogicalJoinNode&gt;, double, simpledb.PlanCache)</code></a> specifying the
-    cost and cardinality of the optimal plan represented by plan.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Database.html" title="class in simpledb">Database</a></td>
-<td class="colLast">
-<div class="block">Database is a class that initializes several static variables used by the
- database system (the catalog, the buffer pool, and the log files, in
- particular.)</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Debug.html" title="class in simpledb">Debug</a></td>
-<td class="colLast">
-<div class="block">Debug is a utility class that wraps println statements and allows
- more or less command line output to be turned on.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Delete.html" title="class in simpledb">Delete</a></td>
-<td class="colLast">
-<div class="block">The delete operator.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Filter.html" title="class in simpledb">Filter</a></td>
-<td class="colLast">
-<div class="block">Filter is an operator that implements a relational select.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/HashEquiJoin.html" title="class in simpledb">HashEquiJoin</a></td>
-<td class="colLast">
-<div class="block">The Join operator implements the relational join operation.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/HeapFile.html" title="class in simpledb">HeapFile</a></td>
-<td class="colLast">
-<div class="block">HeapFile is an implementation of a DbFile that stores a collection of tuples
- in no particular order.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/HeapFileEncoder.html" title="class in simpledb">HeapFileEncoder</a></td>
-<td class="colLast">
-<div class="block">HeapFileEncoder reads a comma delimited text file or accepts
- an array of tuples and converts it to
- pages of binary data in the appropriate format for simpledb heap pages
- Pages are padded out to a specified length, and written consecutive in a
- data file.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/HeapPage.html" title="class in simpledb">HeapPage</a></td>
-<td class="colLast">
-<div class="block">Each instance of HeapPage stores data for one page of HeapFiles and 
- implements the Page interface that is used by BufferPool.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</a></td>
-<td class="colLast">
-<div class="block">Unique identifier for HeapPage objects.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/IndexPredicate.html" title="class in simpledb">IndexPredicate</a></td>
-<td class="colLast">
-<div class="block">IndexPredicate compares a field which has index on it against a given value</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Insert.html" title="class in simpledb">Insert</a></td>
-<td class="colLast">
-<div class="block">Inserts tuples read from the child operator into the tableId specified in the
- constructor</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/IntegerAggregator.html" title="class in simpledb">IntegerAggregator</a></td>
-<td class="colLast">
-<div class="block">Knows how to compute some aggregate over a set of IntFields.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/IntField.html" title="class in simpledb">IntField</a></td>
-<td class="colLast">
-<div class="block">Instance of Field that stores a single integer.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/IntHistogram.html" title="class in simpledb">IntHistogram</a></td>
-<td class="colLast">
-<div class="block">A class to represent a fixed-width histogram over a single integer-based field.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Join.html" title="class in simpledb">Join</a></td>
-<td class="colLast">
-<div class="block">The Join operator implements the relational join operation.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/JoinOptimizer.html" title="class in simpledb">JoinOptimizer</a></td>
-<td class="colLast">
-<div class="block">The JoinOptimizer class is responsible for ordering a series of joins
- optimally, and for selecting the best instantiation of a join for a given
- logical plan.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/JoinPredicate.html" title="class in simpledb">JoinPredicate</a></td>
-<td class="colLast">
-<div class="block">JoinPredicate compares fields of two tuples using a predicate.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/LogFile.html" title="class in simpledb">LogFile</a></td>
-<td class="colLast">
-<div class="block"> The format of the log file is as follows:
-
-
-
- The first long integer of the file represents the offset of the
-last written checkpoint, or -1 if there are no checkpoints
-
- All additional data in the log consists of log records.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/LogicalFilterNode.html" title="class in simpledb">LogicalFilterNode</a></td>
-<td class="colLast">
-<div class="block">A LogicalFilterNode represents the parameters of a filter in the WHERE clause of a query.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/LogicalJoinNode.html" title="class in simpledb">LogicalJoinNode</a></td>
-<td class="colLast">
-<div class="block">A LogicalJoinNode represens the state needed of a join of two
- tables in a LogicalQueryPlan</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/LogicalPlan.html" title="class in simpledb">LogicalPlan</a></td>
-<td class="colLast">
-<div class="block">LogicalPlan represents a logical query plan that has been through
- the parser and is ready to be processed by the optimizer.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/LogicalScanNode.html" title="class in simpledb">LogicalScanNode</a></td>
-<td class="colLast">
-<div class="block">A LogicalScanNode represents table in the FROM list in a
- LogicalQueryPlan</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/LogicalSelectListNode.html" title="class in simpledb">LogicalSelectListNode</a></td>
-<td class="colLast">
-<div class="block">A LogicalSelectListNode represents a clause in the select list in
- a LogicalQueryPlan</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/LogicalSubplanJoinNode.html" title="class in simpledb">LogicalSubplanJoinNode</a></td>
-<td class="colLast">
-<div class="block">A LogicalSubplanJoinNode represens the state needed of a join of a
- table to a subplan in a LogicalQueryPlan -- inherits state from
- <a href="../simpledb/LogicalJoinNode.html" title="class in simpledb"><code>LogicalJoinNode</code></a>; t2 and f2 should always be null</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Operator.html" title="class in simpledb">Operator</a></td>
-<td class="colLast">
-<div class="block">Abstract class for implementing operators.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/OperatorCardinality.html" title="class in simpledb">OperatorCardinality</a></td>
-<td class="colLast">
-<div class="block">A utility class, which computes the estimated cardinalities of an operator
- tree.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/OrderBy.html" title="class in simpledb">OrderBy</a></td>
-<td class="colLast">
-<div class="block">OrderBy is an operator that implements a relational ORDER BY.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Parser.html" title="class in simpledb">Parser</a></td>
-<td class="colLast">&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Permissions.html" title="class in simpledb">Permissions</a></td>
-<td class="colLast">
-<div class="block">Class representing requested permissions to a relation/file.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/PlanCache.html" title="class in simpledb">PlanCache</a></td>
-<td class="colLast">
-<div class="block">A PlanCache is a helper class that can be used to store the best
- way to order a given set of joins</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Predicate.html" title="class in simpledb">Predicate</a></td>
-<td class="colLast">
-<div class="block">Predicate compares tuples to a specified Field value.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Project.html" title="class in simpledb">Project</a></td>
-<td class="colLast">
-<div class="block">Project is an operator that implements a relational projection.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Query.html" title="class in simpledb">Query</a></td>
-<td class="colLast">
-<div class="block">Query is a wrapper class to manage the execution of queries.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/QueryPlanVisualizer.html" title="class in simpledb">QueryPlanVisualizer</a></td>
-<td class="colLast">&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb">QueryPlanVisualizer.SubTreeDescriptor</a></td>
-<td class="colLast">&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/RecordId.html" title="class in simpledb">RecordId</a></td>
-<td class="colLast">
-<div class="block">A RecordId is a reference to a specific tuple on a specific page of a
- specific table.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/SeqScan.html" title="class in simpledb">SeqScan</a></td>
-<td class="colLast">
-<div class="block">SeqScan is an implementation of a sequential scan access method that reads
- each tuple of a table in no particular order (e.g., as they are laid out on
- disk).</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/SimpleDb.html" title="class in simpledb">SimpleDb</a></td>
-<td class="colLast">&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/StringAggregator.html" title="class in simpledb">StringAggregator</a></td>
-<td class="colLast">
-<div class="block">Knows how to compute some aggregate over a set of StringFields.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/StringField.html" title="class in simpledb">StringField</a></td>
-<td class="colLast">
-<div class="block">Instance of Field that stores a single String of a fixed length.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/StringHistogram.html" title="class in simpledb">StringHistogram</a></td>
-<td class="colLast">
-<div class="block">A class to represent a fixed-width histogram over a single String-based
- field.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/TableStats.html" title="class in simpledb">TableStats</a></td>
-<td class="colLast">
-<div class="block">TableStats represents statistics (e.g., histograms) about base tables in a
- query.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Transaction.html" title="class in simpledb">Transaction</a></td>
-<td class="colLast">
-<div class="block">Transaction encapsulates information about the state of
- a transaction and manages transaction commit / abort.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</a></td>
-<td class="colLast">
-<div class="block">TransactionId is a class that contains the identifier of a transaction.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></td>
-<td class="colLast">
-<div class="block">Tuple maintains information about the contents of a tuple.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/TupleArrayIterator.html" title="class in simpledb">TupleArrayIterator</a></td>
-<td class="colLast">&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/TupleComparator.html" title="class in simpledb">TupleComparator</a></td>
-<td class="colLast">&nbsp;</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</a></td>
-<td class="colLast">
-<div class="block">TupleDesc describes the schema of a tuple.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/TupleDesc.TDItem.html" title="class in simpledb">TupleDesc.TDItem</a></td>
-<td class="colLast">
-<div class="block">A help class to facilitate organizing the information of each field</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/TupleIterator.html" title="class in simpledb">TupleIterator</a></td>
-<td class="colLast">
-<div class="block">Implements a DbIterator by wrapping an Iterable<Tuple>.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Utility.html" title="class in simpledb">Utility</a></td>
-<td class="colLast">
-<div class="block">Helper methods used for testing and implementing random features.</div>
-</td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="typeSummary" border="0" cellpadding="3" cellspacing="0" summary="Enum Summary table, listing enums, and an explanation">
-<caption><span>Enum Summary</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Enum</th>
-<th class="colLast" scope="col">Description</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Aggregator.Op.html" title="enum in simpledb">Aggregator.Op</a></td>
-<td class="colLast">
-<div class="block">SUM_COUNT and SC_AVG will
- only be used in lab7, you are not required
- to implement them until then.</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/Predicate.Op.html" title="enum in simpledb">Predicate.Op</a></td>
-<td class="colLast">
-<div class="block">Constants used for return codes in Field.compare</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/Type.html" title="enum in simpledb">Type</a></td>
-<td class="colLast">
-<div class="block">Class representing a type in SimpleDB.</div>
-</td>
-</tr>
-</tbody>
-</table>
-</li>
-<li class="blockList">
-<table class="typeSummary" border="0" cellpadding="3" cellspacing="0" summary="Exception Summary table, listing exceptions, and an explanation">
-<caption><span>Exception Summary</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Exception</th>
-<th class="colLast" scope="col">Description</th>
-</tr>
-<tbody>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></td>
-<td class="colLast">
-<div class="block">Generic database exception class</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/DeadlockException.html" title="class in simpledb">DeadlockException</a></td>
-<td class="colLast">
-<div class="block">Exception that is thrown when a deadlock occurs.</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><a href="../simpledb/ParsingException.html" title="class in simpledb">ParsingException</a></td>
-<td class="colLast">&nbsp;</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></td>
-<td class="colLast">
-<div class="block">Exception that is thrown when a transaction has aborted.</div>
-</td>
-</tr>
-</tbody>
-</table>
-</li>
-</ul>
-</div>
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev&nbsp;Package</li>
-<li>Next&nbsp;Package</li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/package-summary.html" target="_top">Frames</a></li>
-<li><a href="package-summary.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/simpledb/package-tree.html lab4/javadoc/simpledb/package-tree.html
--- lab3/javadoc/simpledb/package-tree.html	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/simpledb/package-tree.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,272 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:06 CST 2016 -->
-<title>simpledb Class Hierarchy</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="simpledb Class Hierarchy";
-        }
-    }
-    catch(err) {
-    }
-//-->
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li class="navBarCell1Rev">Tree</li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/package-tree.html" target="_top">Frames</a></li>
-<li><a href="package-tree.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<div class="header">
-<h1 class="title">Hierarchy For Package simpledb</h1>
-</div>
-<div class="contentContainer">
-<h2 title="Class Hierarchy">Class Hierarchy</h2>
-<ul>
-<li type="circle">java.lang.Object
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/AbstractDbFileIterator.html" title="class in simpledb"><span class="typeNameLink">AbstractDbFileIterator</span></a> (implements simpledb.<a href="../simpledb/DbFileIterator.html" title="interface in simpledb">DbFileIterator</a>)
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/BTreeFileIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileIterator</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeSearchIterator</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeChecker.html" title="class in simpledb"><span class="typeNameLink">BTreeChecker</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeChecker.SubtreeSummary.html" title="class in simpledb"><span class="typeNameLink">BTreeChecker.SubtreeSummary</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeEntry.html" title="class in simpledb"><span class="typeNameLink">BTreeEntry</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeFile.html" title="class in simpledb"><span class="typeNameLink">BTreeFile</span></a> (implements simpledb.<a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeFileEncoder.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeFileEncoder.EntryComparator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder.EntryComparator</span></a> (implements java.util.Comparator&lt;T&gt;)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeFileEncoder.ReverseEntryComparator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder.ReverseEntryComparator</span></a> (implements java.util.Comparator&lt;T&gt;)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeFileEncoder.TupleComparator.html" title="class in simpledb"><span class="typeNameLink">BTreeFileEncoder.TupleComparator</span></a> (implements java.util.Comparator&lt;T&gt;)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeHeaderPage.html" title="class in simpledb"><span class="typeNameLink">BTreeHeaderPage</span></a> (implements simpledb.<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeInternalPageIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeInternalPageIterator</span></a> (implements java.util.Iterator&lt;E&gt;)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeInternalPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeInternalPageReverseIterator</span></a> (implements java.util.Iterator&lt;E&gt;)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeLeafPageIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeLeafPageIterator</span></a> (implements java.util.Iterator&lt;E&gt;)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeLeafPageReverseIterator.html" title="class in simpledb"><span class="typeNameLink">BTreeLeafPageReverseIterator</span></a> (implements java.util.Iterator&lt;E&gt;)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreePage.html" title="class in simpledb"><span class="typeNameLink">BTreePage</span></a> (implements simpledb.<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>)
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb"><span class="typeNameLink">BTreeInternalPage</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb"><span class="typeNameLink">BTreeLeafPage</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreePageId.html" title="class in simpledb"><span class="typeNameLink">BTreePageId</span></a> (implements simpledb.<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeRootPtrPage.html" title="class in simpledb"><span class="typeNameLink">BTreeRootPtrPage</span></a> (implements simpledb.<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeScan.html" title="class in simpledb"><span class="typeNameLink">BTreeScan</span></a> (implements simpledb.<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeUtility.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/BufferPool.html" title="class in simpledb"><span class="typeNameLink">BufferPool</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Catalog.html" title="class in simpledb"><span class="typeNameLink">Catalog</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/CostCard.html" title="class in simpledb"><span class="typeNameLink">CostCard</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Database.html" title="class in simpledb"><span class="typeNameLink">Database</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Debug.html" title="class in simpledb"><span class="typeNameLink">Debug</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/HeapFile.html" title="class in simpledb"><span class="typeNameLink">HeapFile</span></a> (implements simpledb.<a href="../simpledb/DbFile.html" title="interface in simpledb">DbFile</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/HeapFileEncoder.html" title="class in simpledb"><span class="typeNameLink">HeapFileEncoder</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/HeapPage.html" title="class in simpledb"><span class="typeNameLink">HeapPage</span></a> (implements simpledb.<a href="../simpledb/Page.html" title="interface in simpledb">Page</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/HeapPageId.html" title="class in simpledb"><span class="typeNameLink">HeapPageId</span></a> (implements simpledb.<a href="../simpledb/PageId.html" title="interface in simpledb">PageId</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/IndexPredicate.html" title="class in simpledb"><span class="typeNameLink">IndexPredicate</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/IntegerAggregator.html" title="class in simpledb"><span class="typeNameLink">IntegerAggregator</span></a> (implements simpledb.<a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/IntegerAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">IntegerAggregator.AggregateFields</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/IntField.html" title="class in simpledb"><span class="typeNameLink">IntField</span></a> (implements simpledb.<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/IntHistogram.html" title="class in simpledb"><span class="typeNameLink">IntHistogram</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/JoinOptimizer.html" title="class in simpledb"><span class="typeNameLink">JoinOptimizer</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/JoinPredicate.html" title="class in simpledb"><span class="typeNameLink">JoinPredicate</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/LogFile.html" title="class in simpledb"><span class="typeNameLink">LogFile</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/LogicalFilterNode.html" title="class in simpledb"><span class="typeNameLink">LogicalFilterNode</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/LogicalJoinNode.html" title="class in simpledb"><span class="typeNameLink">LogicalJoinNode</span></a>
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/LogicalSubplanJoinNode.html" title="class in simpledb"><span class="typeNameLink">LogicalSubplanJoinNode</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="../simpledb/LogicalPlan.html" title="class in simpledb"><span class="typeNameLink">LogicalPlan</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/LogicalScanNode.html" title="class in simpledb"><span class="typeNameLink">LogicalScanNode</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/LogicalSelectListNode.html" title="class in simpledb"><span class="typeNameLink">LogicalSelectListNode</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Operator.html" title="class in simpledb"><span class="typeNameLink">Operator</span></a> (implements simpledb.<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/Aggregate.html" title="class in simpledb"><span class="typeNameLink">Aggregate</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Delete.html" title="class in simpledb"><span class="typeNameLink">Delete</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Filter.html" title="class in simpledb"><span class="typeNameLink">Filter</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/HashEquiJoin.html" title="class in simpledb"><span class="typeNameLink">HashEquiJoin</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Insert.html" title="class in simpledb"><span class="typeNameLink">Insert</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Join.html" title="class in simpledb"><span class="typeNameLink">Join</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/OrderBy.html" title="class in simpledb"><span class="typeNameLink">OrderBy</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Project.html" title="class in simpledb"><span class="typeNameLink">Project</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="../simpledb/OperatorCardinality.html" title="class in simpledb"><span class="typeNameLink">OperatorCardinality</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Parser.html" title="class in simpledb"><span class="typeNameLink">Parser</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Permissions.html" title="class in simpledb"><span class="typeNameLink">Permissions</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/PlanCache.html" title="class in simpledb"><span class="typeNameLink">PlanCache</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Predicate.html" title="class in simpledb"><span class="typeNameLink">Predicate</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/Query.html" title="class in simpledb"><span class="typeNameLink">Query</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/QueryPlanVisualizer.html" title="class in simpledb"><span class="typeNameLink">QueryPlanVisualizer</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/QueryPlanVisualizer.SubTreeDescriptor.html" title="class in simpledb"><span class="typeNameLink">QueryPlanVisualizer.SubTreeDescriptor</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/RecordId.html" title="class in simpledb"><span class="typeNameLink">RecordId</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/SeqScan.html" title="class in simpledb"><span class="typeNameLink">SeqScan</span></a> (implements simpledb.<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/SimpleDb.html" title="class in simpledb"><span class="typeNameLink">SimpleDb</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/StringAggregator.html" title="class in simpledb"><span class="typeNameLink">StringAggregator</span></a> (implements simpledb.<a href="../simpledb/Aggregator.html" title="interface in simpledb">Aggregator</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/StringAggregator.AggregateFields.html" title="class in simpledb"><span class="typeNameLink">StringAggregator.AggregateFields</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/StringField.html" title="class in simpledb"><span class="typeNameLink">StringField</span></a> (implements simpledb.<a href="../simpledb/Field.html" title="interface in simpledb">Field</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/StringHistogram.html" title="class in simpledb"><span class="typeNameLink">StringHistogram</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/TableStats.html" title="class in simpledb"><span class="typeNameLink">TableStats</span></a></li>
-<li type="circle">java.lang.Thread (implements java.lang.Runnable)
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeDeleter</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeInserter</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeReader</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb"><span class="typeNameLink">BTreeUtility.BTreeWriter</span></a></li>
-</ul>
-</li>
-<li type="circle">java.lang.Throwable (implements java.io.Serializable)
-<ul>
-<li type="circle">java.lang.Exception
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/DbException.html" title="class in simpledb"><span class="typeNameLink">DbException</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/DeadlockException.html" title="class in simpledb"><span class="typeNameLink">DeadlockException</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/ParsingException.html" title="class in simpledb"><span class="typeNameLink">ParsingException</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/TransactionAbortedException.html" title="class in simpledb"><span class="typeNameLink">TransactionAbortedException</span></a></li>
-</ul>
-</li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="../simpledb/Transaction.html" title="class in simpledb"><span class="typeNameLink">Transaction</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/TransactionId.html" title="class in simpledb"><span class="typeNameLink">TransactionId</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/Tuple.html" title="class in simpledb"><span class="typeNameLink">Tuple</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/TupleArrayIterator.html" title="class in simpledb"><span class="typeNameLink">TupleArrayIterator</span></a> (implements simpledb.<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/TupleComparator.html" title="class in simpledb"><span class="typeNameLink">TupleComparator</span></a> (implements java.util.Comparator&lt;T&gt;)</li>
-<li type="circle">simpledb.<a href="../simpledb/TupleDesc.html" title="class in simpledb"><span class="typeNameLink">TupleDesc</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/TupleDesc.TDItem.html" title="class in simpledb"><span class="typeNameLink">TupleDesc.TDItem</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/TupleIterator.html" title="class in simpledb"><span class="typeNameLink">TupleIterator</span></a> (implements simpledb.<a href="../simpledb/DbIterator.html" title="interface in simpledb">DbIterator</a>)</li>
-<li type="circle">simpledb.<a href="../simpledb/Utility.html" title="class in simpledb"><span class="typeNameLink">Utility</span></a></li>
-</ul>
-</li>
-</ul>
-<h2 title="Interface Hierarchy">Interface Hierarchy</h2>
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/DbFile.html" title="interface in simpledb"><span class="typeNameLink">DbFile</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/DbFileIterator.html" title="interface in simpledb"><span class="typeNameLink">DbFileIterator</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/Page.html" title="interface in simpledb"><span class="typeNameLink">Page</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/PageId.html" title="interface in simpledb"><span class="typeNameLink">PageId</span></a></li>
-<li type="circle">java.io.Serializable
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/Aggregator.html" title="interface in simpledb"><span class="typeNameLink">Aggregator</span></a></li>
-<li type="circle">simpledb.<a href="../simpledb/DbIterator.html" title="interface in simpledb"><span class="typeNameLink">DbIterator</span></a>
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/IndexDbIterator.html" title="interface in simpledb"><span class="typeNameLink">IndexDbIterator</span></a></li>
-</ul>
-</li>
-<li type="circle">simpledb.<a href="../simpledb/Field.html" title="interface in simpledb"><span class="typeNameLink">Field</span></a></li>
-</ul>
-</li>
-</ul>
-<h2 title="Enum Hierarchy">Enum Hierarchy</h2>
-<ul>
-<li type="circle">java.lang.Object
-<ul>
-<li type="circle">java.lang.Enum&lt;E&gt; (implements java.lang.Comparable&lt;T&gt;, java.io.Serializable)
-<ul>
-<li type="circle">simpledb.<a href="../simpledb/Type.html" title="enum in simpledb"><span class="typeNameLink">Type</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/Aggregator.Op.html" title="enum in simpledb"><span class="typeNameLink">Aggregator.Op</span></a> (implements java.io.Serializable)</li>
-<li type="circle">simpledb.<a href="../simpledb/Predicate.Op.html" title="enum in simpledb"><span class="typeNameLink">Predicate.Op</span></a> (implements java.io.Serializable)</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li>Class</li>
-<li class="navBarCell1Rev">Tree</li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li>Prev</li>
-<li>Next</li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/package-tree.html" target="_top">Frames</a></li>
-<li><a href="package-tree.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
diff -ruN lab3/javadoc/stylesheet.css lab4/javadoc/stylesheet.css
--- lab3/javadoc/stylesheet.css	2016-11-10 13:43:06.000000000 -0600
+++ lab4/javadoc/stylesheet.css	1969-12-31 18:00:00.000000000 -0600
@@ -1,574 +0,0 @@
-/* Javadoc style sheet */
-/*
-Overall document style
-*/
-
-@import url('resources/fonts/dejavu.css');
-
-body {
-    background-color:#ffffff;
-    color:#353833;
-    font-family:'DejaVu Sans', Arial, Helvetica, sans-serif;
-    font-size:14px;
-    margin:0;
-}
-a:link, a:visited {
-    text-decoration:none;
-    color:#4A6782;
-}
-a:hover, a:focus {
-    text-decoration:none;
-    color:#bb7a2a;
-}
-a:active {
-    text-decoration:none;
-    color:#4A6782;
-}
-a[name] {
-    color:#353833;
-}
-a[name]:hover {
-    text-decoration:none;
-    color:#353833;
-}
-pre {
-    font-family:'DejaVu Sans Mono', monospace;
-    font-size:14px;
-}
-h1 {
-    font-size:20px;
-}
-h2 {
-    font-size:18px;
-}
-h3 {
-    font-size:16px;
-    font-style:italic;
-}
-h4 {
-    font-size:13px;
-}
-h5 {
-    font-size:12px;
-}
-h6 {
-    font-size:11px;
-}
-ul {
-    list-style-type:disc;
-}
-code, tt {
-    font-family:'DejaVu Sans Mono', monospace;
-    font-size:14px;
-    padding-top:4px;
-    margin-top:8px;
-    line-height:1.4em;
-}
-dt code {
-    font-family:'DejaVu Sans Mono', monospace;
-    font-size:14px;
-    padding-top:4px;
-}
-table tr td dt code {
-    font-family:'DejaVu Sans Mono', monospace;
-    font-size:14px;
-    vertical-align:top;
-    padding-top:4px;
-}
-sup {
-    font-size:8px;
-}
-/*
-Document title and Copyright styles
-*/
-.clear {
-    clear:both;
-    height:0px;
-    overflow:hidden;
-}
-.aboutLanguage {
-    float:right;
-    padding:0px 21px;
-    font-size:11px;
-    z-index:200;
-    margin-top:-9px;
-}
-.legalCopy {
-    margin-left:.5em;
-}
-.bar a, .bar a:link, .bar a:visited, .bar a:active {
-    color:#FFFFFF;
-    text-decoration:none;
-}
-.bar a:hover, .bar a:focus {
-    color:#bb7a2a;
-}
-.tab {
-    background-color:#0066FF;
-    color:#ffffff;
-    padding:8px;
-    width:5em;
-    font-weight:bold;
-}
-/*
-Navigation bar styles
-*/
-.bar {
-    background-color:#4D7A97;
-    color:#FFFFFF;
-    padding:.8em .5em .4em .8em;
-    height:auto;/*height:1.8em;*/
-    font-size:11px;
-    margin:0;
-}
-.topNav {
-    background-color:#4D7A97;
-    color:#FFFFFF;
-    float:left;
-    padding:0;
-    width:100%;
-    clear:right;
-    height:2.8em;
-    padding-top:10px;
-    overflow:hidden;
-    font-size:12px; 
-}
-.bottomNav {
-    margin-top:10px;
-    background-color:#4D7A97;
-    color:#FFFFFF;
-    float:left;
-    padding:0;
-    width:100%;
-    clear:right;
-    height:2.8em;
-    padding-top:10px;
-    overflow:hidden;
-    font-size:12px;
-}
-.subNav {
-    background-color:#dee3e9;
-    float:left;
-    width:100%;
-    overflow:hidden;
-    font-size:12px;
-}
-.subNav div {
-    clear:left;
-    float:left;
-    padding:0 0 5px 6px;
-    text-transform:uppercase;
-}
-ul.navList, ul.subNavList {
-    float:left;
-    margin:0 25px 0 0;
-    padding:0;
-}
-ul.navList li{
-    list-style:none;
-    float:left;
-    padding: 5px 6px;
-    text-transform:uppercase;
-}
-ul.subNavList li{
-    list-style:none;
-    float:left;
-}
-.topNav a:link, .topNav a:active, .topNav a:visited, .bottomNav a:link, .bottomNav a:active, .bottomNav a:visited {
-    color:#FFFFFF;
-    text-decoration:none;
-    text-transform:uppercase;
-}
-.topNav a:hover, .bottomNav a:hover {
-    text-decoration:none;
-    color:#bb7a2a;
-    text-transform:uppercase;
-}
-.navBarCell1Rev {
-    background-color:#F8981D;
-    color:#253441;
-    margin: auto 5px;
-}
-.skipNav {
-    position:absolute;
-    top:auto;
-    left:-9999px;
-    overflow:hidden;
-}
-/*
-Page header and footer styles
-*/
-.header, .footer {
-    clear:both;
-    margin:0 20px;
-    padding:5px 0 0 0;
-}
-.indexHeader {
-    margin:10px;
-    position:relative;
-}
-.indexHeader span{
-    margin-right:15px;
-}
-.indexHeader h1 {
-    font-size:13px;
-}
-.title {
-    color:#2c4557;
-    margin:10px 0;
-}
-.subTitle {
-    margin:5px 0 0 0;
-}
-.header ul {
-    margin:0 0 15px 0;
-    padding:0;
-}
-.footer ul {
-    margin:20px 0 5px 0;
-}
-.header ul li, .footer ul li {
-    list-style:none;
-    font-size:13px;
-}
-/*
-Heading styles
-*/
-div.details ul.blockList ul.blockList ul.blockList li.blockList h4, div.details ul.blockList ul.blockList ul.blockListLast li.blockList h4 {
-    background-color:#dee3e9;
-    border:1px solid #d0d9e0;
-    margin:0 0 6px -8px;
-    padding:7px 5px;
-}
-ul.blockList ul.blockList ul.blockList li.blockList h3 {
-    background-color:#dee3e9;
-    border:1px solid #d0d9e0;
-    margin:0 0 6px -8px;
-    padding:7px 5px;
-}
-ul.blockList ul.blockList li.blockList h3 {
-    padding:0;
-    margin:15px 0;
-}
-ul.blockList li.blockList h2 {
-    padding:0px 0 20px 0;
-}
-/*
-Page layout container styles
-*/
-.contentContainer, .sourceContainer, .classUseContainer, .serializedFormContainer, .constantValuesContainer {
-    clear:both;
-    padding:10px 20px;
-    position:relative;
-}
-.indexContainer {
-    margin:10px;
-    position:relative;
-    font-size:12px;
-}
-.indexContainer h2 {
-    font-size:13px;
-    padding:0 0 3px 0;
-}
-.indexContainer ul {
-    margin:0;
-    padding:0;
-}
-.indexContainer ul li {
-    list-style:none;
-    padding-top:2px;
-}
-.contentContainer .description dl dt, .contentContainer .details dl dt, .serializedFormContainer dl dt {
-    font-size:12px;
-    font-weight:bold;
-    margin:10px 0 0 0;
-    color:#4E4E4E;
-}
-.contentContainer .description dl dd, .contentContainer .details dl dd, .serializedFormContainer dl dd {
-    margin:5px 0 10px 0px;
-    font-size:14px;
-    font-family:'DejaVu Sans Mono',monospace;
-}
-.serializedFormContainer dl.nameValue dt {
-    margin-left:1px;
-    font-size:1.1em;
-    display:inline;
-    font-weight:bold;
-}
-.serializedFormContainer dl.nameValue dd {
-    margin:0 0 0 1px;
-    font-size:1.1em;
-    display:inline;
-}
-/*
-List styles
-*/
-ul.horizontal li {
-    display:inline;
-    font-size:0.9em;
-}
-ul.inheritance {
-    margin:0;
-    padding:0;
-}
-ul.inheritance li {
-    display:inline;
-    list-style:none;
-}
-ul.inheritance li ul.inheritance {
-    margin-left:15px;
-    padding-left:15px;
-    padding-top:1px;
-}
-ul.blockList, ul.blockListLast {
-    margin:10px 0 10px 0;
-    padding:0;
-}
-ul.blockList li.blockList, ul.blockListLast li.blockList {
-    list-style:none;
-    margin-bottom:15px;
-    line-height:1.4;
-}
-ul.blockList ul.blockList li.blockList, ul.blockList ul.blockListLast li.blockList {
-    padding:0px 20px 5px 10px;
-    border:1px solid #ededed; 
-    background-color:#f8f8f8;
-}
-ul.blockList ul.blockList ul.blockList li.blockList, ul.blockList ul.blockList ul.blockListLast li.blockList {
-    padding:0 0 5px 8px;
-    background-color:#ffffff;
-    border:none;
-}
-ul.blockList ul.blockList ul.blockList ul.blockList li.blockList {
-    margin-left:0;
-    padding-left:0;
-    padding-bottom:15px;
-    border:none;
-}
-ul.blockList ul.blockList ul.blockList ul.blockList li.blockListLast {
-    list-style:none;
-    border-bottom:none;
-    padding-bottom:0;
-}
-table tr td dl, table tr td dl dt, table tr td dl dd {
-    margin-top:0;
-    margin-bottom:1px;
-}
-/*
-Table styles
-*/
-.overviewSummary, .memberSummary, .typeSummary, .useSummary, .constantsSummary, .deprecatedSummary {
-    width:100%;
-    border-left:1px solid #EEE; 
-    border-right:1px solid #EEE; 
-    border-bottom:1px solid #EEE; 
-}
-.overviewSummary, .memberSummary  {
-    padding:0px;
-}
-.overviewSummary caption, .memberSummary caption, .typeSummary caption,
-.useSummary caption, .constantsSummary caption, .deprecatedSummary caption {
-    position:relative;
-    text-align:left;
-    background-repeat:no-repeat;
-    color:#253441;
-    font-weight:bold;
-    clear:none;
-    overflow:hidden;
-    padding:0px;
-    padding-top:10px;
-    padding-left:1px;
-    margin:0px;
-    white-space:pre;
-}
-.overviewSummary caption a:link, .memberSummary caption a:link, .typeSummary caption a:link,
-.useSummary caption a:link, .constantsSummary caption a:link, .deprecatedSummary caption a:link,
-.overviewSummary caption a:hover, .memberSummary caption a:hover, .typeSummary caption a:hover,
-.useSummary caption a:hover, .constantsSummary caption a:hover, .deprecatedSummary caption a:hover,
-.overviewSummary caption a:active, .memberSummary caption a:active, .typeSummary caption a:active,
-.useSummary caption a:active, .constantsSummary caption a:active, .deprecatedSummary caption a:active,
-.overviewSummary caption a:visited, .memberSummary caption a:visited, .typeSummary caption a:visited,
-.useSummary caption a:visited, .constantsSummary caption a:visited, .deprecatedSummary caption a:visited {
-    color:#FFFFFF;
-}
-.overviewSummary caption span, .memberSummary caption span, .typeSummary caption span,
-.useSummary caption span, .constantsSummary caption span, .deprecatedSummary caption span {
-    white-space:nowrap;
-    padding-top:5px;
-    padding-left:12px;
-    padding-right:12px;
-    padding-bottom:7px;
-    display:inline-block;
-    float:left;
-    background-color:#F8981D;
-    border: none;
-    height:16px;
-}
-.memberSummary caption span.activeTableTab span {
-    white-space:nowrap;
-    padding-top:5px;
-    padding-left:12px;
-    padding-right:12px;
-    margin-right:3px;
-    display:inline-block;
-    float:left;
-    background-color:#F8981D;
-    height:16px;
-}
-.memberSummary caption span.tableTab span {
-    white-space:nowrap;
-    padding-top:5px;
-    padding-left:12px;
-    padding-right:12px;
-    margin-right:3px;
-    display:inline-block;
-    float:left;
-    background-color:#4D7A97;
-    height:16px;
-}
-.memberSummary caption span.tableTab, .memberSummary caption span.activeTableTab {
-    padding-top:0px;
-    padding-left:0px;
-    padding-right:0px;
-    background-image:none;
-    float:none;
-    display:inline;
-}
-.overviewSummary .tabEnd, .memberSummary .tabEnd, .typeSummary .tabEnd,
-.useSummary .tabEnd, .constantsSummary .tabEnd, .deprecatedSummary .tabEnd {
-    display:none;
-    width:5px;
-    position:relative;
-    float:left;
-    background-color:#F8981D;
-}
-.memberSummary .activeTableTab .tabEnd {
-    display:none;
-    width:5px;
-    margin-right:3px;
-    position:relative; 
-    float:left;
-    background-color:#F8981D;
-}
-.memberSummary .tableTab .tabEnd {
-    display:none;
-    width:5px;
-    margin-right:3px;
-    position:relative;
-    background-color:#4D7A97;
-    float:left;
-
-}
-.overviewSummary td, .memberSummary td, .typeSummary td,
-.useSummary td, .constantsSummary td, .deprecatedSummary td {
-    text-align:left;
-    padding:0px 0px 12px 10px;
-    width:100%;
-}
-th.colOne, th.colFirst, th.colLast, .useSummary th, .constantsSummary th,
-td.colOne, td.colFirst, td.colLast, .useSummary td, .constantsSummary td{
-    vertical-align:top;
-    padding-right:0px;
-    padding-top:8px;
-    padding-bottom:3px;
-}
-th.colFirst, th.colLast, th.colOne, .constantsSummary th {
-    background:#dee3e9;
-    text-align:left;
-    padding:8px 3px 3px 7px;
-}
-td.colFirst, th.colFirst {
-    white-space:nowrap;
-    font-size:13px;
-}
-td.colLast, th.colLast {
-    font-size:13px;
-}
-td.colOne, th.colOne {
-    font-size:13px;
-}
-.overviewSummary td.colFirst, .overviewSummary th.colFirst,
-.overviewSummary td.colOne, .overviewSummary th.colOne,
-.memberSummary td.colFirst, .memberSummary th.colFirst,
-.memberSummary td.colOne, .memberSummary th.colOne,
-.typeSummary td.colFirst{
-    width:25%;
-    vertical-align:top;
-}
-td.colOne a:link, td.colOne a:active, td.colOne a:visited, td.colOne a:hover, td.colFirst a:link, td.colFirst a:active, td.colFirst a:visited, td.colFirst a:hover, td.colLast a:link, td.colLast a:active, td.colLast a:visited, td.colLast a:hover, .constantValuesContainer td a:link, .constantValuesContainer td a:active, .constantValuesContainer td a:visited, .constantValuesContainer td a:hover {
-    font-weight:bold;
-}
-.tableSubHeadingColor {
-    background-color:#EEEEFF;
-}
-.altColor {
-    background-color:#FFFFFF;
-}
-.rowColor {
-    background-color:#EEEEEF;
-}
-/*
-Content styles
-*/
-.description pre {
-    margin-top:0;
-}
-.deprecatedContent {
-    margin:0;
-    padding:10px 0;
-}
-.docSummary {
-    padding:0;
-}
-
-ul.blockList ul.blockList ul.blockList li.blockList h3 {
-    font-style:normal;
-}
-
-div.block {
-    font-size:14px;
-    font-family:'DejaVu Serif', Georgia, "Times New Roman", Times, serif;
-}
-
-td.colLast div {
-    padding-top:0px;
-}
-
-
-td.colLast a {
-    padding-bottom:3px;
-}
-/*
-Formatting effect styles
-*/
-.sourceLineNo {
-    color:green;
-    padding:0 30px 0 0;
-}
-h1.hidden {
-    visibility:hidden;
-    overflow:hidden;
-    font-size:10px;
-}
-.block {
-    display:block;
-    margin:3px 10px 2px 0px;
-    color:#474747;
-}
-.deprecatedLabel, .descfrmTypeLabel, .memberNameLabel, .memberNameLink,
-.overrideSpecifyLabel, .packageHierarchyLabel, .paramLabel, .returnLabel,
-.seeLabel, .simpleTagLabel, .throwsLabel, .typeNameLabel, .typeNameLink {
-    font-weight:bold;
-}
-.deprecationComment, .emphasizedPhrase, .interfaceName {
-    font-style:italic;
-}
-
-div.block div.block span.deprecationComment, div.block div.block span.emphasizedPhrase,
-div.block div.block span.interfaceName {
-    font-style:normal;
-}
-
-div.contentContainer ul.blockList li.blockList h2{
-    padding-bottom:0px;
-}
diff -ruN lab3/src/java/simpledb/BTreeChecker.java lab4/src/java/simpledb/BTreeChecker.java
--- lab3/src/java/simpledb/BTreeChecker.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeChecker.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,124 +0,0 @@
-package simpledb;
-
-import java.io.IOException;
-import java.util.HashMap;
-import java.util.Iterator;
-
-/**
- * Created by orm on 10/7/15.
- */
-public class BTreeChecker {
-
-    /**
-     * This class is only used for error-checking code.
-     */
-    static class SubtreeSummary {
-        public int depth;
-        public BTreePageId ptrLeft;
-        public BTreePageId leftmostId;
-        public BTreePageId ptrRight;
-        public BTreePageId rightmostId;
-
-        SubtreeSummary() {}
-
-        SubtreeSummary(BTreeLeafPage base, int depth) {
-            this.depth = depth;
-
-            this.leftmostId = base.getId();
-            this.rightmostId = base.getId();
-
-            this.ptrLeft = base.getLeftSiblingId();
-            this.ptrRight = base.getRightSiblingId();
-        }
-
-        static SubtreeSummary checkAndMerge(SubtreeSummary accleft, SubtreeSummary right) {
-            assert(accleft.depth == right.depth);
-            assert(accleft.ptrRight.equals(right.leftmostId));
-            assert(accleft.rightmostId.equals(right.ptrLeft));
-
-            SubtreeSummary ans = new SubtreeSummary();
-            ans.depth = accleft.depth;
-
-            ans.ptrLeft = accleft.ptrLeft;
-            ans.leftmostId = accleft.leftmostId;
-
-            ans.ptrRight = right.ptrRight;
-            ans.rightmostId = right.rightmostId;
-            return ans;
-        }
-    }
-
-    /**
-     * checks the integrity of the tree:
-     * 1) parent pointers.
-     * 2) sibling pointers.
-     * 3) range invariants.
-     * 4) record to page pointers.
-     * 5) occupancy invariants. (if enabled)
-     */
-    public static void checkRep(BTreeFile bt, TransactionId tid, HashMap<PageId, Page> dirtypages,
-                                boolean checkOccupancy) throws
-            DbException, IOException, TransactionAbortedException {
-        BTreeRootPtrPage rtptr = bt.getRootPtrPage(tid, dirtypages);
-
-        if (rtptr.getRootId() == null) { // non existent root is a legal state.
-            return;
-        } else {
-            SubtreeSummary res = checkSubTree(bt, tid, dirtypages,
-                    rtptr.getRootId(), null, null, rtptr.getId(), checkOccupancy, 0);
-            assert (res.ptrLeft == null);
-            assert (res.ptrRight == null);
-        }
-    }
-
-    static SubtreeSummary checkSubTree(BTreeFile bt, TransactionId tid, HashMap<PageId, Page> dirtypages,
-                                       BTreePageId pageId, Field lowerBound, Field upperBound,
-                                       BTreePageId parentId, boolean checkOccupancy, int depth) throws
-            TransactionAbortedException, DbException {
-        BTreePage page = (BTreePage )bt.getPage(tid, dirtypages, pageId, Permissions.READ_ONLY);
-        assert(page.getParentId().equals(parentId));
-
-        if (page.getId().pgcateg() == BTreePageId.LEAF) {
-            BTreeLeafPage bpage = (BTreeLeafPage) page;
-            bpage.checkRep(bt.keyField(), lowerBound, upperBound, checkOccupancy, depth);
-            return new SubtreeSummary(bpage, depth);
-        } else if (page.getId().pgcateg() == BTreePageId.INTERNAL) {
-
-            BTreeInternalPage ipage = (BTreeInternalPage) page;
-            ipage.checkRep(lowerBound, upperBound, checkOccupancy, depth);
-
-            SubtreeSummary acc = null;
-            BTreeEntry prev = null;
-            Iterator<BTreeEntry> it = ipage.iterator();
-
-            prev = it.next();
-            { // init acc and prev.
-                acc = checkSubTree(bt, tid, dirtypages, prev.getLeftChild(), lowerBound, prev.getKey(), ipage.getId(),
-                        checkOccupancy, depth + 1);
-                lowerBound = prev.getKey();
-            }
-
-            assert(acc != null);
-            BTreeEntry curr = prev; // for one entry case.
-            while (it.hasNext()) {
-                curr = it.next();
-                SubtreeSummary currentSubTreeResult =
-                        checkSubTree(bt, tid, dirtypages, curr.getLeftChild(), lowerBound, curr.getKey(), ipage.getId(),
-                                checkOccupancy, depth + 1);
-                acc = SubtreeSummary.checkAndMerge(acc, currentSubTreeResult);
-
-                // need to move stuff for next iter:
-                lowerBound = curr.getKey();
-            }
-
-            SubtreeSummary lastRight = checkSubTree(bt, tid, dirtypages, curr.getRightChild(), lowerBound, upperBound,
-                    ipage.getId(), checkOccupancy, depth + 1);
-            acc = SubtreeSummary.checkAndMerge(acc, lastRight);
-
-            return acc;
-        } else {
-            assert(false); // no other page types allowed inside the tree.
-            return null;
-        }
-    }
-}
\ No newline at end of file
diff -ruN lab3/src/java/simpledb/BTreeEntry.java lab4/src/java/simpledb/BTreeEntry.java
--- lab3/src/java/simpledb/BTreeEntry.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeEntry.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,137 +0,0 @@
-package simpledb;
-
-import java.io.Serializable;
-
-/**
- * Each instance of BTreeEntry stores one key and two child page ids. It is used
- * by BTreeInternalPage as an abstraction to iterate through the entries stored inside. 
- * All of the entries or tuples in the left child page should be less than or equal to 
- * the key, and all of the entries or tuples in the right child page should be greater 
- * than or equal to the key.
- * 
- * Note that updating a BTreeEntry does not actually change the data stored on the page 
- * identified by its recordId. After updating a BTreeEntry object, you must call 
- * BTreeInternalPage.updateEntry() in order for the changes to take effect.
- *
- * @see BTreeInternalPage
- * @see BTreeInternalPage#updateEntry(BTreeEntry)
- *
- */
-public class BTreeEntry implements Serializable {
-
-	private static final long serialVersionUID = 1L;
-	
-	/**
-	 * The key of this entry
-	 * */
-	private Field key;
-
-	/**
-	 * The left child page id
-	 * */
-	private BTreePageId leftChild;
-
-	/**
-	 * The right child page id
-	 * */
-	private BTreePageId rightChild;
-
-	/**
-	 * The record id of this entry
-	 * */
-	private RecordId rid; // null if not stored on any page
-
-	/**
-	 * Constructor to create a new BTreeEntry
-	 * @param key - the key
-	 * @param leftChild - page id of the left child
-	 * @param rightChild - page id of the right child
-	 */
-	public BTreeEntry(Field key, BTreePageId leftChild, BTreePageId rightChild) {
-		this.key = key;
-		this.leftChild = leftChild;
-		this.rightChild = rightChild;
-	}
-	
-	/**
-	 * @return the key
-	 */
-	public Field getKey() {
-		return key;
-	}
-	
-	/**
-	 * @return the left child page id
-	 */
-	public BTreePageId getLeftChild() {
-		return leftChild;
-	}
-	
-	/**
-	 * @return the right child page id
-	 */
-	public BTreePageId getRightChild() {
-		return rightChild;
-	}
-	
-	/**
-	 * @return the record id of this entry, representing the location of this entry
-	 * in a BTreeFile. May be null if this entry is not stored on any page in the file
-	 */
-	public RecordId getRecordId() {
-		return rid;
-	}
-	
-	/**
-	 * Set the key for this entry. Note that updating a BTreeEntry does not 
-	 * actually change the data stored on the page identified by its recordId.  After
-	 * calling this method, you must call BTreeInternalPage.updateEntry() in order for
-	 * it to take effect.
-	 * @param key - the new key
-	 * @see BTreeInternalPage#updateEntry(BTreeEntry)
-	 */
-	public void setKey(Field key) {
-		this.key = key;
-	}
-	
-	/**
-	 * Set the left child id for this entry.  Note that updating a BTreeEntry does not 
-	 * actually change the data stored on the page identified by its recordId.  After
-	 * calling this method, you must call BTreeInternalPage.updateEntry() in order for
-	 * it to take effect.
-	 * @param leftChild - the new left child
-	 * @see BTreeInternalPage#updateEntry(BTreeEntry)
-	 */
-	public void setLeftChild(BTreePageId leftChild) {
-		this.leftChild = leftChild;
-	}
-	
-	/**
-	 * Set the right child id for this entry.  Note that updating a BTreeEntry does not 
-	 * actually change the data stored on the page identified by its recordId.  After
-	 * calling this method, you must call BTreeInternalPage.updateEntry() in order for
-	 * it to take effect.
-	 * @param rightChild - the new right child
-	 * @see BTreeInternalPage#updateEntry(BTreeEntry)
-	 */
-	public void setRightChild(BTreePageId rightChild) {
-		this.rightChild = rightChild;
-	}
-	
-	/**
-	 * set the record id for this entry
-	 * @param rid - the new record id
-	 */
-	public void setRecordId(RecordId rid) {
-		this.rid = rid;
-	}
-	
-	/**
-	 * Prints a representation of this BTreeEntry
-	 */
-	public String toString() {
-		return "[" + leftChild.pageNumber() + "|" + key + "|" + rightChild.pageNumber() + "]";
-	}
-	
-}
-
diff -ruN lab3/src/java/simpledb/BTreeFile.java lab4/src/java/simpledb/BTreeFile.java
--- lab3/src/java/simpledb/BTreeFile.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeFile.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,1257 +0,0 @@
-package simpledb;
-
-import java.io.*;
-import java.util.*;
-import java.nio.channels.FileChannel;
-
-import simpledb.Predicate.Op;
-
-/**
- * BTreeFile is an implementation of a DbFile that stores a B+ tree.
- * Specifically, it stores a pointer to a root page,
- * a set of internal pages, and a set of leaf pages, which contain a collection of tuples
- * in sorted order. BTreeFile works closely with BTreeLeafPage, BTreeInternalPage,
- * and BTreeRootPtrPage. The format of these pages is described in their constructors.
- * 
- * @see simpledb.BTreeLeafPage#BTreeLeafPage
- * @see simpledb.BTreeInternalPage#BTreeInternalPage
- * @see simpledb.BTreeHeaderPage#BTreeHeaderPage
- * @see simpledb.BTreeRootPtrPage#BTreeRootPtrPage
- * @author Becca Taft
- */
-public class BTreeFile implements DbFile {
-
-	private final File f;
-	private final TupleDesc td;
-	private final int tableid ;
-	private int keyField;
-
-	/**
-	 * Constructs a B+ tree file backed by the specified file.
-	 * 
-	 * @param f - the file that stores the on-disk backing store for this B+ tree
-	 *            file.
-	 * @param key - the field which index is keyed on
-	 * @param td - the tuple descriptor of tuples in the file
-	 */
-	public BTreeFile(File f, int key, TupleDesc td) {
-		this.f = f;
-		this.tableid = f.getAbsoluteFile().hashCode();
-		this.keyField = key;
-		this.td = td;
-	}
-
-	/**
-	 * Returns the File backing this BTreeFile on disk.
-	 */
-	public File getFile() {
-		return f;
-	}
-
-	/**
-	 * Returns an ID uniquely identifying this BTreeFile. Implementation note:
-	 * you will need to generate this tableid somewhere and ensure that each
-	 * BTreeFile has a "unique id," and that you always return the same value for
-	 * a particular BTreeFile. We suggest hashing the absolute file name of the
-	 * file underlying the BTreeFile, i.e. f.getAbsoluteFile().hashCode().
-	 * 
-	 * @return an ID uniquely identifying this BTreeFile.
-	 */
-	public int getId() {
-		return tableid;
-	}
-
-	/**
-	 * Returns the TupleDesc of the table stored in this DbFile.
-	 * 
-	 * @return TupleDesc of this DbFile.
-	 */
-	public TupleDesc getTupleDesc() {
-		return td;
-	}
-
-	/**
-	 * Read a page from the file on disk. This should not be called directly
-	 * but should be called from the BufferPool via getPage()
-	 * 
-	 * @param pid - the id of the page to read from disk
-	 * @return the page constructed from the contents on disk
-	 */
-	public Page readPage(PageId pid) {
-		BTreePageId id = (BTreePageId) pid;
-		BufferedInputStream bis = null;
-
-		try {
-			bis = new BufferedInputStream(new FileInputStream(f));
-			if(id.pgcateg() == BTreePageId.ROOT_PTR) {
-				byte pageBuf[] = new byte[BTreeRootPtrPage.getPageSize()];
-				int retval = bis.read(pageBuf, 0, BTreeRootPtrPage.getPageSize());
-				if (retval == -1) {
-					throw new IllegalArgumentException("Read past end of table");
-				}
-				if (retval < BTreeRootPtrPage.getPageSize()) {
-					throw new IllegalArgumentException("Unable to read "
-							+ BTreeRootPtrPage.getPageSize() + " bytes from BTreeFile");
-				}
-				Debug.log(1, "BTreeFile.readPage: read page %d", id.pageNumber());
-				BTreeRootPtrPage p = new BTreeRootPtrPage(id, pageBuf);
-				return p;
-			}
-			else {
-				byte pageBuf[] = new byte[BufferPool.getPageSize()];
-				if (bis.skip(BTreeRootPtrPage.getPageSize() + (id.pageNumber()-1) * BufferPool.getPageSize()) != 
-						BTreeRootPtrPage.getPageSize() + (id.pageNumber()-1) * BufferPool.getPageSize()) {
-					throw new IllegalArgumentException(
-							"Unable to seek to correct place in BTreeFile");
-				}
-				int retval = bis.read(pageBuf, 0, BufferPool.getPageSize());
-				if (retval == -1) {
-					throw new IllegalArgumentException("Read past end of table");
-				}
-				if (retval < BufferPool.getPageSize()) {
-					throw new IllegalArgumentException("Unable to read "
-							+ BufferPool.getPageSize() + " bytes from BTreeFile");
-				}
-				Debug.log(1, "BTreeFile.readPage: read page %d", id.pageNumber());
-				if(id.pgcateg() == BTreePageId.INTERNAL) {
-					BTreeInternalPage p = new BTreeInternalPage(id, pageBuf, keyField);
-					return p;
-				}
-				else if(id.pgcateg() == BTreePageId.LEAF) {
-					BTreeLeafPage p = new BTreeLeafPage(id, pageBuf, keyField);
-					return p;
-				}
-				else { // id.pgcateg() == BTreePageId.HEADER
-					BTreeHeaderPage p = new BTreeHeaderPage(id, pageBuf);
-					return p;
-				}
-			}
-		} catch (IOException e) {
-			throw new RuntimeException(e);
-		} finally {
-			// Close the file on success or error
-			try {
-				if (bis != null)
-					bis.close();
-			} catch (IOException ioe) {
-				// Ignore failures closing the file
-			}
-		}
-	}
-
-	/**
-	 * Write a page to disk.  This should not be called directly but should 
-	 * be called from the BufferPool when pages are flushed to disk
-	 * 
-	 * @param page - the page to write to disk
-	 */
-	public void writePage(Page page) throws IOException {
-		BTreePageId id = (BTreePageId) page.getId();
-		
-		byte[] data = page.getPageData();
-		RandomAccessFile rf = new RandomAccessFile(f, "rw");
-		if(id.pgcateg() == BTreePageId.ROOT_PTR) {
-			rf.write(data);
-			rf.close();
-		}
-		else {
-			rf.seek(BTreeRootPtrPage.getPageSize() + (page.getId().pageNumber()-1) * BufferPool.getPageSize());
-			rf.write(data);
-			rf.close();
-		}
-	}
-	
-	/**
-	 * Returns the number of pages in this BTreeFile.
-	 */
-	public int numPages() {
-		// we only ever write full pages
-		return (int) ((f.length() - BTreeRootPtrPage.getPageSize())/ BufferPool.getPageSize());
-	}
-
-	/**
-	 * Returns the index of the field that this B+ tree is keyed on
-	 */
-	public int keyField() {
-		return keyField;
-	}
-
-	/**
-	 * Recursive function which finds and locks the leaf page in the B+ tree corresponding to
-	 * the left-most page possibly containing the key field f. It locks all internal
-	 * nodes along the path to the leaf node with READ_ONLY permission, and locks the 
-	 * leaf node with permission perm.
-	 * 
-	 * If f is null, it finds the left-most leaf page -- used for the iterator
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param pid - the current page being searched
-	 * @param perm - the permissions with which to lock the leaf page
-	 * @param f - the field to search for
-	 * @return the left-most leaf page possibly containing the key field f
-	 * 
-	 */
-	private BTreeLeafPage findLeafPage(TransactionId tid, HashMap<PageId, Page> dirtypages, BTreePageId pid, Permissions perm,
-			Field f) 
-					throws DbException, TransactionAbortedException {
-		// some code goes here
-        return null;
-	}
-	
-	/**
-	 * Convenience method to find a leaf page when there is no dirtypages HashMap.
-	 * Used by the BTreeFile iterator.
-	 * @see #findLeafPage(TransactionId, HashMap, BTreePageId, Permissions, Field)
-	 * 
-	 * @param tid - the transaction id
-	 * @param pid - the current page being searched
-	 * @param perm - the permissions with which to lock the leaf page
-	 * @param f - the field to search for
-	 * @return the left-most leaf page possibly containing the key field f
-	 * 
-	 */
-	BTreeLeafPage findLeafPage(TransactionId tid, BTreePageId pid, Permissions perm,
-			Field f) 
-					throws DbException, TransactionAbortedException {
-		return findLeafPage(tid, new HashMap<PageId, Page>(), pid, perm, f);
-	}
-
-	/**
-	 * Split a leaf page to make room for new tuples and recursively split the parent node
-	 * as needed to accommodate a new entry. The new entry should have a key matching the key field
-	 * of the first tuple in the right-hand page (the key is "copied up"), and child pointers 
-	 * pointing to the two leaf pages resulting from the split.  Update sibling pointers and parent 
-	 * pointers as needed.  
-	 * 
-	 * Return the leaf page into which a new tuple with key field "field" should be inserted.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param page - the leaf page to split
-	 * @param field - the key field of the tuple to be inserted after the split is complete. Necessary to know
-	 * which of the two pages to return.
-	 * @see #getParentWithEmptySlots(TransactionId, HashMap, BTreePageId, Field)
-	 * 
-	 * @return the leaf page into which the new tuple should be inserted
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	protected BTreeLeafPage splitLeafPage(TransactionId tid, HashMap<PageId, Page> dirtypages, BTreeLeafPage page, Field field) 
-			throws DbException, IOException, TransactionAbortedException {
-		// some code goes here
-        //
-        // Split the leaf page by adding a new page on the right of the existing
-		// page and moving half of the tuples to the new page.  Copy the middle key up
-		// into the parent page, and recursively split the parent as needed to accommodate
-		// the new entry.  getParentWithEmtpySlots() will be useful here.  Don't forget to update
-		// the sibling pointers of all the affected leaf pages.  Return the page into which a 
-		// tuple with the given key field should be inserted.
-        return null;
-		
-	}
-	
-	/**
-	 * Split an internal page to make room for new entries and recursively split its parent page
-	 * as needed to accommodate a new entry. The new entry for the parent should have a key matching 
-	 * the middle key in the original internal page being split (this key is "pushed up" to the parent). 
-	 * The child pointers of the new parent entry should point to the two internal pages resulting 
-	 * from the split. Update parent pointers as needed.
-	 * 
-	 * Return the internal page into which an entry with key field "field" should be inserted
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param page - the internal page to split
-	 * @param field - the key field of the entry to be inserted after the split is complete. Necessary to know
-	 * which of the two pages to return.
-	 * @see #getParentWithEmptySlots(TransactionId, HashMap, BTreePageId, Field)
-	 * @see #updateParentPointers(TransactionId, HashMap, BTreeInternalPage)
-	 * 
-	 * @return the internal page into which the new entry should be inserted
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	protected BTreeInternalPage splitInternalPage(TransactionId tid, HashMap<PageId, Page> dirtypages, 
-			BTreeInternalPage page, Field field) 
-					throws DbException, IOException, TransactionAbortedException {
-		// some code goes here
-        //
-        // Split the internal page by adding a new page on the right of the existing
-		// page and moving half of the entries to the new page.  Push the middle key up
-		// into the parent page, and recursively split the parent as needed to accommodate
-		// the new entry.  getParentWithEmtpySlots() will be useful here.  Don't forget to update
-		// the parent pointers of all the children moving to the new page.  updateParentPointers()
-		// will be useful here.  Return the page into which an entry with the given key field
-		// should be inserted.
-		return null;
-	}
-	
-	/**
-	 * Method to encapsulate the process of getting a parent page ready to accept new entries.
-	 * This may mean creating a page to become the new root of the tree, splitting the existing 
-	 * parent page if there are no empty slots, or simply locking and returning the existing parent page.
-	 *
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param parentId - the id of the parent. May be an internal page or the RootPtr page
-	 * @param field - the key of the entry which will be inserted. Needed in case the parent must be split
-	 * to accommodate the new entry
-	 * @return the parent page, guaranteed to have at least one empty slot
-	 * @see #splitInternalPage(TransactionId, HashMap, BTreeInternalPage, Field)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	private BTreeInternalPage getParentWithEmptySlots(TransactionId tid, HashMap<PageId, Page> dirtypages, 
-			BTreePageId parentId, Field field) throws DbException, IOException, TransactionAbortedException {
-		
-		BTreeInternalPage parent = null;
-		
-		// create a parent node if necessary
-		// this will be the new root of the tree
-		if(parentId.pgcateg() == BTreePageId.ROOT_PTR) {
-			parent = (BTreeInternalPage) getEmptyPage(tid, dirtypages, BTreePageId.INTERNAL);
-
-			// update the root pointer
-			BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) getPage(tid, dirtypages,
-					BTreeRootPtrPage.getId(tableid), Permissions.READ_WRITE);
-			BTreePageId prevRootId = rootPtr.getRootId(); //save prev id before overwriting.
-			rootPtr.setRootId(parent.getId());
-
-			// update the previous root to now point to this new root.
-			BTreePage prevRootPage = (BTreePage)getPage(tid, dirtypages, prevRootId, Permissions.READ_WRITE);
-			prevRootPage.setParentId(parent.getId());
-		}
-		else { 
-			// lock the parent page
-			parent = (BTreeInternalPage) getPage(tid, dirtypages, parentId, 
-					Permissions.READ_WRITE);
-		}
-
-		// split the parent if needed
-		if(parent.getNumEmptySlots() == 0) {
-			parent = splitInternalPage(tid, dirtypages, parent, field);
-		}
-
-		return parent;
-
-	}
-
-	/**
-	 * Helper function to update the parent pointer of a node.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param pid - id of the parent node
-	 * @param child - id of the child node to be updated with the parent pointer
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	private void updateParentPointer(TransactionId tid, HashMap<PageId, Page> dirtypages, BTreePageId pid, BTreePageId child) 
-			throws DbException, IOException, TransactionAbortedException {
-
-		BTreePage p = (BTreePage) getPage(tid, dirtypages, child, Permissions.READ_ONLY);
-
-		if(!p.getParentId().equals(pid)) {
-			p = (BTreePage) getPage(tid, dirtypages, child, Permissions.READ_WRITE);
-			p.setParentId(pid);
-		}
-
-	}
-	
-	/**
-	 * Update the parent pointer of every child of the given page so that it correctly points to
-	 * the parent
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param page - the parent page
-	 * @see #updateParentPointer(TransactionId, HashMap, BTreePageId, BTreePageId)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	private void updateParentPointers(TransactionId tid, HashMap<PageId, Page> dirtypages, BTreeInternalPage page) 
-			throws DbException, IOException, TransactionAbortedException{
-		Iterator<BTreeEntry> it = page.iterator();
-		BTreePageId pid = page.getId();
-		BTreeEntry e = null;
-		while(it.hasNext()) {
-			e = it.next();
-			updateParentPointer(tid, dirtypages, pid, e.getLeftChild());
-		}
-		if(e != null) {
-			updateParentPointer(tid, dirtypages, pid, e.getRightChild());
-		}
-	}
-	
-	/**
-	 * Method to encapsulate the process of locking/fetching a page.  First the method checks the local 
-	 * cache ("dirtypages"), and if it can't find the requested page there, it fetches it from the buffer pool.  
-	 * It also adds pages to the dirtypages cache if they are fetched with read-write permission, since 
-	 * presumably they will soon be dirtied by this transaction.
-	 * 
-	 * This method is needed to ensure that page updates are not lost if the same pages are
-	 * accessed multiple times.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param pid - the id of the requested page
-	 * @param perm - the requested permissions on the page
-	 * @return the requested page
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	Page getPage(TransactionId tid, HashMap<PageId, Page> dirtypages, BTreePageId pid, Permissions perm)
-			throws DbException, TransactionAbortedException {
-		if(dirtypages.containsKey(pid)) {
-			return dirtypages.get(pid);
-		}
-		else {
-			Page p = Database.getBufferPool().getPage(tid, pid, perm);
-			if(perm == Permissions.READ_WRITE) {
-				dirtypages.put(pid, p);
-			}
-			return p;
-		}
-	}
-
-	/**
-	 * Insert a tuple into this BTreeFile, keeping the tuples in sorted order. 
-	 * May cause pages to split if the page where tuple t belongs is full.
-	 * 
-	 * @param tid - the transaction id
-	 * @param t - the tuple to insert
-	 * @return a list of all pages that were dirtied by this operation. Could include
-	 * many pages since parent pointers will need to be updated when an internal node splits.
-	 * @see #splitLeafPage(TransactionId, HashMap, BTreeLeafPage, Field)
-	 */
-	public ArrayList<Page> insertTuple(TransactionId tid, Tuple t)
-			throws DbException, IOException, TransactionAbortedException {
-		HashMap<PageId, Page> dirtypages = new HashMap<PageId, Page>();
-
-		// get a read lock on the root pointer page and use it to locate the root page
-		BTreeRootPtrPage rootPtr = getRootPtrPage(tid, dirtypages);
-		BTreePageId rootId = rootPtr.getRootId();
-
-		if(rootId == null) { // the root has just been created, so set the root pointer to point to it		
-			rootId = new BTreePageId(tableid, numPages(), BTreePageId.LEAF);
-			rootPtr = (BTreeRootPtrPage) getPage(tid, dirtypages, BTreeRootPtrPage.getId(tableid), Permissions.READ_WRITE);
-			rootPtr.setRootId(rootId);
-		}
-
-		// find and lock the left-most leaf page corresponding to the key field,
-		// and split the leaf page if there are no more slots available
-		BTreeLeafPage leafPage = findLeafPage(tid, dirtypages, rootId, Permissions.READ_WRITE, t.getField(keyField));
-		if(leafPage.getNumEmptySlots() == 0) {
-			leafPage = splitLeafPage(tid, dirtypages, leafPage, t.getField(keyField));	
-		}
-
-		// insert the tuple into the leaf page
-		leafPage.insertTuple(t);
-
-		ArrayList<Page> dirtyPagesArr = new ArrayList<Page>();
-		dirtyPagesArr.addAll(dirtypages.values());
-		return dirtyPagesArr;
-	}
-	
-	/**
-	 * Handle the case when a B+ tree page becomes less than half full due to deletions.
-	 * If one of its siblings has extra tuples/entries, redistribute those tuples/entries.
-	 * Otherwise merge with one of the siblings. Update pointers as needed.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param page - the page which is less than half full
-	 * @see #handleMinOccupancyLeafPage(TransactionId, HashMap, BTreeLeafPage, BTreeInternalPage, BTreeEntry, BTreeEntry)
-	 * @see #handleMinOccupancyInternalPage(TransactionId, HashMap, BTreeInternalPage, BTreeInternalPage, BTreeEntry, BTreeEntry)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	private void handleMinOccupancyPage(TransactionId tid, HashMap<PageId, Page> dirtypages, BTreePage page) 
-			throws DbException, IOException, TransactionAbortedException {
-		BTreePageId parentId = page.getParentId();
-		BTreeEntry leftEntry = null;
-		BTreeEntry rightEntry = null;
-		BTreeInternalPage parent = null;
-
-		// find the left and right siblings through the parent so we make sure they have
-		// the same parent as the page. Find the entries in the parent corresponding to 
-		// the page and siblings
-		if(parentId.pgcateg() != BTreePageId.ROOT_PTR) {
-			parent = (BTreeInternalPage) getPage(tid, dirtypages, parentId, Permissions.READ_WRITE);
-			Iterator<BTreeEntry> ite = parent.iterator();
-			while(ite.hasNext()) {
-				BTreeEntry e = ite.next();
-				if(e.getLeftChild().equals(page.getId())) {
-					rightEntry = e;
-					break;
-				}
-				else if(e.getRightChild().equals(page.getId())) {
-					leftEntry = e;
-				}
-			}
-		}
-		
-		if(page.getId().pgcateg() == BTreePageId.LEAF) {
-			handleMinOccupancyLeafPage(tid, dirtypages, (BTreeLeafPage) page, parent, leftEntry, rightEntry);
-		}
-		else { // BTreePageId.INTERNAL
-			handleMinOccupancyInternalPage(tid, dirtypages, (BTreeInternalPage) page, parent, leftEntry, rightEntry);
-		}
-	}
-	
-	/**
-	 * Handle the case when a leaf page becomes less than half full due to deletions.
-	 * If one of its siblings has extra tuples, redistribute those tuples.
-	 * Otherwise merge with one of the siblings. Update pointers as needed.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param page - the leaf page which is less than half full
-	 * @param parent - the parent of the leaf page
-	 * @param leftEntry - the entry in the parent pointing to the given page and its left-sibling
-	 * @param rightEntry - the entry in the parent pointing to the given page and its right-sibling
-	 * @see #mergeLeafPages(TransactionId, HashMap, BTreeLeafPage, BTreeLeafPage, BTreeInternalPage, BTreeEntry)
-	 * @see #stealFromLeafPage(BTreeLeafPage, BTreeLeafPage, BTreeInternalPage,  BTreeEntry, boolean)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	private void handleMinOccupancyLeafPage(TransactionId tid, HashMap<PageId, Page> dirtypages, BTreeLeafPage page, 
-			BTreeInternalPage parent, BTreeEntry leftEntry, BTreeEntry rightEntry) 
-			throws DbException, IOException, TransactionAbortedException {
-		BTreePageId leftSiblingId = null;
-		BTreePageId rightSiblingId = null;
-		if(leftEntry != null) leftSiblingId = leftEntry.getLeftChild();
-		if(rightEntry != null) rightSiblingId = rightEntry.getRightChild();
-		
-		int maxEmptySlots = page.getMaxTuples() - page.getMaxTuples()/2; // ceiling
-		if(leftSiblingId != null) {
-			BTreeLeafPage leftSibling = (BTreeLeafPage) getPage(tid, dirtypages, leftSiblingId, Permissions.READ_WRITE);
-			// if the left sibling is at minimum occupancy, merge with it. Otherwise
-			// steal some tuples from it
-			if(leftSibling.getNumEmptySlots() >= maxEmptySlots) {
-				mergeLeafPages(tid, dirtypages, leftSibling, page, parent, leftEntry);
-			}
-			else {
-				stealFromLeafPage(page, leftSibling, parent, leftEntry, false);				
-			}
-		}
-		else if(rightSiblingId != null) {	
-			BTreeLeafPage rightSibling = (BTreeLeafPage) getPage(tid, dirtypages, rightSiblingId, Permissions.READ_WRITE);
-			// if the right sibling is at minimum occupancy, merge with it. Otherwise
-			// steal some tuples from it
-			if(rightSibling.getNumEmptySlots() >= maxEmptySlots) {
-				mergeLeafPages(tid, dirtypages, page, rightSibling, parent, rightEntry);
-			}
-			else {
-				stealFromLeafPage(page, rightSibling, parent, rightEntry, true);				
-			}
-		}
-	}
-	
-	/**
-	 * Steal tuples from a sibling and copy them to the given page so that both pages are at least
-	 * half full.  Update the parent's entry so that the key matches the key field of the first
-	 * tuple in the right-hand page.
-	 * 
-	 * @param page - the leaf page which is less than half full
-	 * @param sibling - the sibling which has tuples to spare
-	 * @param parent - the parent of the two leaf pages
-	 * @param entry - the entry in the parent pointing to the two leaf pages
-	 * @param isRightSibling - whether the sibling is a right-sibling
-	 * 
-	 * @throws DbException
-	 */
-	protected void stealFromLeafPage(BTreeLeafPage page, BTreeLeafPage sibling,
-			BTreeInternalPage parent, BTreeEntry entry, boolean isRightSibling) throws DbException {
-		// some code goes here
-        //
-        // Move some of the tuples from the sibling to the page so
-		// that the tuples are evenly distributed. Be sure to update
-		// the corresponding parent entry.
-	}
-
-	/**
-	 * Handle the case when an internal page becomes less than half full due to deletions.
-	 * If one of its siblings has extra entries, redistribute those entries.
-	 * Otherwise merge with one of the siblings. Update pointers as needed.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param page - the internal page which is less than half full
-	 * @param parent - the parent of the internal page
-	 * @param leftEntry - the entry in the parent pointing to the given page and its left-sibling
-	 * @param rightEntry - the entry in the parent pointing to the given page and its right-sibling
-	 * @see #mergeInternalPages(TransactionId, HashMap, BTreeInternalPage, BTreeInternalPage, BTreeInternalPage, BTreeEntry)
-	 * @see #stealFromLeftInternalPage(TransactionId, HashMap, BTreeInternalPage, BTreeInternalPage, BTreeInternalPage, BTreeEntry)
-	 * @see #stealFromRightInternalPage(TransactionId, HashMap, BTreeInternalPage, BTreeInternalPage, BTreeInternalPage, BTreeEntry)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	private void handleMinOccupancyInternalPage(TransactionId tid, HashMap<PageId, Page> dirtypages, 
-			BTreeInternalPage page, BTreeInternalPage parent, BTreeEntry leftEntry, BTreeEntry rightEntry) 
-					throws DbException, IOException, TransactionAbortedException {
-		BTreePageId leftSiblingId = null;
-		BTreePageId rightSiblingId = null;
-		if(leftEntry != null) leftSiblingId = leftEntry.getLeftChild();
-		if(rightEntry != null) rightSiblingId = rightEntry.getRightChild();
-		
-		int maxEmptySlots = page.getMaxEntries() - page.getMaxEntries()/2; // ceiling
-		if(leftSiblingId != null) {
-			BTreeInternalPage leftSibling = (BTreeInternalPage) getPage(tid, dirtypages, leftSiblingId, Permissions.READ_WRITE);
-			// if the left sibling is at minimum occupancy, merge with it. Otherwise
-			// steal some entries from it
-			if(leftSibling.getNumEmptySlots() >= maxEmptySlots) {
-				mergeInternalPages(tid, dirtypages, leftSibling, page, parent, leftEntry);
-			}
-			else {
-				stealFromLeftInternalPage(tid, dirtypages, page, leftSibling, parent, leftEntry);
-			}
-		}
-		else if(rightSiblingId != null) {
-			BTreeInternalPage rightSibling = (BTreeInternalPage) getPage(tid, dirtypages, rightSiblingId, Permissions.READ_WRITE);
-			// if the right sibling is at minimum occupancy, merge with it. Otherwise
-			// steal some entries from it
-			if(rightSibling.getNumEmptySlots() >= maxEmptySlots) {
-				mergeInternalPages(tid, dirtypages, page, rightSibling, parent, rightEntry);
-			}
-			else {
-				stealFromRightInternalPage(tid, dirtypages, page, rightSibling, parent, rightEntry);
-			}
-		}
-	}
-	
-	/**
-	 * Steal entries from the left sibling and copy them to the given page so that both pages are at least
-	 * half full. Keys can be thought of as rotating through the parent entry, so the original key in the 
-	 * parent is "pulled down" to the right-hand page, and the last key in the left-hand page is "pushed up"
-	 * to the parent.  Update parent pointers as needed.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param page - the internal page which is less than half full
-	 * @param leftSibling - the left sibling which has entries to spare
-	 * @param parent - the parent of the two internal pages
-	 * @param parentEntry - the entry in the parent pointing to the two internal pages
-	 * @see #updateParentPointers(TransactionId, HashMap, BTreeInternalPage)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	protected void stealFromLeftInternalPage(TransactionId tid, HashMap<PageId, Page> dirtypages, 
-			BTreeInternalPage page, BTreeInternalPage leftSibling, BTreeInternalPage parent,
-			BTreeEntry parentEntry) throws DbException, IOException, TransactionAbortedException {
-		// some code goes here
-        // Move some of the entries from the left sibling to the page so
-		// that the entries are evenly distributed. Be sure to update
-		// the corresponding parent entry. Be sure to update the parent
-		// pointers of all children in the entries that were moved.
-	}
-	
-	/**
-	 * Steal entries from the right sibling and copy them to the given page so that both pages are at least
-	 * half full. Keys can be thought of as rotating through the parent entry, so the original key in the 
-	 * parent is "pulled down" to the left-hand page, and the last key in the right-hand page is "pushed up"
-	 * to the parent.  Update parent pointers as needed.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param page - the internal page which is less than half full
-	 * @param rightSibling - the right sibling which has entries to spare
-	 * @param parent - the parent of the two internal pages
-	 * @param parentEntry - the entry in the parent pointing to the two internal pages
-	 * @see #updateParentPointers(TransactionId, HashMap, BTreeInternalPage)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	protected void stealFromRightInternalPage(TransactionId tid, HashMap<PageId, Page> dirtypages, 
-			BTreeInternalPage page, BTreeInternalPage rightSibling, BTreeInternalPage parent,
-			BTreeEntry parentEntry) throws DbException, IOException, TransactionAbortedException {
-		// some code goes here
-        // Move some of the entries from the right sibling to the page so
-		// that the entries are evenly distributed. Be sure to update
-		// the corresponding parent entry. Be sure to update the parent
-		// pointers of all children in the entries that were moved.
-	}
-	
-	/**
-	 * Merge two leaf pages by moving all tuples from the right page to the left page. 
-	 * Delete the corresponding key and right child pointer from the parent, and recursively 
-	 * handle the case when the parent gets below minimum occupancy.
-	 * Update sibling pointers as needed, and make the right page available for reuse.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param leftPage - the left leaf page
-	 * @param rightPage - the right leaf page
-	 * @param parent - the parent of the two pages
-	 * @param parentEntry - the entry in the parent corresponding to the leftPage and rightPage
-	 * @see #deleteParentEntry(TransactionId, HashMap, BTreePage, BTreeInternalPage, BTreeEntry)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	protected void mergeLeafPages(TransactionId tid, HashMap<PageId, Page> dirtypages, 
-			BTreeLeafPage leftPage, BTreeLeafPage rightPage, BTreeInternalPage parent, BTreeEntry parentEntry) 
-					throws DbException, IOException, TransactionAbortedException {
-
-		// some code goes here
-        //
-		// Move all the tuples from the right page to the left page, update
-		// the sibling pointers, and make the right page available for reuse.
-		// Delete the entry in the parent corresponding to the two pages that are merging -
-		// deleteParentEntry() will be useful here
-	}
-
-	/**
-	 * Merge two internal pages by moving all entries from the right page to the left page 
-	 * and "pulling down" the corresponding key from the parent entry. 
-	 * Delete the corresponding key and right child pointer from the parent, and recursively 
-	 * handle the case when the parent gets below minimum occupancy.
-	 * Update parent pointers as needed, and make the right page available for reuse.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param leftPage - the left internal page
-	 * @param rightPage - the right internal page
-	 * @param parent - the parent of the two pages
-	 * @param parentEntry - the entry in the parent corresponding to the leftPage and rightPage
-	 * @see #deleteParentEntry(TransactionId, HashMap, BTreePage, BTreeInternalPage, BTreeEntry)
-	 * @see #updateParentPointers(TransactionId, HashMap, BTreeInternalPage)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	protected void mergeInternalPages(TransactionId tid, HashMap<PageId, Page> dirtypages, 
-			BTreeInternalPage leftPage, BTreeInternalPage rightPage, BTreeInternalPage parent, BTreeEntry parentEntry) 
-					throws DbException, IOException, TransactionAbortedException {
-		
-		// some code goes here
-        //
-        // Move all the entries from the right page to the left page, update
-		// the parent pointers of the children in the entries that were moved, 
-		// and make the right page available for reuse
-		// Delete the entry in the parent corresponding to the two pages that are merging -
-		// deleteParentEntry() will be useful here
-	}
-	
-	/**
-	 * Method to encapsulate the process of deleting an entry (specifically the key and right child) 
-	 * from a parent node.  If the parent becomes empty (no keys remaining), that indicates that it 
-	 * was the root node and should be replaced by its one remaining child.  Otherwise, if it gets 
-	 * below minimum occupancy for non-root internal nodes, it should steal from one of its siblings or 
-	 * merge with a sibling.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param leftPage - the child remaining after the key and right child are deleted
-	 * @param parent - the parent containing the entry to be deleted
-	 * @param parentEntry - the entry to be deleted
-	 * @see #handleMinOccupancyPage(TransactionId, HashMap, BTreePage)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	private void deleteParentEntry(TransactionId tid, HashMap<PageId, Page> dirtypages, 
-			BTreePage leftPage, BTreeInternalPage parent, BTreeEntry parentEntry) 
-					throws DbException, IOException, TransactionAbortedException {		
-		
-		// delete the entry in the parent.  If
-		// the parent is below minimum occupancy, get some tuples from its siblings
-		// or merge with one of the siblings
-		parent.deleteKeyAndRightChild(parentEntry);
-		int maxEmptySlots = parent.getMaxEntries() - parent.getMaxEntries()/2; // ceiling
-		if(parent.getNumEmptySlots() == parent.getMaxEntries()) {
-			// This was the last entry in the parent.
-			// In this case, the parent (root node) should be deleted, and the merged 
-			// page will become the new root
-			BTreePageId rootPtrId = parent.getParentId();
-			if(rootPtrId.pgcateg() != BTreePageId.ROOT_PTR) {
-				throw new DbException("attempting to delete a non-root node");
-			}
-			BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) getPage(tid, dirtypages, rootPtrId, Permissions.READ_WRITE);
-			leftPage.setParentId(rootPtrId);
-			rootPtr.setRootId(leftPage.getId());
-
-			// release the parent page for reuse
-			setEmptyPage(tid, dirtypages, parent.getId().pageNumber());
-		}
-		else if(parent.getNumEmptySlots() > maxEmptySlots) { 
-			handleMinOccupancyPage(tid, dirtypages, parent);
-		}
-	}
-
-	/**
-	 * Delete a tuple from this BTreeFile. 
-	 * May cause pages to merge or redistribute entries/tuples if the pages 
-	 * become less than half full.
-	 * 
-	 * @param tid - the transaction id
-	 * @param t - the tuple to delete
-	 * @return a list of all pages that were dirtied by this operation. Could include
-	 * many pages since parent pointers will need to be updated when an internal node merges.
-	 * @see #handleMinOccupancyPage(TransactionId, HashMap, BTreePage)
-	 */
-	public ArrayList<Page> deleteTuple(TransactionId tid, Tuple t) 
-			throws DbException, IOException, TransactionAbortedException {
-		HashMap<PageId, Page> dirtypages = new HashMap<PageId, Page>();
-
-		BTreePageId pageId = new BTreePageId(tableid, t.getRecordId().getPageId().pageNumber(), 
-				BTreePageId.LEAF);
-		BTreeLeafPage page = (BTreeLeafPage) getPage(tid, dirtypages, pageId, Permissions.READ_WRITE);
-		page.deleteTuple(t);
-
-		// if the page is below minimum occupancy, get some tuples from its siblings
-		// or merge with one of the siblings
-		int maxEmptySlots = page.getMaxTuples() - page.getMaxTuples()/2; // ceiling
-		if(page.getNumEmptySlots() > maxEmptySlots) { 
-			handleMinOccupancyPage(tid, dirtypages, page);
-		}
-
-		ArrayList<Page> dirtyPagesArr = new ArrayList<Page>();
-		dirtyPagesArr.addAll(dirtypages.values());
-		return dirtyPagesArr;
-	}
-
-	/**
-	 * Get a read lock on the root pointer page. Create the root pointer page and root page
-	 * if necessary.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages 
-	 * @return the root pointer page
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	BTreeRootPtrPage getRootPtrPage(TransactionId tid, HashMap<PageId, Page> dirtypages) throws DbException, IOException, TransactionAbortedException {
-		synchronized(this) {
-			if(f.length() == 0) {
-				// create the root pointer page and the root page
-				BufferedOutputStream bw = new BufferedOutputStream(
-						new FileOutputStream(f, true));
-				byte[] emptyRootPtrData = BTreeRootPtrPage.createEmptyPageData();
-				byte[] emptyLeafData = BTreeLeafPage.createEmptyPageData();
-				bw.write(emptyRootPtrData);
-				bw.write(emptyLeafData);
-				bw.close();
-			}
-		}
-
-		// get a read lock on the root pointer page
-		return (BTreeRootPtrPage) getPage(tid, dirtypages, BTreeRootPtrPage.getId(tableid), Permissions.READ_ONLY);
-	}
-
-	/**
-	 * Get the page number of the first empty page in this BTreeFile.
-	 * Creates a new page if none of the existing pages are empty.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @return the page number of the first empty page
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	protected int getEmptyPageNo(TransactionId tid, HashMap<PageId, Page> dirtypages) 
-			throws DbException, IOException, TransactionAbortedException {
-		// get a read lock on the root pointer page and use it to locate the first header page
-		BTreeRootPtrPage rootPtr = getRootPtrPage(tid, dirtypages);
-		BTreePageId headerId = rootPtr.getHeaderId();
-		int emptyPageNo = 0;
-
-		if(headerId != null) {
-			BTreeHeaderPage headerPage = (BTreeHeaderPage) getPage(tid, dirtypages, headerId, Permissions.READ_ONLY);
-			int headerPageCount = 0;
-			// try to find a header page with an empty slot
-			while(headerPage != null && headerPage.getEmptySlot() == -1) {
-				headerId = headerPage.getNextPageId();
-				if(headerId != null) {
-					headerPage = (BTreeHeaderPage) getPage(tid, dirtypages, headerId, Permissions.READ_ONLY);
-					headerPageCount++;
-				}
-				else {
-					headerPage = null;
-				}
-			}
-
-			// if headerPage is not null, it must have an empty slot
-			if(headerPage != null) {
-				headerPage = (BTreeHeaderPage) getPage(tid, dirtypages, headerId, Permissions.READ_WRITE);
-				int emptySlot = headerPage.getEmptySlot();
-				headerPage.markSlotUsed(emptySlot, true);
-				emptyPageNo = headerPageCount * BTreeHeaderPage.getNumSlots() + emptySlot;
-			}
-		}
-
-		// at this point if headerId is null, either there are no header pages 
-		// or there are no free slots
-		if(headerId == null) {		
-			synchronized(this) {
-				// create the new page
-				BufferedOutputStream bw = new BufferedOutputStream(
-						new FileOutputStream(f, true));
-				byte[] emptyData = BTreeInternalPage.createEmptyPageData();
-				bw.write(emptyData);
-				bw.close();
-				emptyPageNo = numPages();
-			}
-		}
-
-		return emptyPageNo; 
-	}
-	
-	/**
-	 * Method to encapsulate the process of creating a new page.  It reuses old pages if possible,
-	 * and creates a new page if none are available.  It wipes the page on disk and in the cache and 
-	 * returns a clean copy locked with read-write permission
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param pgcateg - the BTreePageId category of the new page.  Either LEAF, INTERNAL, or HEADER
-	 * @return the new empty page
-	 * @see #getEmptyPageNo(TransactionId, HashMap)
-	 * @see #setEmptyPage(TransactionId, HashMap, int)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	private Page getEmptyPage(TransactionId tid, HashMap<PageId, Page> dirtypages, int pgcateg)
-			throws DbException, IOException, TransactionAbortedException {
-		// create the new page
-		int emptyPageNo = getEmptyPageNo(tid, dirtypages);
-		BTreePageId newPageId = new BTreePageId(tableid, emptyPageNo, pgcateg);
-		
-		// write empty page to disk
-		RandomAccessFile rf = new RandomAccessFile(f, "rw");
-		rf.seek(BTreeRootPtrPage.getPageSize() + (emptyPageNo-1) * BufferPool.getPageSize());
-		rf.write(BTreePage.createEmptyPageData());
-		rf.close();
-		
-		// make sure the page is not in the buffer pool	or in the local cache		
-		Database.getBufferPool().discardPage(newPageId);
-		dirtypages.remove(newPageId);
-		
-		return getPage(tid, dirtypages, newPageId, Permissions.READ_WRITE);
-	}
-
-	/**
-	 * Mark a page in this BTreeFile as empty. Find the corresponding header page 
-	 * (create it if needed), and mark the corresponding slot in the header page as empty.
-	 * 
-	 * @param tid - the transaction id
-	 * @param dirtypages - the list of dirty pages which should be updated with all new dirty pages
-	 * @param emptyPageNo - the page number of the empty page
-	 * @see #getEmptyPage(TransactionId, HashMap, int)
-	 * 
-	 * @throws DbException
-	 * @throws IOException
-	 * @throws TransactionAbortedException
-	 */
-	protected void setEmptyPage(TransactionId tid, HashMap<PageId, Page> dirtypages, int emptyPageNo) 
-			throws DbException, IOException, TransactionAbortedException {
-
-		// if this is the last page in the file (and not the only page), just 
-		// truncate the file
-		// @TODO: Commented out because we should probably do this somewhere else in case the transaction aborts....
-//		synchronized(this) {
-//			if(emptyPageNo == numPages()) {
-//				if(emptyPageNo <= 1) {
-//					// if this is the only page in the file, just return.
-//					// It just means we have an empty root page
-//					return;
-//				}
-//				long newSize = f.length() - BufferPool.getPageSize();
-//				FileOutputStream fos = new FileOutputStream(f, true);
-//				FileChannel fc = fos.getChannel();
-//				fc.truncate(newSize);
-//				fc.close();
-//				fos.close();
-//				return;
-//			}
-//		}
-
-		// otherwise, get a read lock on the root pointer page and use it to locate 
-		// the first header page
-		BTreeRootPtrPage rootPtr = getRootPtrPage(tid, dirtypages);
-		BTreePageId headerId = rootPtr.getHeaderId();
-		BTreePageId prevId = null;
-		int headerPageCount = 0;
-
-		// if there are no header pages, create the first header page and update
-		// the header pointer in the BTreeRootPtrPage
-		if(headerId == null) {
-			rootPtr = (BTreeRootPtrPage) getPage(tid, dirtypages, BTreeRootPtrPage.getId(tableid), Permissions.READ_WRITE);
-			
-			BTreeHeaderPage headerPage = (BTreeHeaderPage) getEmptyPage(tid, dirtypages, BTreePageId.HEADER);
-			headerId = headerPage.getId();
-			headerPage.init();
-			rootPtr.setHeaderId(headerId);
-		}
-
-		// iterate through all the existing header pages to find the one containing the slot
-		// corresponding to emptyPageNo
-		while(headerId != null && (headerPageCount + 1) * BTreeHeaderPage.getNumSlots() < emptyPageNo) {
-			BTreeHeaderPage headerPage = (BTreeHeaderPage) getPage(tid, dirtypages, headerId, Permissions.READ_ONLY);
-			prevId = headerId;
-			headerId = headerPage.getNextPageId();
-			headerPageCount++;
-		}
-
-		// at this point headerId should either be null or set with 
-		// the headerPage containing the slot corresponding to emptyPageNo.
-		// Add header pages until we have one with a slot corresponding to emptyPageNo
-		while((headerPageCount + 1) * BTreeHeaderPage.getNumSlots() < emptyPageNo) {
-			BTreeHeaderPage prevPage = (BTreeHeaderPage) getPage(tid, dirtypages, prevId, Permissions.READ_WRITE);
-			
-			BTreeHeaderPage headerPage = (BTreeHeaderPage) getEmptyPage(tid, dirtypages, BTreePageId.HEADER);
-			headerId = headerPage.getId();
-			headerPage.init();
-			headerPage.setPrevPageId(prevId);
-			prevPage.setNextPageId(headerId);
-			
-			headerPageCount++;
-			prevId = headerId;
-		}
-
-		// now headerId should be set with the headerPage containing the slot corresponding to 
-		// emptyPageNo
-		BTreeHeaderPage headerPage = (BTreeHeaderPage) getPage(tid, dirtypages, headerId, Permissions.READ_WRITE);
-		int emptySlot = emptyPageNo - headerPageCount * BTreeHeaderPage.getNumSlots();
-		headerPage.markSlotUsed(emptySlot, false);
-	}
-
-	/**
-	 * get the specified tuples from the file based on its IndexPredicate value on
-	 * behalf of the specified transaction. This method will acquire a read lock on
-	 * the affected pages of the file, and may block until the lock can be
-	 * acquired.
-	 * 
-	 * @param tid - the transaction id
-	 * @param ipred - the index predicate value to filter on
-	 * @return an iterator for the filtered tuples
-	 */
-	public DbFileIterator indexIterator(TransactionId tid, IndexPredicate ipred) {
-		return new BTreeSearchIterator(this, tid, ipred);
-	}
-
-	/**
-	 * Get an iterator for all tuples in this B+ tree file in sorted order. This method 
-	 * will acquire a read lock on the affected pages of the file, and may block until 
-	 * the lock can be acquired.
-	 * 
-	 * @param tid - the transaction id
-	 * @return an iterator for all the tuples in this file
-	 */
-	public DbFileIterator iterator(TransactionId tid) {
-		return new BTreeFileIterator(this, tid);
-	}
-
-}
-
-/**
- * Helper class that implements the Java Iterator for tuples on a BTreeFile
- */
-class BTreeFileIterator extends AbstractDbFileIterator {
-
-	Iterator<Tuple> it = null;
-	BTreeLeafPage curp = null;
-
-	TransactionId tid;
-	BTreeFile f;
-
-	/**
-	 * Constructor for this iterator
-	 * @param f - the BTreeFile containing the tuples
-	 * @param tid - the transaction id
-	 */
-	public BTreeFileIterator(BTreeFile f, TransactionId tid) {
-		this.f = f;
-		this.tid = tid;
-	}
-
-	/**
-	 * Open this iterator by getting an iterator on the first leaf page
-	 */
-	public void open() throws DbException, TransactionAbortedException {
-		BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) Database.getBufferPool().getPage(
-				tid, BTreeRootPtrPage.getId(f.getId()), Permissions.READ_ONLY);
-		BTreePageId root = rootPtr.getRootId();
-		curp = f.findLeafPage(tid, root, Permissions.READ_ONLY, null);
-		it = curp.iterator();
-	}
-
-	/**
-	 * Read the next tuple either from the current page if it has more tuples or
-	 * from the next page by following the right sibling pointer.
-	 * 
-	 * @return the next tuple, or null if none exists
-	 */
-	@Override
-	protected Tuple readNext() throws TransactionAbortedException, DbException {
-		if (it != null && !it.hasNext())
-			it = null;
-
-		while (it == null && curp != null) {
-			BTreePageId nextp = curp.getRightSiblingId();
-			if(nextp == null) {
-				curp = null;
-			}
-			else {
-				curp = (BTreeLeafPage) Database.getBufferPool().getPage(tid,
-						nextp, Permissions.READ_ONLY);
-				it = curp.iterator();
-				if (!it.hasNext())
-					it = null;
-			}
-		}
-
-		if (it == null)
-			return null;
-		return it.next();
-	}
-
-	/**
-	 * rewind this iterator back to the beginning of the tuples
-	 */
-	public void rewind() throws DbException, TransactionAbortedException {
-		close();
-		open();
-	}
-
-	/**
-	 * close the iterator
-	 */
-	public void close() {
-		super.close();
-		it = null;
-		curp = null;
-	}
-}
-
-/**
- * Helper class that implements the DbFileIterator for search tuples on a
- * B+ Tree File
- */
-class BTreeSearchIterator extends AbstractDbFileIterator {
-
-	Iterator<Tuple> it = null;
-	BTreeLeafPage curp = null;
-
-	TransactionId tid;
-	BTreeFile f;
-	IndexPredicate ipred;
-
-	/**
-	 * Constructor for this iterator
-	 * @param f - the BTreeFile containing the tuples
-	 * @param tid - the transaction id
-	 * @param ipred - the predicate to filter on
-	 */
-	public BTreeSearchIterator(BTreeFile f, TransactionId tid, IndexPredicate ipred) {
-		this.f = f;
-		this.tid = tid;
-		this.ipred = ipred;
-	}
-
-	/**
-	 * Open this iterator by getting an iterator on the first leaf page applicable
-	 * for the given predicate operation
-	 */
-	public void open() throws DbException, TransactionAbortedException {
-		BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) Database.getBufferPool().getPage(
-				tid, BTreeRootPtrPage.getId(f.getId()), Permissions.READ_ONLY);
-		BTreePageId root = rootPtr.getRootId();
-		if(ipred.getOp() == Op.EQUALS || ipred.getOp() == Op.GREATER_THAN 
-				|| ipred.getOp() == Op.GREATER_THAN_OR_EQ) {
-			curp = f.findLeafPage(tid, root, Permissions.READ_ONLY, ipred.getField());
-		}
-		else {
-			curp = f.findLeafPage(tid, root, Permissions.READ_ONLY, null);
-		}
-		it = curp.iterator();
-	}
-
-	/**
-	 * Read the next tuple either from the current page if it has more tuples matching
-	 * the predicate or from the next page by following the right sibling pointer.
-	 * 
-	 * @return the next tuple matching the predicate, or null if none exists
-	 */
-	@Override
-	protected Tuple readNext() throws TransactionAbortedException, DbException,
-	NoSuchElementException {
-		while (it != null) {
-
-			while (it.hasNext()) {
-				Tuple t = it.next();
-				if (t.getField(f.keyField()).compare(ipred.getOp(), ipred.getField())) {
-					return t;
-				}
-				else if(ipred.getOp() == Op.LESS_THAN || ipred.getOp() == Op.LESS_THAN_OR_EQ) {
-					// if the predicate was not satisfied and the operation is less than, we have
-					// hit the end
-					return null;
-				}
-				else if(ipred.getOp() == Op.EQUALS && 
-						t.getField(f.keyField()).compare(Op.GREATER_THAN, ipred.getField())) {
-					// if the tuple is now greater than the field passed in and the operation
-					// is equals, we have reached the end
-					return null;
-				}
-			}
-
-			BTreePageId nextp = curp.getRightSiblingId();
-			// if there are no more pages to the right, end the iteration
-			if(nextp == null) {
-				return null;
-			}
-			else {
-				curp = (BTreeLeafPage) Database.getBufferPool().getPage(tid,
-						nextp, Permissions.READ_ONLY);
-				it = curp.iterator();
-			}
-		}
-
-		return null;
-	}
-
-	/**
-	 * rewind this iterator back to the beginning of the tuples
-	 */
-	public void rewind() throws DbException, TransactionAbortedException {
-		close();
-		open();
-	}
-
-	/**
-	 * close the iterator
-	 */
-	public void close() {
-		super.close();
-		it = null;
-	}
-}
diff -ruN lab3/src/java/simpledb/BTreeFileEncoder.java lab4/src/java/simpledb/BTreeFileEncoder.java
--- lab3/src/java/simpledb/BTreeFileEncoder.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeFileEncoder.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,723 +0,0 @@
-package simpledb;
-
-import java.io.*;
-import java.util.*;
-
-import simpledb.Predicate.Op;
-
-/**
- * BTreeFileEncoder reads a comma delimited text file and converts it to
- * pages of binary data in the appropriate format for simpledb B+ tree
- * pages.
- */
-
-public class BTreeFileEncoder {
-
-	/**
-	 * Encode the file using the BTreeFile's Insert method.
-	 * 
-	 * @param tuples - list of tuples to add to the file
-	 * @param hFile - the file to temporarily store the data as a heap file on disk
-	 * @param bFile - the file on disk to back the resulting BTreeFile
-	 * @param keyField - the index of the key field for this B+ tree
-	 * @param numFields - the number of fields in each tuple
-	 * @return the BTreeFile
-	 */
-	public static BTreeFile convert(ArrayList<ArrayList<Integer>> tuples, File hFile, 
-			File bFile, int keyField, int numFields) throws IOException {
-		File tempInput = File.createTempFile("tempTable", ".txt");
-		tempInput.deleteOnExit();
-		BufferedWriter bw = new BufferedWriter(new FileWriter(tempInput));
-		for (ArrayList<Integer> tuple : tuples) {
-			int writtenFields = 0;
-			for (Integer field : tuple) {
-				writtenFields++;
-				if (writtenFields > numFields) {
-					bw.close();
-					throw new RuntimeException("Tuple has more than " + numFields + " fields: (" +
-							Utility.listToString(tuple) + ")");
-				}
-				bw.write(String.valueOf(field));
-				if (writtenFields < numFields) {
-					bw.write(',');
-				}
-			}
-			bw.write('\n');
-		}
-		bw.close();
-		return convert(tempInput, hFile, bFile, keyField, numFields);
-	}
-
-	/**
-	 * Encode the file using the BTreeFile's Insert method.
-	 * 
-	 * @param inFile - the raw text file containing the tuples
-	 * @param hFile - the file to temporarily store the data as a heap file on disk
-	 * @param bFile - the file on disk to back the resulting BTreeFile
-	 * @param keyField - the index of the key field for this B+ tree
-	 * @param numFields - the number of fields in each tuple
-	 * @return the BTreeFile
-	 */
-	public static BTreeFile convert(File inFile, File hFile, File bFile,
-			int keyField, int numFields)
-					throws IOException {
-		// convert the inFile to HeapFile first.
-		HeapFileEncoder.convert(inFile, hFile, BufferPool.getPageSize(), numFields);
-		HeapFile heapf = Utility.openHeapFile(numFields, hFile);
-
-		// add the heap file to B+ tree file
-		BTreeFile bf = BTreeUtility.openBTreeFile(numFields, bFile, keyField);
-
-		try {
-			TransactionId tid = new TransactionId();
-			DbFileIterator it = Database.getCatalog().getDatabaseFile(heapf.getId()).iterator(tid);
-			it.open();
-			int count = 0;
-			Transaction t = new Transaction();
-			while (it.hasNext()) {
-				Tuple tup = it.next();
-				Database.getBufferPool().insertTuple(t.getId(), bf.getId(), tup);
-				count++;
-				if(count >= 40) {
-					Database.getBufferPool().flushAllPages();
-					count = 0;
-				}
-				t.commit();
-				t = new Transaction();
-			}
-			it.close();
-		} catch(TransactionAbortedException te){
-			te.printStackTrace();
-			return bf;
-		} catch(DbException e) {
-			e.printStackTrace();
-			return bf;
-		} catch(IOException e) {
-			e.printStackTrace();
-			return bf;
-		}
-
-		try {
-			Database.getBufferPool().flushAllPages();
-		} catch(Exception e) {
-			e.printStackTrace();
-		}
-
-		return bf;
-
-	}
-
-	/** 
-	 * comparator to sort Tuples by key field
-	 */
-	public static class TupleComparator implements Comparator<Tuple> {
-		private int keyField;
-
-		/** 
-		 * Construct a TupleComparator
-		 * 
-		 * @param keyField - the index of the field the tuples are keyed on
-		 */
-		public TupleComparator(int keyField) {
-			this.keyField = keyField;
-		}
-
-		/**
-		 * Compare two tuples based on their key field
-		 * 
-		 * @return -1 if t1 < t2, 1 if t1 > t2, 0 if t1 == t2
-		 */
-		public int compare(Tuple t1, Tuple t2) {
-			int cmp = 0;
-			if(t1.getField(keyField).compare(Op.LESS_THAN, t2.getField(keyField))) {
-				cmp = -1;
-			}
-			else if(t1.getField(keyField).compare(Op.GREATER_THAN, t2.getField(keyField))) {
-				cmp = 1;
-			}
-			return cmp;
-		}
-	}
-
-	/**
-	 * Faster method to encode the B+ tree file
-	 * 
-	 * @param tuples - list of tuples to add to the file
-	 * @param hFile - the file to temporarily store the data as a heap file on disk
-	 * @param bFile - the file on disk to back the resulting BTreeFile
-	 * @param npagebytes - number of bytes per page
-	 * @param numFields - number of fields per tuple
-	 * @param typeAr - array containing the types of the tuples
-	 * @param fieldSeparator - character separating fields in the raw data file
-	 * @param keyField - the field of the tuples the B+ tree will be keyed on
-	 * @return the BTreeFile
-	 */
-	public static BTreeFile convert(ArrayList<ArrayList<Integer>> tuples, File hFile, 
-			File bFile, int npagebytes,
-			int numFields, Type[] typeAr, char fieldSeparator, int keyField) 
-					throws IOException, DbException, TransactionAbortedException {
-		File tempInput = File.createTempFile("tempTable", ".txt");
-		tempInput.deleteOnExit();
-		BufferedWriter bw = new BufferedWriter(new FileWriter(tempInput));
-		for (ArrayList<Integer> tuple : tuples) {
-			int writtenFields = 0;
-			for (Integer field : tuple) {
-				writtenFields++;
-				if (writtenFields > numFields) {
-					bw.close();
-					throw new RuntimeException("Tuple has more than " + numFields + " fields: (" +
-							Utility.listToString(tuple) + ")");
-				}
-				bw.write(String.valueOf(field));
-				if (writtenFields < numFields) {
-					bw.write(',');
-				}
-			}
-			bw.write('\n');
-		}
-		bw.close();
-		return convert(tempInput, hFile, bFile, npagebytes,
-				numFields, typeAr, fieldSeparator, keyField);
-	}
-
-	/** 
-	 * Faster method to encode the B+ tree file
-	 * 
-	 * @param inFile - the file containing the raw data
-	 * @param hFile - the data file for the HeapFile to be used as an intermediate conversion step
-	 * @param bFile - the data file for the BTreeFile
-	 * @param npagebytes - number of bytes per page
-	 * @param numFields - number of fields per tuple
-	 * @param typeAr - array containing the types of the tuples
-	 * @param fieldSeparator - character separating fields in the raw data file
-	 * @param keyField - the field of the tuples the B+ tree will be keyed on
-	 * @return the B+ tree file
-	 * @throws IOException
-	 * @throws DbException
-	 * @throws TransactionAbortedException
-	 */
-	public static BTreeFile convert(File inFile, File hFile, File bFile, int npagebytes,
-			int numFields, Type[] typeAr, char fieldSeparator, int keyField) 
-					throws IOException, DbException, TransactionAbortedException {
-		// convert the inFile to HeapFile first.
-		HeapFileEncoder.convert(inFile, hFile, BufferPool.getPageSize(), numFields);
-		HeapFile heapf = Utility.openHeapFile(numFields, hFile);
-
-		// read all the tuples from the heap file and sort them on the keyField
-		ArrayList<Tuple> tuples = new ArrayList<Tuple>();
-		TransactionId tid = new TransactionId();
-		DbFileIterator it = Database.getCatalog().getDatabaseFile(heapf.getId()).iterator(tid);
-		it.open();
-		while (it.hasNext()) {
-			Tuple tup = it.next();
-			tuples.add(tup);
-		}
-		it.close();
-		Collections.sort(tuples, new TupleComparator(keyField));
-
-		// add the tuples to B+ tree file
-		BTreeFile bf = BTreeUtility.openBTreeFile(numFields, bFile, keyField);
-		Type keyType = typeAr[keyField];
-		int tableid = bf.getId();
-
-		int nrecbytes = 0;
-		for (int i = 0; i < numFields ; i++) {
-			nrecbytes += typeAr[i].getLen();
-		}
-		// pointerbytes: left sibling pointer, right sibling pointer, parent pointer
-		int leafpointerbytes = 3 * BTreeLeafPage.INDEX_SIZE; 
-		int nrecords = (npagebytes * 8 - leafpointerbytes * 8) /  (nrecbytes * 8 + 1);  //floor comes for free
-
-		int nentrybytes = keyType.getLen() + BTreeInternalPage.INDEX_SIZE;
-		// pointerbytes: one extra child pointer, parent pointer, child page category
-		int internalpointerbytes = 2 * BTreeLeafPage.INDEX_SIZE + 1; 
-		int nentries = (npagebytes * 8 - internalpointerbytes * 8 - 1) /  (nentrybytes * 8 + 1);  //floor comes for free
-
-		ArrayList<ArrayList<BTreeEntry>> entries = new ArrayList<ArrayList<BTreeEntry>>();
-
-		// first add some bytes for the root pointer page
-		bf.writePage(new BTreeRootPtrPage(BTreeRootPtrPage.getId(tableid), 
-				BTreeRootPtrPage.createEmptyPageData()));
-
-		// next iterate through all the tuples and write out leaf pages
-		// and internal pages as they fill up.
-		// We wait until we have two full pages of tuples before writing out the first page
-		// so that we will not end up with any pages containing less than nrecords/2 tuples
-		// (unless it's the only page)
-		ArrayList<Tuple> page1 = new ArrayList<Tuple>();
-		ArrayList<Tuple> page2 = new ArrayList<Tuple>();
-		BTreePageId leftSiblingId = null;
-		for(Tuple tup : tuples) {
-			if(page1.size() < nrecords) {
-				page1.add(tup);
-			}
-			else if(page2.size() < nrecords) {
-				page2.add(tup);
-			}
-			else {
-				// write out a page of records
-				byte[] leafPageBytes = convertToLeafPage(page1, npagebytes, numFields, typeAr, keyField);
-				BTreePageId leafPid = new BTreePageId(tableid, bf.numPages() + 1, BTreePageId.LEAF);
-				BTreeLeafPage leafPage = new BTreeLeafPage(leafPid, leafPageBytes, keyField);
-				leafPage.setLeftSiblingId(leftSiblingId);
-				bf.writePage(leafPage);
-				leftSiblingId = leafPid;
-
-				// update the parent by "copying up" the next key
-				BTreeEntry copyUpEntry = new BTreeEntry(page2.get(0).getField(keyField), leafPid, null);
-				updateEntries(entries, bf, copyUpEntry, 0, nentries, npagebytes, 
-						keyType, tableid, keyField);
-
-				page1 = page2;
-				page2 = new ArrayList<Tuple>();
-				page2.add(tup);
-			}
-		}
-
-		// now we need to deal with the end cases. There are two options:
-		// 1. We have less than or equal to a full page of records. Because of the way the code
-		//    was written above, we know this must be the only page
-		// 2. We have somewhere between one and two pages of records remaining.
-		// For case (1), we write out the page 
-		// For case (2), we divide the remaining records equally between the last two pages,
-		// write them out, and update the parent's child pointers.
-		BTreePageId lastPid = null;
-		if(page2.size() == 0) {
-			// write out a page of records - this is the root page
-			byte[] lastPageBytes = convertToLeafPage(page1, npagebytes, numFields, typeAr, keyField);
-			lastPid = new BTreePageId(tableid, bf.numPages() + 1, BTreePageId.LEAF);
-			BTreeLeafPage lastPage = new BTreeLeafPage(lastPid, lastPageBytes, keyField);
-			lastPage.setLeftSiblingId(leftSiblingId);
-			bf.writePage(lastPage);
-		}
-		else {
-			// split the remaining tuples in half
-			int remainingTuples = page1.size() + page2.size();
-			ArrayList<Tuple> secondToLastPg = new ArrayList<Tuple>();
-			ArrayList<Tuple> lastPg = new ArrayList<Tuple>();
-			secondToLastPg.addAll(page1.subList(0, remainingTuples/2));
-			lastPg.addAll(page1.subList(remainingTuples/2, page1.size()));
-			lastPg.addAll(page2);
-
-			// write out the last two pages of records
-			byte[] secondToLastPageBytes = convertToLeafPage(secondToLastPg, npagebytes, numFields, typeAr, keyField);
-			BTreePageId secondToLastPid = new BTreePageId(tableid, bf.numPages() + 1, BTreePageId.LEAF);
-			BTreeLeafPage secondToLastPage = new BTreeLeafPage(secondToLastPid, secondToLastPageBytes, keyField);
-			secondToLastPage.setLeftSiblingId(leftSiblingId);
-			bf.writePage(secondToLastPage);
-
-			byte[] lastPageBytes = convertToLeafPage(lastPg, npagebytes, numFields, typeAr, keyField);
-			lastPid = new BTreePageId(tableid, bf.numPages() + 1, BTreePageId.LEAF);
-			BTreeLeafPage lastPage = new BTreeLeafPage(lastPid, lastPageBytes, keyField);
-			lastPage.setLeftSiblingId(secondToLastPid);
-			bf.writePage(lastPage);
-
-			// update the parent by "copying up" the next key
-			BTreeEntry copyUpEntry = new BTreeEntry(lastPg.get(0).getField(keyField), secondToLastPid, lastPid);
-			updateEntries(entries, bf, copyUpEntry, 0, nentries, npagebytes, 
-					keyType, tableid, keyField);
-		}
-
-		// Write out the remaining internal pages
-		cleanUpEntries(entries, bf, nentries, npagebytes, keyType, tableid, keyField);
-
-		// update the root pointer to point to the last page of the file
-		int root = bf.numPages();
-		int rootCategory = (root > 1 ? BTreePageId.INTERNAL : BTreePageId.LEAF);
-		byte[] rootPtrBytes = convertToRootPtrPage(root, rootCategory, 0);
-		bf.writePage(new BTreeRootPtrPage(BTreeRootPtrPage.getId(tableid), rootPtrBytes));
-
-		// set all the parent and sibling pointers
-		setParents(bf, new BTreePageId(tableid, root, rootCategory), BTreeRootPtrPage.getId(tableid));
-		setRightSiblingPtrs(bf, lastPid, null);
-
-		Database.resetBufferPool(BufferPool.DEFAULT_PAGES);
-		return bf;
-	}
-
-	/**
-	 * Set all the right sibling pointers by following the left sibling pointers
-	 * 
-	 * @param bf - the BTreeFile
-	 * @param pid - the id of the page to update with the right sibling pointer
-	 * @param rightSiblingId - the id of the page's right sibling
-	 * @throws IOException
-	 * @throws DbException
-	 */
-	private static void setRightSiblingPtrs(BTreeFile bf, BTreePageId pid, BTreePageId rightSiblingId) 
-			throws IOException, DbException {
-		BTreeLeafPage page = (BTreeLeafPage) bf.readPage(pid);
-		page.setRightSiblingId(rightSiblingId);
-		BTreePageId leftSiblingId = page.getLeftSiblingId();
-		bf.writePage(page);
-		if(leftSiblingId != null) {
-			setRightSiblingPtrs(bf, leftSiblingId, page.getId());
-		}
-	}
-
-	/**
-	 * Recursive function to set all the parent pointers
-	 * 
-	 * @param bf - the BTreeFile
-	 * @param pid - id of the page to update with the parent pointer
-	 * @param parent - the id of the page's parent
-	 * @throws IOException
-	 * @throws DbException
-	 */
-	private static void setParents(BTreeFile bf, BTreePageId pid, BTreePageId parent) 
-			throws IOException, DbException {
-		if(pid.pgcateg() == BTreePageId.INTERNAL) {
-			BTreeInternalPage page = (BTreeInternalPage) bf.readPage(pid);
-			page.setParentId(parent);
-
-			Iterator<BTreeEntry> it = page.iterator();
-			BTreeEntry e = null;
-			while(it.hasNext()) {
-				e = it.next();
-				setParents(bf, e.getLeftChild(), pid);
-			}
-			if(e != null) {
-				setParents(bf, e.getRightChild(), pid);
-			}
-			bf.writePage(page);
-		}
-		else { // pid.pgcateg() == BTreePageId.LEAF
-			BTreeLeafPage page = (BTreeLeafPage) bf.readPage(pid);
-			page.setParentId(parent);
-			bf.writePage(page);
-		}
-	}
-
-	/**
-	 * Write out any remaining entries and update the parent pointers.
-	 * 
-	 * @param entries - the list of remaining entries
-	 * @param bf - the BTreeFile
-	 * @param nentries - number of entries per page
-	 * @param npagebytes - number of bytes per page
-	 * @param keyType - the type of the key field
-	 * @param tableid - the table id of this BTreeFile
-	 * @param keyField - the index of the key field
-	 * @throws IOException
-	 */
-	private static void cleanUpEntries(ArrayList<ArrayList<BTreeEntry>> entries,
-			BTreeFile bf, int nentries, int npagebytes, Type keyType, int tableid, 
-			int keyField) throws IOException {
-		// As with the leaf pages, there are two options:
-		// 1. We have less than or equal to a full page of entries. Because of the way the code
-		//    was written, we know this must be the root page
-		// 2. We have somewhere between one and two pages of entries remaining.
-		// For case (1), we write out the page 
-		// For case (2), we divide the remaining entries equally between the last two pages,
-		// write them out, and update the parent's child pointers.
-		for(int i = 0; i < entries.size(); i++) {
-			int childPageCategory = (i == 0 ? BTreePageId.LEAF : BTreePageId.INTERNAL);
-			int size = entries.get(i).size();
-			if(size <= nentries) {
-				// write out a page of entries
-				byte[] internalPageBytes = convertToInternalPage(entries.get(i), npagebytes, keyType, childPageCategory);
-				BTreePageId internalPid = new BTreePageId(tableid, bf.numPages() + 1, BTreePageId.INTERNAL);
-				bf.writePage(new BTreeInternalPage(internalPid, internalPageBytes, keyField));
-			}
-			else {
-				// split the remaining entries in half
-				ArrayList<BTreeEntry> secondToLastPg = new ArrayList<BTreeEntry>();
-				ArrayList<BTreeEntry> lastPg = new ArrayList<BTreeEntry>();
-				secondToLastPg.addAll(entries.get(i).subList(0, size/2));
-				lastPg.addAll(entries.get(i).subList(size/2 + 1, size));
-
-				// write out the last two pages of entries
-				byte[] secondToLastPageBytes = convertToInternalPage(secondToLastPg, npagebytes, keyType, childPageCategory);
-				BTreePageId secondToLastPid = new BTreePageId(tableid, bf.numPages() + 1, BTreePageId.INTERNAL);
-				bf.writePage(new BTreeInternalPage(secondToLastPid, secondToLastPageBytes, keyField));
-
-				byte[] lastPageBytes = convertToInternalPage(lastPg, npagebytes, keyType, childPageCategory);
-				BTreePageId lastPid = new BTreePageId(tableid, bf.numPages() + 1, BTreePageId.INTERNAL);
-				bf.writePage(new BTreeInternalPage(lastPid, lastPageBytes, keyField));
-
-				// update the parent by "pushing up" the next key
-				BTreeEntry pushUpEntry = new BTreeEntry(entries.get(i).get(size/2).getKey(), secondToLastPid, lastPid);
-				updateEntries(entries, bf, pushUpEntry, i+1, nentries, npagebytes, 
-						keyType, tableid, keyField);
-			}
-
-		}
-	}
-
-	/**
-	 * Recursive function to update the entries by adding a new Entry at a particular level
-	 * 
-	 * @param entries - the list of entries
-	 * @param bf - the BTreefile
-	 * @param e - the new entry 
-	 * @param level - the level of the new entry (0 is closest to the leaf pages)
-	 * @param nentries - number of entries per page
-	 * @param npagebytes - number of bytes per page
-	 * @param keyType - the type of the key field
-	 * @param tableid - the table id of this BTreeFile
-	 * @param keyField - the index of the key field
-	 * @throws IOException
-	 */
-	private static void updateEntries(ArrayList<ArrayList<BTreeEntry>> entries, 
-			BTreeFile bf, BTreeEntry e, int level, int nentries, int npagebytes, Type keyType, 
-			int tableid, int keyField) throws IOException {
-		while(entries.size() <= level) {
-			entries.add(new ArrayList<BTreeEntry>());
-		}
-
-		int childPageCategory = (level == 0 ? BTreePageId.LEAF : BTreePageId.INTERNAL);
-		int size = entries.get(level).size();
-
-		if(size > 0) {
-			BTreeEntry prev = entries.get(level).get(size-1);
-			entries.get(level).set(size-1, new BTreeEntry(prev.getKey(), prev.getLeftChild(), e.getLeftChild()));
-			if(size == nentries * 2 + 1) {
-				// write out a page of entries
-				ArrayList<BTreeEntry> pageEntries = new ArrayList<BTreeEntry>();
-				pageEntries.addAll(entries.get(level).subList(0, nentries));
-				byte[] internalPageBytes = convertToInternalPage(pageEntries, npagebytes, keyType, childPageCategory);
-				BTreePageId internalPid = new BTreePageId(tableid, bf.numPages() + 1, BTreePageId.INTERNAL);
-				bf.writePage(new BTreeInternalPage(internalPid, internalPageBytes, keyField));
-
-				// update the parent by "pushing up" the next key
-				BTreeEntry pushUpEntry = new BTreeEntry(entries.get(level).get(nentries).getKey(), internalPid, null);
-				updateEntries(entries, bf, pushUpEntry, level + 1, nentries, npagebytes, 
-						keyType, tableid, keyField);
-				ArrayList<BTreeEntry> remainingEntries = new ArrayList<BTreeEntry>();
-				remainingEntries.addAll(entries.get(level).subList(nentries+1, size));
-				entries.get(level).clear();
-				entries.get(level).addAll(remainingEntries);
-			}
-		}
-		entries.get(level).add(e);
-	}
-
-	/**
-	 * Convert a set of tuples to a byte array in the format of a BTreeLeafPage
-	 * 
-	 * @param tuples - the set of tuples
-	 * @param npagebytes - number of bytes per page
-	 * @param numFields - number of fields in each tuple
-	 * @param typeAr - array containing the types of the tuples
-	 * @param keyField - the field of the tuples the B+ tree will be keyed on
-	 * @return a byte array which can be passed to the BTreeLeafPage constructor
-	 * @throws IOException
-	 */
-	public static byte[] convertToLeafPage(ArrayList<Tuple> tuples, int npagebytes,
-			int numFields, Type[] typeAr, int keyField)
-					throws IOException {
-		int nrecbytes = 0;
-		for (int i = 0; i < numFields ; i++) {
-			nrecbytes += typeAr[i].getLen();
-		}
-		// pointerbytes: left sibling pointer, right sibling pointer, parent pointer
-		int pointerbytes = 3 * BTreeLeafPage.INDEX_SIZE; 
-		int nrecords = (npagebytes * 8 - pointerbytes * 8) /  (nrecbytes * 8 + 1);  //floor comes for free
-
-		//  per record, we need one bit; there are nrecords per page, so we need
-		// nrecords bits, i.e., ((nrecords/32)+1) integers.
-		int nheaderbytes = (nrecords / 8);
-		if (nheaderbytes * 8 < nrecords)
-			nheaderbytes++;  //ceiling
-		int nheaderbits = nheaderbytes * 8;
-
-		ByteArrayOutputStream baos = new ByteArrayOutputStream(npagebytes);
-		DataOutputStream dos = new DataOutputStream(baos);
-
-		// write out the pointers and the header of the page,
-		// then sort the tuples on the keyField and write out the tuples.
-		//
-		// in the header, write a 1 for bits that correspond to records we've
-		// written and 0 for empty slots.
-
-		int recordcount = tuples.size();
-		if (recordcount > nrecords)
-			recordcount = nrecords;
-
-		dos.writeInt(0); // parent pointer
-		dos.writeInt(0); // left sibling pointer
-		dos.writeInt(0); // right sibling pointer
-
-		int i = 0;
-		byte headerbyte = 0;
-
-		for (i=0; i<nheaderbits; i++) {
-			if (i < recordcount)
-				headerbyte |= (1 << (i % 8));
-
-			if (((i+1) % 8) == 0) {
-				dos.writeByte(headerbyte);
-				headerbyte = 0;
-			}
-		}
-
-		if (i % 8 > 0)
-			dos.writeByte(headerbyte);
-
-		Collections.sort(tuples, new TupleComparator(keyField));
-		for(int t = 0; t < recordcount; t++) {
-			TupleDesc td = tuples.get(t).getTupleDesc();
-			for(int j = 0; j < td.numFields(); j++) {
-				tuples.get(t).getField(j).serialize(dos);
-			}
-		}
-
-		// pad the rest of the page with zeroes
-		for (i=0; i<(npagebytes - (recordcount * nrecbytes + nheaderbytes + pointerbytes)); i++)
-			dos.writeByte(0);
-
-		return baos.toByteArray();
-	}
-
-	/**
-	 *  Comparator to sort BTreeEntry objects by key
-	 */
-	public static class EntryComparator implements Comparator<BTreeEntry> {
-		/**
-		 * Compare two entries based on their key field
-		 * 
-		 * @return -1 if e1 < e2, 1 if e1 > e2, 0 if e1 == e2
-		 */
-		public int compare(BTreeEntry e1, BTreeEntry e2) {
-			int cmp = 0;
-			if(e1.getKey().compare(Op.LESS_THAN, e2.getKey())) {
-				cmp = -1;
-			}
-			else if(e1.getKey().compare(Op.GREATER_THAN, e2.getKey())) {
-				cmp = 1;
-			}
-			return cmp;
-		}
-	}
-
-	/**
-	 *  Comparator to sort BTreeEntry objects by key in descending order
-	 */
-	public static class ReverseEntryComparator implements Comparator<BTreeEntry> {
-		/**
-		 * Compare two entries based on their key field
-		 * 
-		 * @return -1 if e1 > e2, 1 if e1 < e2, 0 if e1 == e2
-		 */
-		public int compare(BTreeEntry e1, BTreeEntry e2) {
-			int cmp = 0;
-			if(e1.getKey().compare(Op.GREATER_THAN, e2.getKey())) {
-				cmp = -1;
-			}
-			else if(e1.getKey().compare(Op.LESS_THAN, e2.getKey())) {
-				cmp = 1;
-			}
-			return cmp;
-		}
-	}
-
-	/**
-	 * Convert a set of entries to a byte array in the format of a BTreeInternalPage
-	 * 
-	 * @param entries - the set of entries
-	 * @param npagebytes - number of bytes per page
-	 * @param keyType - the type of the key field
-	 * @param childPageCategory - the category of the child pages (either internal or leaf)
-	 * @return a byte array which can be passed to the BTreeInternalPage constructor
-	 * @throws IOException
-	 */
-	public static byte[] convertToInternalPage(ArrayList<BTreeEntry> entries, int npagebytes,
-			Type keyType, int childPageCategory)
-					throws IOException {
-		int nentrybytes = keyType.getLen() + BTreeInternalPage.INDEX_SIZE;
-		// pointerbytes: one extra child pointer, parent pointer, child page category
-		int pointerbytes = 2 * BTreeLeafPage.INDEX_SIZE + 1; 
-		int nentries = (npagebytes * 8 - pointerbytes * 8 - 1) /  (nentrybytes * 8 + 1);  //floor comes for free
-
-		//  per entry, we need one bit; there are nentries per page, so we need
-		// nentries bits, plus 1 for the extra child pointer.
-		int nheaderbytes = (nentries + 1) / 8;
-		if (nheaderbytes * 8 < nentries + 1)
-			nheaderbytes++;  //ceiling
-		int nheaderbits = nheaderbytes * 8;
-
-		ByteArrayOutputStream baos = new ByteArrayOutputStream(npagebytes);
-		DataOutputStream dos = new DataOutputStream(baos);
-
-		// write out the pointers and the header of the page,
-		// then sort the entries and write them out.
-		//
-		// in the header, write a 1 for bits that correspond to entries we've
-		// written and 0 for empty slots.
-		int entrycount = entries.size();
-		if (entrycount > nentries)
-			entrycount = nentries;
-
-		dos.writeInt(0); // parent pointer
-		dos.writeByte((byte) childPageCategory);
-
-		int i = 0;
-		byte headerbyte = 0;
-
-		for (i=0; i<nheaderbits; i++) {
-			if (i < entrycount + 1)
-				headerbyte |= (1 << (i % 8));
-
-			if (((i+1) % 8) == 0) {
-				dos.writeByte(headerbyte);
-				headerbyte = 0;
-			}
-		}
-
-		if (i % 8 > 0)
-			dos.writeByte(headerbyte);
-
-		Collections.sort(entries, new EntryComparator());
-		for(int e = 0; e < entrycount; e++) {
-			entries.get(e).getKey().serialize(dos);
-		}
-
-		for(int e = entrycount; e < nentries; e++) {
-			for (int j=0; j<keyType.getLen(); j++) {
-				dos.writeByte(0);
-			}
-		}
-
-		dos.writeInt(entries.get(0).getLeftChild().pageNumber());
-		for(int e = 0; e < entrycount; e++) {
-			dos.writeInt(entries.get(e).getRightChild().pageNumber());
-		}
-
-		for(int e = entrycount; e < nentries; e++) {
-			for (int j=0; j<BTreeInternalPage.INDEX_SIZE; j++) {
-				dos.writeByte(0);
-			}
-		}
-
-		// pad the rest of the page with zeroes
-		for (i=0; i<(npagebytes - (nentries * nentrybytes + nheaderbytes + pointerbytes)); i++)
-			dos.writeByte(0);
-
-		return baos.toByteArray();
-
-	}
-
-	/**
-	 * Create a byte array in the format of a BTreeRootPtrPage
-	 * 
-	 * @param root - the page number of the root page
-	 * @param rootCategory - the category of the root page (leaf or internal)
-	 * @param header - the page number of the first header page
-	 * @return a byte array which can be passed to the BTreeRootPtrPage constructor
-	 * @throws IOException
-	 */
-	public static byte[] convertToRootPtrPage(int root, int rootCategory, int header)
-			throws IOException {
-
-		ByteArrayOutputStream baos = new ByteArrayOutputStream(BTreeRootPtrPage.getPageSize());
-		DataOutputStream dos = new DataOutputStream(baos);
-
-		dos.writeInt(root); // root pointer
-		dos.writeByte((byte) rootCategory); // root page category
-
-		dos.writeInt(header); // header pointer
-
-		return baos.toByteArray();
-	}
-
-}
diff -ruN lab3/src/java/simpledb/BTreeHeaderPage.java lab4/src/java/simpledb/BTreeHeaderPage.java
--- lab3/src/java/simpledb/BTreeHeaderPage.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeHeaderPage.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,306 +0,0 @@
-package simpledb;
-
-import java.io.*;
-
-/**
- * Each instance of BTreeHeaderPage stores data for one page of a BTreeFile and 
- * implements the Page interface that is used by BufferPool.
- *
- * @see BTreeFile
- * @see BufferPool
- *
- */
-public class BTreeHeaderPage implements Page {
-	private volatile boolean dirty = false;
-	private volatile TransactionId dirtier = null;
-	
-	final static int INDEX_SIZE = Type.INT_TYPE.getLen();
-
-	final BTreePageId pid;
-	final byte header[];
-	final int numSlots;
-
-	private int nextPage; // next header page or 0
-	private int prevPage; // previous header page or 0
-
-	byte[] oldData;
-	private final Byte oldDataLock=new Byte((byte)0);
-
-	/**
-	 * Create a BTreeHeaderPage from a set of bytes of data read from disk.
-	 * The format of a BTreeHeaderPage is two pointers to the next and previous
-	 * header pages, followed by a set of bytes indicating which pages in the file
-	 * are used or available
-	 * @see BufferPool#getPageSize()
-	 * 
-	 */
-	public BTreeHeaderPage(BTreePageId id, byte[] data) throws IOException {
-		this.pid = id;
-		this.numSlots = getNumSlots();
-		DataInputStream dis = new DataInputStream(new ByteArrayInputStream(data));
-
-		// Read the next and prev pointers
-		try {
-			Field f = Type.INT_TYPE.parse(dis);
-			this.nextPage = ((IntField) f).getValue();
-		} catch (java.text.ParseException e) {
-			e.printStackTrace();
-		}
-
-		try {
-			Field f = Type.INT_TYPE.parse(dis);
-			this.prevPage = ((IntField) f).getValue();
-		} catch (java.text.ParseException e) {
-			e.printStackTrace();
-		}
-
-		// allocate and read the header slots of this page
-		header = new byte[getHeaderSize()];
-		for (int i=0; i<header.length; i++)
-			header[i] = dis.readByte();
-
-		dis.close();
-
-		setBeforeImage();
-	}
-
-	/**
-	 * Initially mark all slots in the header used.
-	 */
-	public void init() {
-		for (int i=0; i<header.length; i++)
-			header[i] = (byte) 0xFF;
-	}
-
-	/**
-	 * Computes the number of bytes in the header while saving room for pointers
-	 */
-	private static int getHeaderSize() {        
-		// pointerBytes: nextPage and prevPage pointers
-		int pointerBytes = 2 * INDEX_SIZE; 
-		return BufferPool.getPageSize() - pointerBytes;
-	}
-
-	/**
-	 * Computes the number of slots in the header
-	 */
-	public static int getNumSlots() {        
-		return getHeaderSize() * 8;
-	}
-
-	/** Return a view of this page before it was modified
-        -- used by recovery */
-	public BTreeHeaderPage getBeforeImage(){
-		try {
-			byte[] oldDataRef = null;
-			synchronized(oldDataLock)
-			{
-				oldDataRef = oldData;
-			}
-			return new BTreeHeaderPage(pid,oldDataRef);
-		} catch (IOException e) {
-			e.printStackTrace();
-			//should never happen -- we parsed it OK before!
-			System.exit(1);
-		}
-		return null;
-	}
-
-	public void setBeforeImage() {
-		synchronized(oldDataLock)
-		{
-			oldData = getPageData().clone();
-		}
-	}
-
-	/**
-	 * @return the PageId associated with this page.
-	 */
-	public BTreePageId getId() {
-		return pid;
-	}
-
-	/**
-	 * Generates a byte array representing the contents of this page.
-	 * Used to serialize this page to disk.
-	 * <p>
-	 * The invariant here is that it should be possible to pass the byte
-	 * array generated by getPageData to the BTreeHeaderPage constructor and
-	 * have it produce an identical BTreeHeaderPage object.
-	 *
-	 * @see #BTreeHeaderPage
-	 * @return A byte array correspond to the bytes of this page.
-	 */
-	public byte[] getPageData() {
-		int len = BufferPool.getPageSize();
-		ByteArrayOutputStream baos = new ByteArrayOutputStream(len);
-		DataOutputStream dos = new DataOutputStream(baos);
-
-		// write out the next and prev pointers
-		try {
-			dos.writeInt(nextPage);
-
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-		try {
-			dos.writeInt(prevPage);
-
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		// create the header of the page
-		for (int i=0; i<header.length; i++) {
-			try {
-				dos.writeByte(header[i]);
-			} catch (IOException e) {
-				// this really shouldn't happen
-				e.printStackTrace();
-			}
-		}
-
-		try {
-			dos.flush();
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		return baos.toByteArray();
-	}
-
-	/**
-	 * Static method to generate a byte array corresponding to an empty
-	 * BTreeHeaderPage.
-	 * Used to add new, empty pages to the file. Passing the results of
-	 * this method to the BTreeHeaderPage constructor will create a BTreeHeaderPage with
-	 * no valid data in it.
-	 *
-	 * @return The returned ByteArray.
-	 */
-	public static byte[] createEmptyPageData() {
-		int len = BufferPool.getPageSize();
-		return new byte[len]; //all 0
-	}
-
-	/**
-	 * Get the page id of the previous header page
-	 * @return the page id of the previous header page
-	 */
-	public BTreePageId getPrevPageId() {
-		if(prevPage == 0) {
-			return null;
-		}
-		return new BTreePageId(pid.getTableId(), prevPage, BTreePageId.HEADER);
-	}
-
-	/**
-	 * Get the page id of the next header page
-	 * @return the page id of the next header page
-	 */
-	public BTreePageId getNextPageId() {
-		if(nextPage == 0) {
-			return null;
-		}
-		return new BTreePageId(pid.getTableId(), nextPage, BTreePageId.HEADER);
-	}
-
-	/**
-	 * Set the page id of the previous header page
-	 * @param id - the page id of the previous header page
-	 * @throws DbException
-	 */
-	public void setPrevPageId(BTreePageId id) throws DbException {
-		if(id == null) {
-			prevPage = 0;
-		}
-		else {
-			if(id.getTableId() != pid.getTableId()) {
-				throw new DbException("table id mismatch in setPrevPageId");
-			}
-			if(id.pgcateg() != BTreePageId.HEADER) {
-				throw new DbException("prevPage must be a header page");
-			}
-			prevPage = id.pageNumber();
-		}
-	}
-
-	/**
-	 * Set the page id of the next header page
-	 * @param id - the page id of the next header page
-	 * @throws DbException
-	 */
-	public void setNextPageId(BTreePageId id) throws DbException {
-		if(id == null) {
-			nextPage = 0;
-		}
-		else {
-			if(id.getTableId() != pid.getTableId()) {
-				throw new DbException("table id mismatch in setNextPageId");
-			}
-			if(id.pgcateg() != BTreePageId.HEADER) {
-				throw new DbException("nextPage must be a header page");
-			}
-			nextPage = id.pageNumber();
-		}
-	}
-
-	/**
-	 * Marks this page as dirty/not dirty and record that transaction
-	 * that did the dirtying
-	 */
-	public void markDirty(boolean dirty, TransactionId tid) {
-		this.dirty = dirty;
-		if (dirty) this.dirtier = tid;
-	}
-
-	/**
-	 * Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty
-	 */
-	public TransactionId isDirty() {
-		if (this.dirty)
-			return this.dirtier;
-		else
-			return null;
-	}
-
-	/**
-	 * Returns true if the page of the BTreeFile associated with slot i is used
-	 */
-	public boolean isSlotUsed(int i) {
-		int headerbit = i % 8;
-		int headerbyte = (i - headerbit) / 8;
-		return (header[headerbyte] & (1 << headerbit)) != 0;
-	}
-
-	/**
-	 * Abstraction to mark a page of the BTreeFile used or unused
-	 */
-	public void markSlotUsed(int i, boolean value) {
-		int headerbit = i % 8;
-		int headerbyte = (i - headerbit) / 8;
-
-		Debug.log(1, "BTreeHeaderPage.setSlot: setting slot %d to %b", i, value);
-		if(value)
-			header[headerbyte] |= 1 << headerbit;
-		else
-			header[headerbyte] &= (0xFF ^ (1 << headerbit));
-	}
-
-	/**
-	 * get the index of the first empty slot
-	 * @return the index of the first empty slot or -1 if none exists
-	 */
-	public int getEmptySlot() {
-		for (int i=0; i<header.length; i++) {
-			if((int) header[i] != 0xFF) {
-				for(int j = 0; j < 8; j++) {
-					if(!isSlotUsed(i*8 + j)) {
-						return i*8 + j;
-					}
-				}
-			}
-		}
-		return -1;
-	}
-}
diff -ruN lab3/src/java/simpledb/BTreeInternalPage.java lab4/src/java/simpledb/BTreeInternalPage.java
--- lab3/src/java/simpledb/BTreeInternalPage.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeInternalPage.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,803 +0,0 @@
-package simpledb;
-
-import java.util.*;
-import java.io.*;
-
-import simpledb.Predicate.Op;
-
-/**
- * Each instance of BTreeInternalPage stores data for one page of a BTreeFile and 
- * implements the Page interface that is used by BufferPool.
- *
- * @see BTreeFile
- * @see BufferPool
- *
- */
-public class BTreeInternalPage extends BTreePage {
-	private final byte header[];
-	private final Field keys[];
-	private final int children[];
-	private final int numSlots;
-	
-	private int childCategory; // either leaf or internal
-
-	public void checkRep(Field lowerBound, Field upperBound, boolean checkOccupancy, int depth) {
-		Field prev = lowerBound;
-		assert(this.getId().pgcateg() == BTreePageId.INTERNAL);
-
-		Iterator<BTreeEntry> it  = this.iterator();
-		while (it.hasNext()) {
-			Field f = it.next().getKey();
-			assert(null == prev || prev.compare(Op.LESS_THAN_OR_EQ,f));
-			prev = f;
-		}
-
-		if (null != upperBound && null != prev){
-			assert(prev.compare(Op.LESS_THAN_OR_EQ, upperBound));
-		}
-
-		if (checkOccupancy && depth > 0) {
-			assert (getNumEntries() >= getMaxEntries() / 2);
-		}
-	}
-	
-	/**
-	 * Create a BTreeInternalPage from a set of bytes of data read from disk.
-	 * The format of a BTreeInternalPage is a set of header bytes indicating
-	 * the slots of the page that are in use, some number of entry slots, and extra
-	 * bytes for the parent pointer, one extra child pointer (a node with m entries 
-	 * has m+1 pointers to children), and the category of all child pages (either 
-	 * leaf or internal).
-	 *  Specifically, the number of entries is equal to: <p>
-	 *          floor((BufferPool.getPageSize()*8 - extra bytes*8) / (entry size * 8 + 1))
-	 * <p> where entry size is the size of entries in this index node
-	 * (key + child pointer), which can be determined via the key field and 
-	 * {@link Catalog#getTupleDesc}.
-	 * The number of 8-bit header words is equal to:
-	 * <p>
-	 *      ceiling((no. entry slots + 1) / 8)
-	 * <p>
-	 * @see Database#getCatalog
-	 * @see Catalog#getTupleDesc
-	 * @see BufferPool#getPageSize()
-	 * 
-	 * @param id - the id of this page
-	 * @param data - the raw data of this page
-	 * @param key - the field which the index is keyed on
-	 */
-	public BTreeInternalPage(BTreePageId id, byte[] data, int key) throws IOException {
-		super(id, key);
-		this.numSlots = getMaxEntries() + 1;
-		DataInputStream dis = new DataInputStream(new ByteArrayInputStream(data));
-
-		// Read the parent pointer
-		try {
-			Field f = Type.INT_TYPE.parse(dis);
-			this.parent = ((IntField) f).getValue();
-		} catch (java.text.ParseException e) {
-			e.printStackTrace();
-		}
-
-		// read the child page category
-		childCategory = (int) dis.readByte();
-
-		// allocate and read the header slots of this page
-		header = new byte[getHeaderSize()];
-		for (int i=0; i<header.length; i++)
-			header[i] = dis.readByte();
-
-		keys = new Field[numSlots];
-		try{
-			// allocate and read the keys of this page
-			// start from 1 because the first key slot is not used
-			// since a node with m keys has m+1 pointers
-			keys[0] = null;
-			for (int i=1; i<keys.length; i++)
-				keys[i] = readNextKey(dis,i);
-		}catch(NoSuchElementException e){
-			e.printStackTrace();
-		}
-
-		children = new int[numSlots];
-		try{
-			// allocate and read the child pointers of this page
-			for (int i=0; i<children.length; i++)
-				children[i] = readNextChild(dis,i);
-		}catch(NoSuchElementException e){
-			e.printStackTrace();
-		}
-		dis.close();
-
-		setBeforeImage();
-	}
-
-	/** 
-	 * Retrieve the maximum number of entries this page can hold. (The number of keys)
- 	 */
-	public int getMaxEntries() {        
-		int keySize = td.getFieldType(keyField).getLen();
-		int bitsPerEntryIncludingHeader = keySize * 8 + INDEX_SIZE * 8 + 1;
-		// extraBits are: one parent pointer, 1 byte for child page category, 
-		// one extra child pointer (node with m entries has m+1 pointers to children), 1 bit for extra header
-		int extraBits = 2 * INDEX_SIZE * 8 + 8 + 1; 
-		int entriesPerPage = (BufferPool.getPageSize()*8 - extraBits) / bitsPerEntryIncludingHeader; //round down
-		return entriesPerPage;
-	}
-
-	/**
-	 * Computes the number of bytes in the header of a B+ internal page with each entry occupying entrySize bytes
-	 * @return the number of bytes in the header
-	 */
-	private int getHeaderSize() {        
-		int slotsPerPage = getMaxEntries() + 1;
-		int hb = (slotsPerPage / 8);
-		if (hb * 8 < slotsPerPage) hb++;
-
-		return hb;
-	}
-
-	/** Return a view of this page before it was modified
-        -- used by recovery */
-	public BTreeInternalPage getBeforeImage(){
-		try {
-			byte[] oldDataRef = null;
-			synchronized(oldDataLock)
-			{
-				oldDataRef = oldData;
-			}
-			return new BTreeInternalPage(pid,oldDataRef,keyField);
-		} catch (IOException e) {
-			e.printStackTrace();
-			//should never happen -- we parsed it OK before!
-			System.exit(1);
-		}
-		return null;
-	}
-
-	public void setBeforeImage() {
-		synchronized(oldDataLock)
-		{
-			oldData = getPageData().clone();
-		}
-	}
-
-	/**
-	 * Read keys from the source file.
-	 */
-	private Field readNextKey(DataInputStream dis, int slotId) throws NoSuchElementException {
-		// if associated bit is not set, read forward to the next key, and
-		// return null.
-		if (!isSlotUsed(slotId)) {
-			for (int i=0; i<td.getFieldType(keyField).getLen(); i++) {
-				try {
-					dis.readByte();
-				} catch (IOException e) {
-					throw new NoSuchElementException("error reading empty key");
-				}
-			}
-			return null;
-		}
-
-		// read the key field
-		Field f = null;
-		try {
-			f = td.getFieldType(keyField).parse(dis);
-		} catch (java.text.ParseException e) {
-			e.printStackTrace();
-			throw new NoSuchElementException("parsing error!");
-		}
-
-		return f;
-	}
-
-	/**
-	 * Read child pointers from the source file.
-	 */
-	private int readNextChild(DataInputStream dis, int slotId) throws NoSuchElementException {
-		// if associated bit is not set, read forward to the next child pointer, and
-		// return -1.
-		if (!isSlotUsed(slotId)) {
-			for (int i=0; i<INDEX_SIZE; i++) {
-				try {
-					dis.readByte();
-				} catch (IOException e) {
-					throw new NoSuchElementException("error reading empty child pointer");
-				}
-			}
-			return -1;
-		}
-
-		// read child pointer
-		int child = -1;
-		try {
-			Field f = Type.INT_TYPE.parse(dis);
-			child = ((IntField) f).getValue();
-		} catch (java.text.ParseException e) {
-			e.printStackTrace();
-			throw new NoSuchElementException("parsing error!");
-		}
-
-		return child;
-	}
-
-	/**
-	 * Generates a byte array representing the contents of this page.
-	 * Used to serialize this page to disk.
-	 * <p>
-	 * The invariant here is that it should be possible to pass the byte
-	 * array generated by getPageData to the BTreeInternalPage constructor and
-	 * have it produce an identical BTreeInternalPage object.
-	 *
-	 * @see #BTreeInternalPage
-	 * @return A byte array correspond to the bytes of this page.
-	 */
-	public byte[] getPageData() {
-		int len = BufferPool.getPageSize();
-		ByteArrayOutputStream baos = new ByteArrayOutputStream(len);
-		DataOutputStream dos = new DataOutputStream(baos);
-
-		// write out the parent pointer
-		try {
-			dos.writeInt(parent);
-
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		// write out the child page category
-		try {
-			dos.writeByte((byte) childCategory);
-
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		// create the header of the page
-		for (int i=0; i<header.length; i++) {
-			try {
-				dos.writeByte(header[i]);
-			} catch (IOException e) {
-				// this really shouldn't happen
-				e.printStackTrace();
-			}
-		}
-
-		// create the keys
-		// start from 1 because the first key slot is not used
-		// since a node with m keys has m+1 pointers
-		for (int i=1; i<keys.length; i++) {
-
-			// empty slot
-			if (!isSlotUsed(i)) {
-				for (int j=0; j<td.getFieldType(keyField).getLen(); j++) {
-					try {
-						dos.writeByte(0);
-					} catch (IOException e) {
-						e.printStackTrace();
-					}
-
-				}
-				continue;
-			}
-
-			// non-empty slot
-			try {
-				keys[i].serialize(dos);
-			} catch (IOException e) {
-				e.printStackTrace();
-			}
-
-		}
-
-		// create the child pointers
-		for (int i=0; i<children.length; i++) {
-
-			// empty slot
-			if (!isSlotUsed(i)) {
-				for (int j=0; j<INDEX_SIZE; j++) {
-					try {
-						dos.writeByte(0);
-					} catch (IOException e) {
-						e.printStackTrace();
-					}
-
-				}
-				continue;
-			}
-
-			// non-empty slot
-			try {
-				dos.writeInt(children[i]);
-
-			} catch (IOException e) {
-				e.printStackTrace();
-			}
-		}
-
-		// padding
-		int zerolen = BufferPool.getPageSize() - (INDEX_SIZE + 1 + header.length + 
-				td.getFieldType(keyField).getLen() * (keys.length - 1) + INDEX_SIZE * children.length); 
-		byte[] zeroes = new byte[zerolen];
-		try {
-			dos.write(zeroes, 0, zerolen);
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		try {
-			dos.flush();
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		return baos.toByteArray();
-	}
-
-	/**
-	 * Delete the specified entry (key + 1 child pointer) from the page. The recordId
-	 * is used to find the specified entry, so it must not be null. After deletion, the 
-	 * entry's recordId should be set to null to reflect that it is no longer stored on 
-	 * any page.
-	 * @throws DbException if this entry is not on this page, or entry slot is
-	 *         already empty.
-	 * @param e The entry to delete
-	 * @param deleteRightChild - if true, delete the right child. Otherwise
-	 *        delete the left child
-	 */
-	private void deleteEntry(BTreeEntry e, boolean deleteRightChild) throws DbException {
-		RecordId rid = e.getRecordId();
-		if(rid == null)
-			throw new DbException("tried to delete entry with null rid");
-		if((rid.getPageId().pageNumber() != pid.pageNumber()) || (rid.getPageId().getTableId() != pid.getTableId()))
-			throw new DbException("tried to delete entry on invalid page or table");
-		if (!isSlotUsed(rid.tupleno()))
-			throw new DbException("tried to delete null entry.");
-		if(deleteRightChild) {
-			markSlotUsed(rid.tupleno(), false); 
-		}
-		else {
-			for(int i = rid.tupleno() - 1; i >= 0; i--) {
-				if(isSlotUsed(i)) {
-					children[i] = children[rid.tupleno()];
-					markSlotUsed(rid.tupleno(), false); 
-					break;
-				}	
-			}
-		}
-		e.setRecordId(null);
-	}
-
-	/**
-	 * Delete the specified entry (key + right child pointer) from the page. The recordId
-	 * is used to find the specified entry, so it must not be null. After deletion, the 
-	 * entry's recordId should be set to null to reflect that it is no longer stored on 
-	 * any page.
-	 * @throws DbException if this entry is not on this page, or entry slot is
-	 *         already empty.
-	 * @param e The entry to delete
-	 */
-	public void deleteKeyAndRightChild(BTreeEntry e) throws DbException {
-		deleteEntry(e, true);
-	}
-	
-	/**
-	 * Delete the specified entry (key + left child pointer) from the page. The recordId
-	 * is used to find the specified entry, so it must not be null. After deletion, the 
-	 * entry's recordId should be set to null to reflect that it is no longer stored on 
-	 * any page.
-	 * @throws DbException if this entry is not on this page, or entry slot is
-	 *         already empty.
-	 * @param e The entry to delete
-	 */
-	public void deleteKeyAndLeftChild(BTreeEntry e) throws DbException {
-		deleteEntry(e, false);
-	}
-	
-	/**
-	 * Update the key and/or child pointers of an entry at the location specified by its 
-	 * record id.
-	 * @param e - the entry with updated key and/or child pointers
-	 * @throws DbException if this entry is not on this page, entry slot is
-	 *         already empty, or updating this key would put the entry out of 
-	 *         order on the page
-	 */
-	public void updateEntry(BTreeEntry e) throws DbException {
-		RecordId rid = e.getRecordId();
-		if(rid == null)
-			throw new DbException("tried to update entry with null rid");
-		if((rid.getPageId().pageNumber() != pid.pageNumber()) || (rid.getPageId().getTableId() != pid.getTableId()))
-			throw new DbException("tried to update entry on invalid page or table");
-		if (!isSlotUsed(rid.tupleno()))
-			throw new DbException("tried to update null entry.");
-		
-		for(int i = rid.tupleno() + 1; i < numSlots; i++) {
-			if(isSlotUsed(i)) {
-				if(keys[i].compare(Op.LESS_THAN, e.getKey())) {
-					throw new DbException("attempt to update entry with invalid key " + e.getKey() +
-							" HINT: updated key must be less than or equal to keys on the right");
-				}
-				break;
-			}	
-		}
-		for(int i = rid.tupleno() - 1; i >= 0; i--) {
-			if(isSlotUsed(i)) {
-				if(i > 0 && keys[i].compare(Op.GREATER_THAN, e.getKey())) {
-					throw new DbException("attempt to update entry with invalid key " + e.getKey() +
-							" HINT: updated key must be greater than or equal to keys on the left");
-				}
-				children[i] = e.getLeftChild().pageNumber();
-				break;
-			}	
-		}
-		children[rid.tupleno()] = e.getRightChild().pageNumber(); 
-		keys[rid.tupleno()] = e.getKey();
-	}
-
-	/**
-	 * Adds the specified entry to the page; the entry's recordId should be updated to 
-	 * reflect that it is now stored on this page.
-	 * @throws DbException if the page is full (no empty slots) or key field type,
-	 *         table id, or child page category is a mismatch, or the entry is invalid
-	 * @param e The entry to add.
-	 */
-	public void insertEntry(BTreeEntry e) throws DbException {
-		if (!e.getKey().getType().equals(td.getFieldType(keyField)))
-			throw new DbException("key field type mismatch, in insertEntry");
-
-		if(e.getLeftChild().getTableId() != pid.getTableId() || e.getRightChild().getTableId() != pid.getTableId())
-			throw new DbException("table id mismatch in insertEntry");
-
-		if(childCategory == 0) {
-			if(e.getLeftChild().pgcateg() != e.getRightChild().pgcateg())
-				throw new DbException("child page category mismatch in insertEntry");
-
-			childCategory = e.getLeftChild().pgcateg();
-		}
-		else if(e.getLeftChild().pgcateg() != childCategory || e.getRightChild().pgcateg() != childCategory)
-			throw new DbException("child page category mismatch in insertEntry");
-
-		// if this is the first entry, add it and return
-		if(getNumEmptySlots() == getMaxEntries()) {
-			children[0] = e.getLeftChild().pageNumber();
-			children[1] = e.getRightChild().pageNumber();
-			keys[1] = e.getKey();
-			markSlotUsed(0, true);
-			markSlotUsed(1, true);
-			e.setRecordId(new RecordId(pid, 1));
-			return;
-		}
-
-		// find the first empty slot, starting from 1
-		int emptySlot = -1;
-		for (int i=1; i<numSlots; i++) {
-			if (!isSlotUsed(i)) {
-				emptySlot = i;
-				break;
-			}
-		}
-
-		if (emptySlot == -1)
-			throw new DbException("called insertEntry on page with no empty slots.");        
-
-		// find the child pointer matching the left or right child in this entry
-		int lessOrEqKey = -1;
-		for (int i=0; i<numSlots; i++) {
-			if(isSlotUsed(i)) {
-				if(children[i] == e.getLeftChild().pageNumber() || children[i] == e.getRightChild().pageNumber()) {
-					if(i > 0 && keys[i].compare(Op.GREATER_THAN, e.getKey())) {
-						throw new DbException("attempt to insert invalid entry with left child " + 
-								e.getLeftChild().pageNumber() + ", right child " + 
-								e.getRightChild().pageNumber() + " and key " + e.getKey() +
-								" HINT: one of these children must match an existing child on the page" +
-								" and this key must be correctly ordered in between that child's" +
-								" left and right keys");
-					}
-					lessOrEqKey = i;
-					if(children[i] == e.getRightChild().pageNumber()) {
-						children[i] = e.getLeftChild().pageNumber();
-					}
-				}
-				else if(lessOrEqKey != -1) {
-					// validate that the next key is greater than or equal to the one we are inserting
-					if(keys[i].compare(Op.LESS_THAN, e.getKey())) {
-						throw new DbException("attempt to insert invalid entry with left child " + 
-								e.getLeftChild().pageNumber() + ", right child " + 
-								e.getRightChild().pageNumber() + " and key " + e.getKey() +
-								" HINT: one of these children must match an existing child on the page" +
-								" and this key must be correctly ordered in between that child's" +
-								" left and right keys");
-					}
-					break;
-				}
-			}
-		}
-
-		if(lessOrEqKey == -1) {
-			throw new DbException("attempt to insert invalid entry with left child " + 
-					e.getLeftChild().pageNumber() + ", right child " + 
-					e.getRightChild().pageNumber() + " and key " + e.getKey() +
-					" HINT: one of these children must match an existing child on the page" +
-					" and this key must be correctly ordered in between that child's" +
-					" left and right keys");
-		}
-
-		// shift entries back or forward to fill empty slot and make room for new entry
-		// while keeping entries in sorted order
-		int goodSlot = -1;
-		if(emptySlot < lessOrEqKey) {
-			for(int i = emptySlot; i < lessOrEqKey; i++) {
-				moveEntry(i+1, i);
-			}
-			goodSlot = lessOrEqKey;
-		}
-		else {
-			for(int i = emptySlot; i > lessOrEqKey + 1; i--) {
-				moveEntry(i-1, i);
-			}
-			goodSlot = lessOrEqKey + 1;
-		}
-
-		// insert new entry into the correct spot in sorted order
-		markSlotUsed(goodSlot, true);
-		Debug.log(1, "BTreeLeafPage.insertEntry: new entry, tableId = %d pageId = %d slotId = %d", pid.getTableId(), pid.pageNumber(), goodSlot);
-		keys[goodSlot] = e.getKey();
-		children[goodSlot] = e.getRightChild().pageNumber();
-		e.setRecordId(new RecordId(pid, goodSlot));
-	}
-
-	/**
-	 * Move an entry from one slot to another slot, and update the corresponding
-	 * headers
-	 */
-	private void moveEntry(int from, int to) {
-		if(!isSlotUsed(to) && isSlotUsed(from)) {
-			markSlotUsed(to, true);
-			keys[to] = keys[from];
-			children[to] = children[from];
-			markSlotUsed(from, false);
-		}
-	}
-
-	/**
-	 * Returns the number of entries (keys) currently stored on this page
-	 */
-	public int getNumEntries() {
-		return numSlots - getNumEmptySlots() - 1;
-	}
-	
-	/**
-	 * Returns the number of empty slots on this page.
-	 */
-	public int getNumEmptySlots() {
-		int cnt = 0;
-		// start from 1 because the first key slot is not used
-		// since a node with m keys has m+1 pointers
-		for(int i=1; i<numSlots; i++)
-			if(!isSlotUsed(i))
-				cnt++;
-		return cnt;
-	}
-
-	/**
-	 * Returns true if associated slot on this page is filled.
-	 */
-	public boolean isSlotUsed(int i) {
-		int headerbit = i % 8;
-		int headerbyte = (i - headerbit) / 8;
-		return (header[headerbyte] & (1 << headerbit)) != 0;
-	}
-
-	/**
-	 * Abstraction to fill or clear a slot on this page.
-	 */
-	private void markSlotUsed(int i, boolean value) {
-		int headerbit = i % 8;
-		int headerbyte = (i - headerbit) / 8;
-
-		Debug.log(1, "BTreeInternalPage.setSlot: setting slot %d to %b", i, value);
-		if(value)
-			header[headerbyte] |= 1 << headerbit;
-		else
-			header[headerbyte] &= (0xFF ^ (1 << headerbit));
-	}
-
-	/**
-	 * @return an iterator over all entries on this page (calling remove on this iterator throws an UnsupportedOperationException)
-	 * (note that this iterator shouldn't return entries in empty slots!)
-	 */
-	public Iterator<BTreeEntry> iterator() {
-		return new BTreeInternalPageIterator(this);
-	}
-	
-	/**
-	 * @return a reverse iterator over all entries on this page (calling remove on this iterator throws an UnsupportedOperationException)
-	 * (note that this iterator shouldn't return entries in empty slots!)
-	 */
-	public Iterator<BTreeEntry> reverseIterator() {
-		return new BTreeInternalPageReverseIterator(this);
-	}
-
-	/**
-	 * protected method used by the iterator to get the ith key out of this page
-	 * @param i - the index of the key
-	 * @return the ith key
-	 * @throws NoSuchElementException
-	 */
-	protected Field getKey(int i) throws NoSuchElementException {
-
-		// key at slot 0 is not used
-		if (i <= 0 || i >= keys.length)
-			throw new NoSuchElementException();
-
-		try {
-			if(!isSlotUsed(i)) {
-				Debug.log(1, "BTreeInternalPage.getKey: slot %d in %d:%d is not used", i, pid.getTableId(), pid.pageNumber());
-				return null;
-			}
-
-			Debug.log(1, "BTreeInternalPage.getKey: returning key %d", i);
-			return keys[i];
-
-		} catch (ArrayIndexOutOfBoundsException e) {
-			throw new NoSuchElementException();
-		}
-	}
-
-	/**
-	 * protected method used by the iterator to get the ith child page id out of this page
-	 * @param i - the index of the child page id
-	 * @return the ith child page id
-	 * @throws NoSuchElementException
-	 */
-	protected BTreePageId getChildId(int i) throws NoSuchElementException {
-
-		if (i < 0 || i >= children.length)
-			throw new NoSuchElementException();
-
-		try {
-			if(!isSlotUsed(i)) {
-				Debug.log(1, "BTreeInternalPage.getChildId: slot %d in %d:%d is not used", i, pid.getTableId(), pid.pageNumber());
-				return null;
-			}
-
-			Debug.log(1, "BTreeInternalPage.getChildId: returning child id %d", i);
-			return new BTreePageId(pid.getTableId(), children[i], childCategory);
-
-		} catch (ArrayIndexOutOfBoundsException e) {
-			throw new NoSuchElementException();
-		}
-	}
-}
-
-/**
- * Helper class that implements the Java Iterator for entries on a BTreeInternalPage.
- */
-class BTreeInternalPageIterator implements Iterator<BTreeEntry> {
-	int curEntry = 1;
-	BTreePageId prevChildId = null;
-	BTreeEntry nextToReturn = null;
-	BTreeInternalPage p;
-
-	public BTreeInternalPageIterator(BTreeInternalPage p) {
-		this.p = p;
-	}
-
-	public boolean hasNext() {
-		if (nextToReturn != null)
-			return true;
-
-		try {
-			if(prevChildId == null) {
-				prevChildId = p.getChildId(0);
-				if(prevChildId == null) {
-					return false;
-				}
-			}
-			while (true) {
-				int entry = curEntry++;
-				Field key = p.getKey(entry);
-				BTreePageId childId = p.getChildId(entry);
-				if(key != null && childId != null) {
-					nextToReturn = new BTreeEntry(key, prevChildId, childId);
-					nextToReturn.setRecordId(new RecordId(p.pid, entry));
-					prevChildId = childId;
-					return true;
-				}
-			}
-		} catch(NoSuchElementException e) {
-			return false;
-		}
-	}
-
-	public BTreeEntry next() {
-		BTreeEntry next = nextToReturn;
-
-		if (next == null) {
-			if (hasNext()) {
-				next = nextToReturn;
-				nextToReturn = null;
-				return next;
-			} else
-				throw new NoSuchElementException();
-		} else {
-			nextToReturn = null;
-			return next;
-		}
-	}
-
-	public void remove() {
-		throw new UnsupportedOperationException();
-	}
-}
-
-/**
- * Helper class that implements the Java Iterator for entries on a BTreeInternalPage in reverse.
- */
-class BTreeInternalPageReverseIterator implements Iterator<BTreeEntry> {
-	int curEntry;
-	BTreePageId childId = null;
-	Field key = null;
-	RecordId recordId = null;
-	BTreeEntry nextToReturn = null;
-	BTreeInternalPage p;
-
-	public BTreeInternalPageReverseIterator(BTreeInternalPage p) {
-		this.p = p;
-		this.curEntry = p.getMaxEntries();
-		while(!p.isSlotUsed(curEntry) && curEntry > 0) {
-			--curEntry;
-		}
-	}
-
-	public boolean hasNext() {
-		if (nextToReturn != null)
-			return true;
-
-		try {
-			if(childId == null || key == null || recordId == null) {
-				childId = p.getChildId(curEntry);
-				key = p.getKey(curEntry);
-				recordId = new RecordId(p.pid, curEntry);
-				if(childId == null || key == null) {
-					return false;
-				}
-			}
-			while (curEntry > 0) {
-				int entry = --curEntry;
-				BTreePageId nextChildId = p.getChildId(entry);
-				if(nextChildId != null) {
-					nextToReturn = new BTreeEntry(key, nextChildId, childId);
-					nextToReturn.setRecordId(recordId);
-					childId = nextChildId;
-					key = p.getKey(entry);
-					recordId = new RecordId(p.pid, entry);
-					return true;
-				}
-			}
-			return false;
-		} catch(NoSuchElementException e) {
-			return false;
-		}
-	}
-
-	public BTreeEntry next() {
-		BTreeEntry next = nextToReturn;
-
-		if (next == null) {
-			if (hasNext()) {
-				next = nextToReturn;
-				nextToReturn = null;
-				return next;
-			} else
-				throw new NoSuchElementException();
-		} else {
-			nextToReturn = null;
-			return next;
-		}
-	}
-
-	public void remove() {
-		throw new UnsupportedOperationException();
-	}
-}
-
diff -ruN lab3/src/java/simpledb/BTreeLeafPage.java lab4/src/java/simpledb/BTreeLeafPage.java
--- lab3/src/java/simpledb/BTreeLeafPage.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeLeafPage.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,616 +0,0 @@
-package simpledb;
-
-import java.util.*;
-import java.io.*;
-
-/**
- * Each instance of BTreeLeafPage stores data for one page of a BTreeFile and 
- * implements the Page interface that is used by BufferPool.
- *
- * @see BTreeFile
- * @see BufferPool
- *
- */
-public class BTreeLeafPage extends BTreePage {
-	private final byte header[];
-	private final Tuple tuples[];
-	private final int numSlots;
-	
-	private int leftSibling; // leaf node or 0
-	private int rightSibling; // leaf node or 0
-
-	public void checkRep(int fieldid, Field lowerBound, Field upperBound, boolean checkoccupancy, int depth) {
-		Field prev = lowerBound;
-		assert(this.getId().pgcateg() == BTreePageId.LEAF);
-
-		Iterator<Tuple> it = this.iterator();
-		while (it.hasNext()) {
-			Tuple t = it.next();
-			assert(null == prev || prev.compare(Predicate.Op.LESS_THAN_OR_EQ, t.getField(fieldid)));
-			prev = t.getField(fieldid);
-			assert(t.getRecordId().getPageId().equals(this.getId()));
-		}
-
-		if (null != upperBound && null != prev){
-			assert(prev.compare(Predicate.Op.LESS_THAN_OR_EQ, upperBound));
-		}
-
-		if (checkoccupancy && depth > 0) {
-			assert(getNumTuples() >= getMaxTuples()/2);
-		}
-	}
-
-	/**
-	 * Create a BTreeLeafPage from a set of bytes of data read from disk.
-	 * The format of a BTreeLeafPage is a set of header bytes indicating
-	 * the slots of the page that are in use, and some number of tuple slots, 
-	 * as well as some extra bytes for the parent and sibling pointers.
-	 *  Specifically, the number of tuples is equal to: <p>
-	 *          floor((BufferPool.getPageSize()*8 - extra bytes*8) / (tuple size * 8 + 1))
-	 * <p> where tuple size is the size of tuples in this
-	 * database table, which can be determined via {@link Catalog#getTupleDesc}.
-	 * The number of 8-bit header words is equal to:
-	 * <p>
-	 *      ceiling(no. tuple slots / 8)
-	 * <p>
-	 * @see Database#getCatalog
-	 * @see Catalog#getTupleDesc
-	 * @see BufferPool#getPageSize()
-	 * 
-	 * @param id - the id of this page
-	 * @param data - the raw data of this page
-	 * @param key - the field which the index is keyed on
-	 */
-	public BTreeLeafPage(BTreePageId id, byte[] data, int key) throws IOException {
-		super(id, key);
-		this.numSlots = getMaxTuples();
-		DataInputStream dis = new DataInputStream(new ByteArrayInputStream(data));
-
-		// Read the parent and sibling pointers
-		try {
-			Field f = Type.INT_TYPE.parse(dis);
-			this.parent = ((IntField) f).getValue();
-		} catch (java.text.ParseException e) {
-			e.printStackTrace();
-		}
-
-		try {
-			Field f = Type.INT_TYPE.parse(dis);
-			this.leftSibling = ((IntField) f).getValue();
-		} catch (java.text.ParseException e) {
-			e.printStackTrace();
-		}
-
-		try {
-			Field f = Type.INT_TYPE.parse(dis);
-			this.rightSibling = ((IntField) f).getValue();
-		} catch (java.text.ParseException e) {
-			e.printStackTrace();
-		}
-
-		// allocate and read the header slots of this page
-		header = new byte[getHeaderSize()];
-		for (int i=0; i<header.length; i++)
-			header[i] = dis.readByte();
-
-		tuples = new Tuple[numSlots];
-		try{
-			// allocate and read the actual records of this page
-			for (int i=0; i<tuples.length; i++)
-				tuples[i] = readNextTuple(dis,i);
-		}catch(NoSuchElementException e){
-			e.printStackTrace();
-		}
-		dis.close();
-
-		setBeforeImage();
-	}
-
-	/** 
-	 * Retrieve the maximum number of tuples this page can hold.
-	 */
-	public int getMaxTuples() {        
-		int bitsPerTupleIncludingHeader = td.getSize() * 8 + 1;
-		// extraBits are: left sibling pointer, right sibling pointer, parent pointer
-		int extraBits = 3 * INDEX_SIZE * 8; 
-		int tuplesPerPage = (BufferPool.getPageSize()*8 - extraBits) / bitsPerTupleIncludingHeader; //round down
-		return tuplesPerPage;
-	}
-
-	/**
-	 * Computes the number of bytes in the header of a page in a BTreeFile with each tuple occupying tupleSize bytes
-	 */
-	private int getHeaderSize() {        
-		int tuplesPerPage = getMaxTuples();
-		int hb = (tuplesPerPage / 8);
-		if (hb * 8 < tuplesPerPage) hb++;
-
-		return hb;
-	}
-
-	/** Return a view of this page before it was modified
-        -- used by recovery */
-	public BTreeLeafPage getBeforeImage(){
-		try {
-			byte[] oldDataRef = null;
-			synchronized(oldDataLock)
-			{
-				oldDataRef = oldData;
-			}
-			return new BTreeLeafPage(pid,oldDataRef,keyField);
-		} catch (IOException e) {
-			e.printStackTrace();
-			//should never happen -- we parsed it OK before!
-			System.exit(1);
-		}
-		return null;
-	}
-
-	public void setBeforeImage() {
-		synchronized(oldDataLock)
-		{
-			oldData = getPageData().clone();
-		}
-	}
-
-	/**
-	 * Read tuples from the source file.
-	 */
-	private Tuple readNextTuple(DataInputStream dis, int slotId) throws NoSuchElementException {
-		// if associated bit is not set, read forward to the next tuple, and
-		// return null.
-		if (!isSlotUsed(slotId)) {
-			for (int i=0; i<td.getSize(); i++) {
-				try {
-					dis.readByte();
-				} catch (IOException e) {
-					throw new NoSuchElementException("error reading empty tuple");
-				}
-			}
-			return null;
-		}
-
-		// read fields in the tuple
-		Tuple t = new Tuple(td);
-		RecordId rid = new RecordId(pid, slotId);
-		t.setRecordId(rid);
-		try {
-			for (int j=0; j<td.numFields(); j++) {
-				Field f = td.getFieldType(j).parse(dis);
-				t.setField(j, f);
-			}
-		} catch (java.text.ParseException e) {
-			e.printStackTrace();
-			throw new NoSuchElementException("parsing error!");
-		}
-
-		return t;
-	}
-
-	/**
-	 * Generates a byte array representing the contents of this page.
-	 * Used to serialize this page to disk.
-	 * <p>
-	 * The invariant here is that it should be possible to pass the byte
-	 * array generated by getPageData to the BTreeLeafPage constructor and
-	 * have it produce an identical BTreeLeafPage object.
-	 *
-	 * @see #BTreeLeafPage
-	 * @return A byte array corresponding to the bytes of this page.
-	 */
-	public byte[] getPageData() {
-		int len = BufferPool.getPageSize();
-		ByteArrayOutputStream baos = new ByteArrayOutputStream(len);
-		DataOutputStream dos = new DataOutputStream(baos);
-
-		// write out the parent and sibling pointers
-		try {
-			dos.writeInt(parent);
-
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-		try {
-			dos.writeInt(leftSibling);
-
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-		try {
-			dos.writeInt(rightSibling);
-
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		// create the header of the page
-		for (int i=0; i<header.length; i++) {
-			try {
-				dos.writeByte(header[i]);
-			} catch (IOException e) {
-				// this really shouldn't happen
-				e.printStackTrace();
-			}
-		}
-
-		// create the tuples
-		for (int i=0; i<tuples.length; i++) {
-
-			// empty slot
-			if (!isSlotUsed(i)) {
-				for (int j=0; j<td.getSize(); j++) {
-					try {
-						dos.writeByte(0);
-					} catch (IOException e) {
-						e.printStackTrace();
-					}
-
-				}
-				continue;
-			}
-
-			// non-empty slot
-			for (int j=0; j<td.numFields(); j++) {
-				Field f = tuples[i].getField(j);
-				try {
-					f.serialize(dos);
-
-				} catch (IOException e) {
-					e.printStackTrace();
-				}
-			}
-		}
-
-		// padding
-		int zerolen = BufferPool.getPageSize() - (header.length + td.getSize() * tuples.length + 3 * INDEX_SIZE); //- numSlots * td.getSize();
-		byte[] zeroes = new byte[zerolen];
-		try {
-			dos.write(zeroes, 0, zerolen);
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		try {
-			dos.flush();
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		return baos.toByteArray();
-	}
-
-	/**
-	 * Delete the specified tuple from the page;  the tuple should be updated to reflect
-	 *   that it is no longer stored on any page.
-	 * @throws DbException if this tuple is not on this page, or tuple slot is
-	 *         already empty.
-	 * @param t The tuple to delete
-	 */
-	public void deleteTuple(Tuple t) throws DbException {
-		RecordId rid = t.getRecordId();
-		if(rid == null)
-			throw new DbException("tried to delete tuple with null rid");
-		if((rid.getPageId().pageNumber() != pid.pageNumber()) || (rid.getPageId().getTableId() != pid.getTableId()))
-			throw new DbException("tried to delete tuple on invalid page or table");
-		if (!isSlotUsed(rid.tupleno()))
-			throw new DbException("tried to delete null tuple.");
-		markSlotUsed(rid.tupleno(), false);
-		t.setRecordId(null);
-	}
-
-	/**
-	 * Adds the specified tuple to the page such that all records remain in sorted order;  
-	 * the tuple should be updated to reflect
-	 *  that it is now stored on this page.
-	 * @throws DbException if the page is full (no empty slots) or tupledesc
-	 *         is mismatch.
-	 * @param t The tuple to add.
-	 */
-	public void insertTuple(Tuple t) throws DbException {
-		if (!t.getTupleDesc().equals(td))
-			throw new DbException("type mismatch, in addTuple");
-
-		// find the first empty slot 
-		int emptySlot = -1;
-		for (int i=0; i<numSlots; i++) {
-			if (!isSlotUsed(i)) {
-				emptySlot = i;
-				break;
-			}
-		}
-
-		if (emptySlot == -1)
-			throw new DbException("called addTuple on page with no empty slots.");
-
-		// find the last key less than or equal to the key being inserted
-		int lessOrEqKey = -1;
-		Field key = t.getField(keyField);
-		for (int i=0; i<numSlots; i++) {
-			if(isSlotUsed(i)) {
-				if(tuples[i].getField(keyField).compare(Predicate.Op.LESS_THAN_OR_EQ, key))
-					lessOrEqKey = i;
-				else
-					break;	
-			}
-		}
-
-		// shift records back or forward to fill empty slot and make room for new record
-		// while keeping records in sorted order
-		int goodSlot = -1;
-		if(emptySlot < lessOrEqKey) {
-			for(int i = emptySlot; i < lessOrEqKey; i++) {
-				moveRecord(i+1, i);
-			}
-			goodSlot = lessOrEqKey;
-		}
-		else {
-			for(int i = emptySlot; i > lessOrEqKey + 1; i--) {
-				moveRecord(i-1, i);
-			}
-			goodSlot = lessOrEqKey + 1;
-		}
-
-		// insert new record into the correct spot in sorted order
-		markSlotUsed(goodSlot, true);
-		Debug.log(1, "BTreeLeafPage.insertTuple: new tuple, tableId = %d pageId = %d slotId = %d", pid.getTableId(), pid.pageNumber(), goodSlot);
-		RecordId rid = new RecordId(pid, goodSlot);
-		t.setRecordId(rid);
-		tuples[goodSlot] = t;
-	}
-
-	/**
-	 * Move a record from one slot to another slot, and update the corresponding
-	 * headers and RecordId
-	 */
-	private void moveRecord(int from, int to) {
-		if(!isSlotUsed(to) && isSlotUsed(from)) {
-			markSlotUsed(to, true);
-			RecordId rid = new RecordId(pid, to);
-			tuples[to] = tuples[from];
-			tuples[to].setRecordId(rid);
-			markSlotUsed(from, false);
-		}
-	}
-
-	/**
-	 * Get the id of the left sibling of this page
-	 * @return the id of the left sibling
-	 */
-	public BTreePageId getLeftSiblingId() {
-		if(leftSibling == 0) {
-			return null;
-		}
-		return new BTreePageId(pid.getTableId(), leftSibling, BTreePageId.LEAF);
-	}
-
-	/**
-	 * Get the id of the right sibling of this page
-	 * @return the id of the right sibling
-	 */
-	public BTreePageId getRightSiblingId() {
-		if(rightSibling == 0) {
-			return null;
-		}
-		return new BTreePageId(pid.getTableId(), rightSibling, BTreePageId.LEAF);
-	}
-
-	/**
-	 * Set the left sibling id of this page
-	 * @param id - the new left sibling id
-	 * @throws DbException if the id is not valid
-	 */
-	public void setLeftSiblingId(BTreePageId id) throws DbException {
-		if(id == null) {
-			leftSibling = 0;
-		}
-		else {
-			if(id.getTableId() != pid.getTableId()) {
-				throw new DbException("table id mismatch in setLeftSiblingId");
-			}
-			if(id.pgcateg() != BTreePageId.LEAF) {
-				throw new DbException("leftSibling must be a leaf node");
-			}
-			leftSibling = id.pageNumber();
-		}
-	}
-
-	/**
-	 * Set the right sibling id of this page
-	 * @param id - the new right sibling id
-	 * @throws DbException if the id is not valid
-	 */
-	public void setRightSiblingId(BTreePageId id) throws DbException {
-		if(id == null) {
-			rightSibling = 0;
-		}
-		else {
-			if(id.getTableId() != pid.getTableId()) {
-				throw new DbException("table id mismatch in setRightSiblingId");
-			}
-			if(id.pgcateg() != BTreePageId.LEAF) {
-				throw new DbException("rightSibling must be a leaf node");
-			}
-			rightSibling = id.pageNumber();
-		}
-	}
-
-	/**
-	 * Returns the number of tuples currently stored on this page
-	 */
-	public int getNumTuples() {
-		return numSlots - getNumEmptySlots();
-	}
-
-	/**
-	 * Returns the number of empty slots on this page.
-	 */
-	public int getNumEmptySlots() {
-		int cnt = 0;
-		for(int i=0; i<numSlots; i++)
-			if(!isSlotUsed(i))
-				cnt++;
-		return cnt;
-	}
-
-	/**
-	 * Returns true if associated slot on this page is filled.
-	 */
-	public boolean isSlotUsed(int i) {
-		int headerbit = i % 8;
-		int headerbyte = (i - headerbit) / 8;
-		return (header[headerbyte] & (1 << headerbit)) != 0;
-	}
-
-	/**
-	 * Abstraction to fill or clear a slot on this page.
-	 */
-	private void markSlotUsed(int i, boolean value) {
-		int headerbit = i % 8;
-		int headerbyte = (i - headerbit) / 8;
-
-		Debug.log(1, "BTreeLeafPage.setSlot: setting slot %d to %b", i, value);
-		if(value)
-			header[headerbyte] |= 1 << headerbit;
-		else
-			header[headerbyte] &= (0xFF ^ (1 << headerbit));
-	}
-
-	/**
-	 * @return an iterator over all tuples on this page (calling remove on this iterator throws an UnsupportedOperationException)
-	 * (note that this iterator shouldn't return tuples in empty slots!)
-	 */
-	public Iterator<Tuple> iterator() {
-		return new BTreeLeafPageIterator(this);
-	}
-
-	/**
-	 * @return a reverse iterator over all tuples on this page (calling remove on this iterator throws an UnsupportedOperationException)
-	 * (note that this iterator shouldn't return tuples in empty slots!)
-	 */
-	public Iterator<Tuple> reverseIterator() {
-		return new BTreeLeafPageReverseIterator(this);
-	}
-
-	/**
-	 * protected method used by the iterator to get the ith tuple out of this page
-	 * @param i - the index of the tuple
-	 * @return the ith tuple in the page
-	 * @throws NoSuchElementException
-	 */
-	Tuple getTuple(int i) throws NoSuchElementException {
-
-		if (i >= tuples.length)
-			throw new NoSuchElementException();
-
-		try {
-			if(!isSlotUsed(i)) {
-				Debug.log(1, "BTreeLeafPage.getTuple: slot %d in %d:%d is not used", i, pid.getTableId(), pid.pageNumber());
-				return null;
-			}
-
-			Debug.log(1, "BTreeLeafPage.getTuple: returning tuple %d", i);
-			return tuples[i];
-
-		} catch (ArrayIndexOutOfBoundsException e) {
-			throw new NoSuchElementException();
-		}
-	}
-}
-
-/**
- * Helper class that implements the Java Iterator for tuples on a BTreeLeafPage.
- */
-class BTreeLeafPageIterator implements Iterator<Tuple> {
-	int curTuple = 0;
-	Tuple nextToReturn = null;
-	BTreeLeafPage p;
-
-	public BTreeLeafPageIterator(BTreeLeafPage p) {
-		this.p = p;
-	}
-
-	public boolean hasNext() {
-		if (nextToReturn != null)
-			return true;
-
-		try {
-			while (true) {
-				nextToReturn = p.getTuple(curTuple++);
-				if(nextToReturn != null)
-					return true;
-			}
-		} catch(NoSuchElementException e) {
-			return false;
-		}
-	}
-
-	public Tuple next() {
-		Tuple next = nextToReturn;
-
-		if (next == null) {
-			if (hasNext()) {
-				next = nextToReturn;
-				nextToReturn = null;
-				return next;
-			} else
-				throw new NoSuchElementException();
-		} else {
-			nextToReturn = null;
-			return next;
-		}
-	}
-
-	public void remove() {
-		throw new UnsupportedOperationException();
-	}
-}
-
-/**
- * Helper class that implements the Java Iterator for tuples on a BTreeLeafPage in reverse.
- */
-class BTreeLeafPageReverseIterator implements Iterator<Tuple> {
-	int curTuple;
-	Tuple nextToReturn = null;
-	BTreeLeafPage p;
-
-	public BTreeLeafPageReverseIterator(BTreeLeafPage p) {
-		this.p = p;
-		this.curTuple = p.getMaxTuples() - 1;
-	}
-
-	public boolean hasNext() {
-		if (nextToReturn != null)
-			return true;
-
-		try {
-			while (curTuple >= 0) {
-				nextToReturn = p.getTuple(curTuple--);
-				if(nextToReturn != null)
-					return true;
-			}
-			return false;
-		} catch(NoSuchElementException e) {
-			return false;
-		}
-	}
-
-	public Tuple next() {
-		Tuple next = nextToReturn;
-
-		if (next == null) {
-			if (hasNext()) {
-				next = nextToReturn;
-				nextToReturn = null;
-				return next;
-			} else
-				throw new NoSuchElementException();
-		} else {
-			nextToReturn = null;
-			return next;
-		}
-	}
-
-	public void remove() {
-		throw new UnsupportedOperationException();
-	}
-}
diff -ruN lab3/src/java/simpledb/BTreePage.java lab4/src/java/simpledb/BTreePage.java
--- lab3/src/java/simpledb/BTreePage.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreePage.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,145 +0,0 @@
-package simpledb;
-
-import java.util.*;
-import java.io.*;
-
-import simpledb.Predicate.Op;
-
-/**
- * Each instance of BTreeInternalPage stores data for one page of a BTreeFile and 
- * implements the Page interface that is used by BufferPool.
- *
- * @see BTreeFile
- * @see BufferPool
- *
- */
-public abstract class BTreePage implements Page {
-	protected volatile boolean dirty = false;
-	protected volatile TransactionId dirtier = null;
-
-	protected final static int INDEX_SIZE = Type.INT_TYPE.getLen();
-
-	protected final BTreePageId pid;
-	protected final TupleDesc td;
-	protected final int keyField;
-
-	protected int parent; // parent is always internal node or 0 for root node
-	protected byte[] oldData;
-	protected final Byte oldDataLock=new Byte((byte)0);
-
-	/**
-	 * Create a BTreeInternalPage from a set of bytes of data read from disk.
-	 * The format of a BTreeInternalPage is a set of header bytes indicating
-	 * the slots of the page that are in use, some number of entry slots, and extra
-	 * bytes for the parent pointer, one extra child pointer (a node with m entries 
-	 * has m+1 pointers to children), and the category of all child pages (either 
-	 * leaf or internal).
-	 *  Specifically, the number of entries is equal to: <p>
-	 *          floor((BufferPool.getPageSize()*8 - extra bytes*8) / (entry size * 8 + 1))
-	 * <p> where entry size is the size of entries in this index node
-	 * (key + child pointer), which can be determined via the key field and 
-	 * {@link Catalog#getTupleDesc}.
-	 * The number of 8-bit header words is equal to:
-	 * <p>
-	 *      ceiling((no. entry slots + 1) / 8)
-	 * <p>
-	 * @see Database#getCatalog
-	 * @see Catalog#getTupleDesc
-	 * @see BufferPool#getPageSize()
-	 * 
-	 * @param id - the id of this page
-	 * @param data - the raw data of this page
-	 * @param key - the field which the index is keyed on
-	 */
-	public BTreePage(BTreePageId id, int key) throws IOException {
-		this.pid = id;
-		this.keyField = key;
-		this.td = Database.getCatalog().getTupleDesc(id.getTableId());
-	}
-
-	/**
-	 * @return the PageId associated with this page.
-	 */
-	public BTreePageId getId() {
-		return pid;
-	}
-
-	/**
-	 * Static method to generate a byte array corresponding to an empty
-	 * BTreePage.
-	 * Used to add new, empty pages to the file. Passing the results of
-	 * this method to the BTreeInternalPage or BTreeLeafPage constructor will create a BTreePage with
-	 * no valid entries in it.
-	 *
-	 * @return The returned ByteArray.
-	 */
-	public static byte[] createEmptyPageData() {
-		int len = BufferPool.getPageSize();
-		return new byte[len]; //all 0
-	}
-
-	/**
-	 * Get the parent id of this page
-	 * @return the parent id
-	 */
-	public BTreePageId getParentId() {
-		if(parent == 0) {
-			return BTreeRootPtrPage.getId(pid.getTableId());
-		}
-		return new BTreePageId(pid.getTableId(), parent, BTreePageId.INTERNAL);
-	}
-
-	/**
-	 * Set the parent id
-	 * @param id - the id of the parent of this page
-	 * @throws DbException if the id is not valid
-	 */
-	public void setParentId(BTreePageId id) throws DbException {
-		if(id == null) {
-			throw new DbException("parent id must not be null");
-		}
-		if(id.getTableId() != pid.getTableId()) {
-			throw new DbException("table id mismatch in setParentId");
-		}
-		if(id.pgcateg() != BTreePageId.INTERNAL && id.pgcateg() != BTreePageId.ROOT_PTR) {
-			throw new DbException("parent must be an internal node or root pointer");
-		}
-		if(id.pgcateg() == BTreePageId.ROOT_PTR) {
-			parent = 0;
-		}
-		else {
-			parent = id.pageNumber();
-		}
-	}
-
-	/**
-	 * Marks this page as dirty/not dirty and record that transaction
-	 * that did the dirtying
-	 */
-	public void markDirty(boolean dirty, TransactionId tid) {
-		this.dirty = dirty;
-		if (dirty) this.dirtier = tid;
-	}
-
-	/**
-	 * Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty
-	 */
-	public TransactionId isDirty() {
-		if (this.dirty)
-			return this.dirtier;
-		else
-			return null;
-	}
-
-	/**
-	 * Returns the number of empty slots on this page.
-	 */
-	public abstract int getNumEmptySlots();
-	
-	/**
-	 * Returns true if associated slot on this page is filled.
-	 */
-	public abstract boolean isSlotUsed(int i);
-
-}
-
diff -ruN lab3/src/java/simpledb/BTreePageId.java lab4/src/java/simpledb/BTreePageId.java
--- lab3/src/java/simpledb/BTreePageId.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreePageId.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,117 +0,0 @@
-package simpledb;
-
-/** Unique identifier for BTreeInternalPage, BTreeLeafPage, BTreeHeaderPage
- *  and BTreeRootPtrPage objects. 
- */
-public class BTreePageId implements PageId {
-
-	public final static int ROOT_PTR = 0;
-	public final static int INTERNAL = 1;
-	public final static int LEAF = 2;
-	public final static int HEADER = 3;
-
-	private final int tableId;
-	private final int pgNo;
-	private int pgcateg;
-
-	static public String categToString(int categ) {
-		switch (categ) {
-			case ROOT_PTR:
-				return "ROOT_PTR";
-			case INTERNAL:
-				return "INTERNAL";
-			case LEAF:
-				return "LEAF";
-			case HEADER:
-				return "HEADER";
-			default:
-				throw new IllegalArgumentException("categ");
-		}
-	}
-
-	/**
-	 * Constructor. Create a page id structure for a specific page of a
-	 * specific table.
-	 *
-	 * @param tableId The table that is being referenced
-	 * @param pgNo The page number in that table.
-	 * @param pgcateg which kind of page it is
-	 */
-	public BTreePageId(int tableId, int pgNo, int pgcateg) {
-		this.tableId = tableId;
-		this.pgNo = pgNo;
-		this.pgcateg = pgcateg;
-	}
-
-	/** @return the table associated with this PageId */
-	public int getTableId() {
-		return tableId;
-	}
-
-	/**
-	 * @return the page number in the table getTableId() associated with
-	 *   this PageId
-	 */
-	public int pageNumber() {
-		return pgNo;
-	}
-
-	/**
-	 * @return the category of this page
-	 */
-	public int pgcateg() {
-		return pgcateg;
-	}
-
-	/**
-	 * @return a hash code for this page, represented by the concatenation of
-	 *   the table number, page number, and pgcateg (needed if a PageId is used as a
-	 *   key in a hash table in the BufferPool, for example.)
-	 * @see BufferPool
-	 */
-	public int hashCode() {
-		int code = (tableId << 16) + (pgNo << 2) + pgcateg;
-		return code;
-	}
-
-	/**
-	 * Compares one PageId to another.
-	 *
-	 * @param o The object to compare against (must be a PageId)
-	 * @return true if the objects are equal (e.g., page numbers, table
-	 *   ids and pgcateg are the same)
-	 */
-	public boolean equals(Object o) {
-		if (!(o instanceof BTreePageId))
-			return false;
-		BTreePageId p = (BTreePageId)o;
-		return tableId == p.tableId && pgNo == p.pgNo && pgcateg == p.pgcateg;
-	}
-
-	public String toString() {
-		StringBuilder sb = new StringBuilder();
-		sb.append("(tableId: ").append(tableId)
-				.append(", pgNo: ").append(pgNo)
-				.append(", pgcateg: ").append(categToString(pgcateg))
-				.append(")");
-
-		return sb.toString();
-	}
-
-	/**
-	 *  Return a representation of this object as an array of
-	 *  integers, for writing to disk.  Size of returned array must contain
-	 *  number of integers that corresponds to number of args to one of the
-	 *  constructors.
-	 */
-	public int[] serialize() {
-		int data[] = new int[3];
-
-		data[0] = tableId;
-		data[1] = pgNo;
-		data[2] = pgcateg;
-
-		return data;
-	}
-
-}
diff -ruN lab3/src/java/simpledb/BTreeRootPtrPage.java lab4/src/java/simpledb/BTreeRootPtrPage.java
--- lab3/src/java/simpledb/BTreeRootPtrPage.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeRootPtrPage.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,226 +0,0 @@
-package simpledb;
-
-import java.io.*;
-
-/**
- * BTreeRootPtrPage stores the pointer to the root node used in the B+ tree and
- * implements Page Interface that is used by BufferPool
- *
- * @see BufferPool
- */
-public class BTreeRootPtrPage implements Page {
-	// size of this page
-	public final static int PAGE_SIZE = 9;
-
-	private boolean dirty = false;
-	private TransactionId dirtier = null;
-
-	private BTreePageId pid;
-	private DataInputStream dis;
-
-	private int root; 
-	private int rootCategory;
-	private int header;
-
-	private byte[] oldData;
-
-	/**
-	 * Constructor.
-	 * Construct the BTreeRootPtrPage from a set of bytes of data read from
-	 * disk.
-	 * The format of an BTreeRootPtrPage is an integer for the page number
-	 * of the root node, followed by a byte to encode the category of the root page
-	 * (either leaf or internal), followed by an integer for the page number
-	 * of the first header page
-	 */
-	public BTreeRootPtrPage(BTreePageId id, byte[] data) throws IOException {
-		this.pid = id;
-		this.dis = new DataInputStream(new ByteArrayInputStream(data));
-
-		// read in the root pointer
-		root = dis.readInt();
-		rootCategory = (int) dis.readByte();
-
-		// read in the header pointer
-		header = dis.readInt();
-		
-		setBeforeImage();
-	}
-
-	public void setBeforeImage() {
-		oldData = getPageData().clone();
-	}
-
-	/**
-	 * @return the PageId associated with this page.
-	 */
-	public BTreePageId getId() {
-		return pid;
-	}
-
-	/**
-	 * There is only one instance of a BTreeRootPtrPage per table. This static 
-	 * method is separate from getId() in order to maintain the Page interface
-	 * @param tableid - the tableid of this table
-	 * @return the root pointer page id for the given table
-	 */
-	public static BTreePageId getId(int tableid) {
-		return new BTreePageId(tableid, 0, BTreePageId.ROOT_PTR);
-	}
-
-	/**
-	 * Generates a byte array representing the contents of this root pointer page.
-	 * Used to serialize this root pointer page to disk.
-	 * The invariant here is that it should be possible to pass the byte array
-	 * generated by getPageData to the BTreeRootPtrPage constructor and have it
-	 * produce an identical BTreeRootPtrPage object.
-	 *
-	 * @return A byte array corresponding to the bytes of this root pointer page.
-	 */
-	public byte[] getPageData(){
-		int len = PAGE_SIZE;
-		ByteArrayOutputStream baos = new ByteArrayOutputStream(len);
-		DataOutputStream dos = new DataOutputStream(baos);
-
-		// write out the root pointer (page number of the root page)
-		try{
-			dos.writeInt(root);
-		}catch(IOException e){
-			e.printStackTrace();
-		}
-
-		// write out the category of the root page (leaf or internal)
-		try{
-			dos.writeByte((byte) rootCategory);
-		}catch(IOException e){
-			e.printStackTrace();
-		}
-
-		// write out the header pointer (page number of the first header page)
-		try{
-			dos.writeInt(header);
-		}catch(IOException e){
-			e.printStackTrace();
-		}
-
-		try {
-			dos.flush();
-		}catch(IOException e) {
-			e.printStackTrace();
-		}
-
-		return baos.toByteArray();
-	}
-
-	/**
-	 * Static method to generate a byte array corresponding to an empty
-	 * BTreeRootPtrPage.
-	 * Used to add new, empty pages to the file. Passing the results of
-	 * this method to the BTreeRootPtrPage constructor will create a BTreeRootPtrPage with
-	 * no valid entries in it.
-	 *
-	 * @return The returned ByteArray.
-	 */
-	public static byte[] createEmptyPageData() {
-		int len = PAGE_SIZE;
-		return new byte[len]; //all 0
-	}
-
-	public void markDirty(boolean dirty, TransactionId tid){
-		this.dirty = dirty;
-		if (dirty) this.dirtier = tid;
-	}
-
-	public TransactionId isDirty() {
-		if (this.dirty)
-			return this.dirtier;
-		else
-			return null;
-	}
-
-	/** Return a view of this page before it was modified
-        -- used by recovery */
-	public BTreeRootPtrPage getBeforeImage(){
-		try {
-			return new BTreeRootPtrPage(pid,oldData);
-		} catch (IOException e) {
-			e.printStackTrace();
-			//should never happen -- we parsed it OK before!
-			System.exit(1);
-		}
-		return null;
-	}
-
-	/**
-	 * Get the id of the root page in this B+ tree
-	 * @return the id of the root page
-	 */
-	public BTreePageId getRootId() {
-		if(root == 0) {
-			return null;
-		}
-		return new BTreePageId(pid.getTableId(), root, rootCategory);
-	}
-
-	/**
-	 * Set the id of the root page in this B+ tree
-	 * @param id - the id of the root page
-	 * @throws DbException if the id is invalid
-	 */
-	public void setRootId(BTreePageId id) throws DbException {
-		if(id == null) {
-			root = 0;
-		}
-		else {
-			if(id.getTableId() != pid.getTableId()) {
-				throw new DbException("table id mismatch in setRootId");
-			}
-			if(id.pgcateg() != BTreePageId.INTERNAL && id.pgcateg() != BTreePageId.LEAF) {
-				throw new DbException("root must be an internal node or leaf node");
-			}
-			root = id.pageNumber();
-			rootCategory = id.pgcateg();
-		}
-	}
-
-	/**
-	 * Get the id of the first header page, or null if none exists
-	 * @return the id of the first header page
-	 */
-	public BTreePageId getHeaderId() {
-		if(header == 0) {
-			return null;
-		}
-		return new BTreePageId(pid.getTableId(), header, BTreePageId.HEADER);
-	}
-
-	/**
-	 * Set the page id of the first header page
-	 * @param id - the id of the first header page
-	 * @throws DbException if the id is invalid
-	 */
-	public void setHeaderId(BTreePageId id) throws DbException {
-		if(id == null) {
-			header = 0;
-		}
-		else {
-			if(id.getTableId() != pid.getTableId()) {
-				throw new DbException("table id mismatch in setHeaderId");
-			}
-			if(id.pgcateg() != BTreePageId.HEADER) {
-				throw new DbException("header must be of type BTreePageId.HEADER");
-			}
-			header = id.pageNumber();
-		}
-	}
-
-	/**
-	 * Get the page size of root pointer pages
-	 * @return the page size
-	 */
-	public static int getPageSize() {
-		return PAGE_SIZE;
-	}
-
-}
-
diff -ruN lab3/src/java/simpledb/BTreeScan.java lab4/src/java/simpledb/BTreeScan.java
--- lab3/src/java/simpledb/BTreeScan.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeScan.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,147 +0,0 @@
-package simpledb;
-
-import java.util.*;
-
-/**
- * BTreeScan is an operator which reads tuples in sorted order 
- * according to a predicate
- */
-public class BTreeScan implements DbIterator {
-
-	private static final long serialVersionUID = 1L;
-
-	private boolean isOpen = false;
-	private TransactionId tid;
-	private TupleDesc myTd;
-	private IndexPredicate ipred = null;
-	private transient DbFileIterator it;
-	private String tablename;
-	private String alias;
-
-	/**
-	 * Creates a B+ tree scan over the specified table as a part of the
-	 * specified transaction.
-	 * 
-	 * @param tid
-	 *            The transaction this scan is running as a part of.
-	 * @param tableid
-	 *            the table to scan.
-	 * @param tableAlias
-	 *            the alias of this table (needed by the parser); the returned
-	 *            tupleDesc should have fields with name tableAlias.fieldName
-	 *            (note: this class is not responsible for handling a case where
-	 *            tableAlias or fieldName are null. It shouldn't crash if they
-	 *            are, but the resulting name can be null.fieldName,
-	 *            tableAlias.null, or null.null).
-	 * @param ipred
-	 * 			  The index predicate to match. If null, the scan will return all tuples
-	 *            in sorted order
-	 */
-	public BTreeScan(TransactionId tid, int tableid, String tableAlias, IndexPredicate ipred) {
-		this.tid = tid;
-		this.ipred = ipred;
-		reset(tableid,tableAlias);
-	}
-
-	/**
-	 * @return
-	 *       return the table name of the table the operator scans. This should
-	 *       be the actual name of the table in the catalog of the database
-	 * */
-	public String getTableName() {
-		return this.tablename;
-	}
-
-	/**
-	 * @return Return the alias of the table this operator scans. 
-	 * */
-	public String getAlias()
-	{
-		return this.alias;
-	}
-
-	/**
-	 * Reset the tableid, and tableAlias of this operator.
-	 * @param tableid
-	 *            the table to scan.
-	 * @param tableAlias
-	 *            the alias of this table (needed by the parser); the returned
-	 *            tupleDesc should have fields with name tableAlias.fieldName
-	 *            (note: this class is not responsible for handling a case where
-	 *            tableAlias or fieldName are null. It shouldn't crash if they
-	 *            are, but the resulting name can be null.fieldName,
-	 *            tableAlias.null, or null.null).
-	 */
-	public void reset(int tableid, String tableAlias) {
-		this.isOpen=false;
-		this.alias = tableAlias;
-		this.tablename = Database.getCatalog().getTableName(tableid);
-		if(ipred == null) {
-			this.it = Database.getCatalog().getDatabaseFile(tableid).iterator(tid);
-		}
-		else {
-			this.it = ((BTreeFile) Database.getCatalog().getDatabaseFile(tableid)).indexIterator(tid, ipred);
-		}
-		myTd = Database.getCatalog().getTupleDesc(tableid);
-		String[] newNames = new String[myTd.numFields()];
-		Type[] newTypes = new Type[myTd.numFields()];
-		for (int i = 0; i < myTd.numFields(); i++) {
-			String name = myTd.getFieldName(i);
-			Type t = myTd.getFieldType(i);
-
-			newNames[i] = tableAlias + "." + name;
-			newTypes[i] = t;
-		}
-		myTd = new TupleDesc(newTypes, newNames);
-	}
-
-	public BTreeScan(TransactionId tid, int tableid, IndexPredicate ipred) {
-		this(tid, tableid, Database.getCatalog().getTableName(tableid), ipred);
-	}
-
-	public void open() throws DbException, TransactionAbortedException {
-		if (isOpen)
-			throw new DbException("double open on one DbIterator.");
-
-		it.open();
-		isOpen = true;
-	}
-
-	/**
-	 * Returns the TupleDesc with field names from the underlying BTreeFile,
-	 * prefixed with the tableAlias string from the constructor. This prefix
-	 * becomes useful when joining tables containing a field(s) with the same
-	 * name.
-	 * 
-	 * @return the TupleDesc with field names from the underlying BTreeFile,
-	 *         prefixed with the tableAlias string from the constructor.
-	 */
-	public TupleDesc getTupleDesc() {
-		return myTd;
-	}
-
-	public boolean hasNext() throws TransactionAbortedException, DbException {
-		if (!isOpen)
-			throw new IllegalStateException("iterator is closed");
-		return it.hasNext();
-	}
-
-	public Tuple next() throws NoSuchElementException,
-	TransactionAbortedException, DbException {
-		if (!isOpen)
-			throw new IllegalStateException("iterator is closed");
-
-		return it.next();
-	}
-
-	public void close() {
-		it.close();
-		isOpen = false;
-	}
-
-	public void rewind() throws DbException, NoSuchElementException,
-	TransactionAbortedException {
-		close();
-		open();
-	}
-}
diff -ruN lab3/src/java/simpledb/BTreeUtility.java lab4/src/java/simpledb/BTreeUtility.java
--- lab3/src/java/simpledb/BTreeUtility.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BTreeUtility.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,848 +0,0 @@
-package simpledb;
-
-import java.io.BufferedOutputStream;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.Map;
-import java.util.Random;
-import java.util.UUID;
-import java.util.concurrent.BlockingQueue;
-
-import simpledb.Predicate.Op;
-
-/** Helper methods used for testing and implementing random features. */
-public class BTreeUtility {
-
-	public static final int MAX_RAND_VALUE = 1 << 16;
-
-	public static ArrayList<Integer> tupleToList(Tuple tuple) {
-        ArrayList<Integer> list = new ArrayList<Integer>();
-        for (int i = 0; i < tuple.getTupleDesc().numFields(); ++i) {
-            int value = ((IntField)tuple.getField(i)).getValue();
-            list.add(value);
-        }
-        return list;
-    }
-	
-	/**
-	 * @return a Tuple with a single IntField with value n and with
-	 *   RecordId(BTreePageId(1,2, BTreePageId.LEAF), 3)
-	 */
-	public static Tuple getBTreeTuple(int n) {
-		Tuple tup = new Tuple(Utility.getTupleDesc(1));
-		tup.setRecordId(new RecordId(new BTreePageId(1, 2, BTreePageId.LEAF), 3));
-		tup.setField(0, new IntField(n));
-		return tup;
-	}
-
-	/**
-	 * @return a Tuple with an IntField for every element of tupdata
-	 *   and RecordId(BTreePageId(1, 2, BTreePageId.LEAF), 3)
-	 */
-	public static Tuple getBTreeTuple(int[] tupdata) {
-		Tuple tup = new Tuple(Utility.getTupleDesc(tupdata.length));
-		tup.setRecordId(new RecordId(new BTreePageId(1, 2, BTreePageId.LEAF), 3));
-		for (int i = 0; i < tupdata.length; ++i)
-			tup.setField(i, new IntField(tupdata[i]));
-		return tup;
-	}
-	
-	/**
-	 * @return a Tuple with an IntField for every element of tupdata
-	 *   and RecordId(BTreePageId(1, 2, BTreePageId.LEAF), 3)
-	 */
-	public static Tuple getBTreeTuple(ArrayList<Integer> tupdata) {
-		Tuple tup = new Tuple(Utility.getTupleDesc(tupdata.size()));
-		tup.setRecordId(new RecordId(new BTreePageId(1, 2, BTreePageId.LEAF), 3));
-		for (int i = 0; i < tupdata.size(); ++i)
-			tup.setField(i, new IntField(tupdata.get(i)));
-		return tup;
-	}
-
-	/**
-	 * @return a Tuple with a 'width' IntFields each with value n and
-	 *   with RecordId(BTreePageId(1, 2, BTreePageId.LEAF), 3)
-	 */
-	public static Tuple getBTreeTuple(int n, int width) {
-		Tuple tup = new Tuple(Utility.getTupleDesc(width));
-		tup.setRecordId(new RecordId(new BTreePageId(1, 2, BTreePageId.LEAF), 3));
-		for (int i = 0; i < width; ++i)
-			tup.setField(i, new IntField(n));
-		return tup;
-	}
-
-	/**
-	 * @return a BTreeEntry with an IntField with value n and with
-	 *   RecordId(BTreePageId(1,2, BTreePageId.INTERNAL), 3)
-	 */
-	public static BTreeEntry getBTreeEntry(int n) {
-		BTreePageId leftChild = new BTreePageId(1, n, BTreePageId.LEAF);
-		BTreePageId rightChild = new BTreePageId(1, n+1, BTreePageId.LEAF);
-		BTreeEntry e = new BTreeEntry(new IntField(n), leftChild, rightChild);
-		e.setRecordId(new RecordId(new BTreePageId(1, 2, BTreePageId.INTERNAL), 3));
-		return e;
-	}
-
-	/**
-	 * @return a BTreeEntry with an IntField with value n and with
-	 *   RecordId(BTreePageId(tableid,2, BTreePageId.INTERNAL), 3)
-	 */
-	public static BTreeEntry getBTreeEntry(int n, int tableid) {
-		BTreePageId leftChild = new BTreePageId(tableid, n, BTreePageId.LEAF);
-		BTreePageId rightChild = new BTreePageId(tableid, n+1, BTreePageId.LEAF);
-		BTreeEntry e = new BTreeEntry(new IntField(n), leftChild, rightChild);
-		e.setRecordId(new RecordId(new BTreePageId(tableid, 2, BTreePageId.INTERNAL), 3));
-		return e;
-	}
-
-	/**
-	 * @return a BTreeEntry with an IntField with value key and with
-	 *   RecordId(BTreePageId(tableid,2, BTreePageId.INTERNAL), 3)
-	 */
-	public static BTreeEntry getBTreeEntry(int n, int key, int tableid) {
-		BTreePageId leftChild = new BTreePageId(tableid, n, BTreePageId.LEAF);
-		BTreePageId rightChild = new BTreePageId(tableid, n+1, BTreePageId.LEAF);
-		BTreeEntry e = new BTreeEntry(new IntField(key), leftChild, rightChild);
-		e.setRecordId(new RecordId(new BTreePageId(tableid, 2, BTreePageId.INTERNAL), 3));
-		return e;
-	}
-
-	/** @param columnSpecification Mapping between column index and value. */
-	public static BTreeFile createRandomBTreeFile(
-			int columns, int rows, Map<Integer, Integer> columnSpecification,
-			ArrayList<ArrayList<Integer>> tuples, int keyField)
-					throws IOException, DbException, TransactionAbortedException {
-		return createRandomBTreeFile(columns, rows, MAX_RAND_VALUE, columnSpecification, tuples, keyField);
-	}
-
-	/**
-	 * Generates a random B+ tree file for testing
-	 * @param columns - number of columns
-	 * @param rows - number of rows
-	 * @param maxValue - the maximum random value in this B+ tree
-	 * @param columnSpecification - optional column specification
-	 * @param tuples - optional list of tuples to return
-	 * @param keyField - the index of the key field
-	 * @return a BTreeFile
-	 * @throws IOException
-	 * @throws DbException
-	 * @throws TransactionAbortedException
-	 */
-	public static BTreeFile createRandomBTreeFile(int columns, int rows,
-			int maxValue, Map<Integer, Integer> columnSpecification,
-			ArrayList<ArrayList<Integer>> tuples, int keyField) 
-					throws IOException, DbException, TransactionAbortedException {
-
-		if (tuples != null) {
-			tuples.clear();
-		} else {
-			tuples = new ArrayList<ArrayList<Integer>>(rows);
-		}
-
-		generateRandomTuples(columns, rows, maxValue, columnSpecification, tuples);
-		
-		// Convert the tuples list to a B+ tree file
-		File hFile = File.createTempFile("table", ".dat");
-		hFile.deleteOnExit();
-
-		File bFile = File.createTempFile("table_index", ".dat");
-		bFile.deleteOnExit();
-
-		Type[] typeAr = new Type[columns];
-		Arrays.fill(typeAr, Type.INT_TYPE);
-		return BTreeFileEncoder.convert(tuples, hFile, bFile, BufferPool.getPageSize(),
-				columns, typeAr, ',', keyField) ;
-	}
-	
-	/**
-	 * Generate a random set of tuples for testing
-	 * @param columns - number of columns
-	 * @param rows - number of rows
-	 * @param maxValue - the maximum random value in this B+ tree
-	 * @param columnSpecification - optional column specification
-	 * @param tuples - list of tuples to return
-	 */
-	public static void generateRandomTuples(int columns, int rows,
-			int maxValue, Map<Integer, Integer> columnSpecification,
-			ArrayList<ArrayList<Integer>> tuples) {
-		generateRandomTuples(columns, rows, 0, maxValue, columnSpecification, tuples);
-	}
-	
-	/**
-	 * Generate a random set of tuples for testing
-	 * @param columns - number of columns
-	 * @param rows - number of rows
-	 * @param minValue - the minimum random value in this B+ tree
-	 * @param maxValue - the maximum random value in this B+ tree
-	 * @param columnSpecification - optional column specification
-	 * @param tuples - list of tuples to return
-	 */
-	public static void generateRandomTuples(int columns, int rows,
-			int minValue, int maxValue, Map<Integer, Integer> columnSpecification,
-			ArrayList<ArrayList<Integer>> tuples) {
-
-		Random r = new Random();
-
-		// Fill the tuples list with generated values
-		for (int i = 0; i < rows; ++i) {
-			ArrayList<Integer> tuple = new ArrayList<Integer>(columns);
-			for (int j = 0; j < columns; ++j) {
-				// Generate random values, or use the column specification
-				Integer columnValue = null;
-				if (columnSpecification != null) columnValue = columnSpecification.get(j);
-				if (columnValue == null) {
-					columnValue = r.nextInt(maxValue-minValue) + minValue;
-				}
-				tuple.add(columnValue);
-			}
-			tuples.add(tuple);
-		}
-	}
-	
-	/**
-	 * Generate a random set of entries for testing
-	 * @param numKeys - number of keys
-	 * @param minKey - the minimum key value
-	 * @param maxKey - the maximum key value
-	 * @param minChildPtr - the first child pointer
-	 * @param childPointers - list of child pointers to return
-	 * @param keys - list of keys to return
-	 */
-	public static void generateRandomEntries(int numKeys, int minKey, int maxKey, int minChildPtr,
-			ArrayList<Integer> childPointers, ArrayList<Integer> keys) {
-
-		Random r = new Random();
-
-		// Fill the keys and childPointers lists with generated values
-		int child = minChildPtr;
-		for (int i = 0; i < numKeys; ++i) {
-			keys.add(r.nextInt(maxKey-minKey) + minKey);
-			childPointers.add(child);
-			++child;
-		}
-		
-		// one extra child pointer
-		childPointers.add(child);
-	}
-	
-	/**
-	 * Generate a random set of tuples for testing
-	 * @param columns - number of columns
-	 * @param rows - number of rows
-	 * @param min - the minimum value
-	 * @param max - the maximum value
-	 * @return the list of tuples
-	 */
-	public static ArrayList<Tuple> generateRandomTuples(int columns, int rows, int min, int max) {
-		ArrayList<ArrayList<Integer>> tuples = new ArrayList<ArrayList<Integer>>(rows);
-		generateRandomTuples(columns, rows, min, max, null, tuples);
-		ArrayList<Tuple> tupleList = new ArrayList<Tuple>();
-		for(ArrayList<Integer> tup : tuples) {
-			tupleList.add(getBTreeTuple(tup));	
-		}
-		return tupleList;
-	}
-	
-	/**
-	 * Generate a random set of entries for testing
-	 * @param numKeys - the number of keys
-	 * @param tableid - the tableid
-	 * @param childPageCategory - the child page category (LEAF or INTERNAL)
-	 * @param minKey - the minimum key value
-	 * @param maxKey - the maximum key value
-	 * @param minChildPtr - the first child pointer
-	 * @return the list of entries
-	 */
-	public static ArrayList<BTreeEntry> generateRandomEntries(int numKeys, int tableid, int childPageCategory, int minKey, int maxKey, int minChildPtr) {
-		ArrayList<Integer> keys = new ArrayList<Integer>(numKeys);
-		ArrayList<Integer> childPointers = new ArrayList<Integer>(numKeys+1);
-		generateRandomEntries(numKeys, minKey, maxKey, minChildPtr, childPointers, keys);
-		Collections.sort(keys);
-		ArrayList<BTreeEntry> entryList = new ArrayList<BTreeEntry>();
-		for(int i = 0; i < numKeys; ++i) {
-			entryList.add(new BTreeEntry(new IntField(keys.get(i)), 
-					new BTreePageId(tableid, childPointers.get(i), childPageCategory), 
-					new BTreePageId(tableid, childPointers.get(i+1), childPageCategory)));
-		}
-		return entryList;
-	}
-	
-	/**
-	 * Get the number of tuples that can fit on a page with the specified number of integer fields
-	 * @param columns - the number of columns
-	 * @return the number of tuples per page
-	 */
-	public static int getNumTuplesPerPage(int columns) {
-		int bytesPerTuple = Type.INT_TYPE.getLen() * columns * 8;
-		int tuplesPerPage = (BufferPool.getPageSize() * 8 - 3 * BTreeLeafPage.INDEX_SIZE * 8) /  (bytesPerTuple + 1);
-		return tuplesPerPage;
-	}
-	
-	/**
-	 * Create a random leaf page for testing
-	 * @param pid - the page id of the leaf page
-	 * @param columns - the number of fields per tuple
-	 * @param keyField - the index of the key field in each tuple
-	 * @param min - the minimum value
-	 * @param max - the maximum value
-	 * @return the leaf page
-	 * @throws IOException
-	 */
-	public static BTreeLeafPage createRandomLeafPage(BTreePageId pid, int columns, int keyField, int min, int max) throws IOException {
-		int tuplesPerPage = getNumTuplesPerPage(columns);
-		return createRandomLeafPage(pid, columns, keyField, tuplesPerPage, min, max);
-	}
-	
-	/**
-	 * Create a random leaf page for testing
-	 * @param pid - the page id of the leaf page
-	 * @param columns - the number of fields per tuple
-	 * @param keyField - the index of the key field in each tuple
-	 * @param numTuples - the number of tuples to insert
-	 * @param min - the minimum value
-	 * @param max - the maximum value
-	 * @return the leaf page
-	 * @throws IOException
-	 */
-	public static BTreeLeafPage createRandomLeafPage(BTreePageId pid, int columns, int keyField, int numTuples, int min, int max) throws IOException {
-		Type[] typeAr = new Type[columns];
-		Arrays.fill(typeAr, Type.INT_TYPE);
-		byte[] data = BTreeFileEncoder.convertToLeafPage(BTreeUtility.generateRandomTuples(columns, numTuples, min, max), 
-				BufferPool.getPageSize(), columns, typeAr, keyField);
-		BTreeLeafPage page = new BTreeLeafPage(pid, data, keyField);
-		return page;
-	}
-
-	/**
-	 * The number of entries that can fit on a page with integer key fields
-	 * @return the number of entries per page
-	 */
-	public static int getNumEntriesPerPage() {
-		int nentrybytes = Type.INT_TYPE.getLen() + BTreeInternalPage.INDEX_SIZE;
-		// pointerbytes: one extra child pointer, parent pointer, child page category
-		int internalpointerbytes = 2 * BTreeLeafPage.INDEX_SIZE + 1; 
-		int entriesPerPage = (BufferPool.getPageSize() * 8 - internalpointerbytes * 8 - 1) /  (nentrybytes * 8 + 1);  //floor comes for free
-		return entriesPerPage;
-	}
-	
-	/**
-	 * Create a random internal page for testing
-	 * @param pid - the page id of the internal page
-	 * @param keyField - the index of the key field in each tuple
-	 * @param childPageCategory - the child page category (LEAF or INTERNAL)
-	 * @param minKey - the minimum key value
-	 * @param maxKey - the maximum key value
-	 * @param minChildPtr - the first child pointer
-	 * @return the internal page
-	 * @throws IOException
-	 */
-	public static BTreeInternalPage createRandomInternalPage(BTreePageId pid, int keyField, int childPageCategory, int minKey, int maxKey, int minChildPtr) throws IOException {
-		int entriesPerPage = getNumEntriesPerPage();
-		return createRandomInternalPage(pid, keyField, childPageCategory, entriesPerPage, minKey, maxKey, minChildPtr);
-	}
-	
-	/**
-	 * Create a random internal page for testing
-	 * @param pid - the page id of the internal page
-	 * @param keyField - the index of the key field in each tuple
-	 * @param childPageCategory - the child page category (LEAF or INTERNAL)
-	 * @param numKeys - the number of keys to insert
-	 * @param minKey - the minimum key value
-	 * @param maxKey - the maximum key value
-	 * @param minChildPtr - the first child pointer
-	 * @return the internal page
-	 * @throws IOException
-	 */
-	public static BTreeInternalPage createRandomInternalPage(BTreePageId pid, int keyField, int childPageCategory, int numKeys, int minKey, int maxKey, int minChildPtr) throws IOException {
-		byte[] data = BTreeFileEncoder.convertToInternalPage(BTreeUtility.generateRandomEntries(numKeys, pid.getTableId(), childPageCategory, minKey, maxKey, minChildPtr), 
-				BufferPool.getPageSize(), Type.INT_TYPE, childPageCategory);
-		BTreeInternalPage page = new BTreeInternalPage(pid, data, keyField);
-		return page;
-	}
-
-	/**
-	 * creates a *non* random B+ tree file for testing
-	 * @param columns - number of columns
-	 * @param rows - number of rows
-	 * @param columnSpecification - optional column specification
-	 * @param tuples - optional list of tuples to return
-	 * @param keyField - the index of the key field
-	 * @return a BTreeFile
-	 * @throws IOException
-	 * @throws DbException
-	 * @throws TransactionAbortedException
-	 */
-	public static BTreeFile createBTreeFile(int columns, int rows,
-			Map<Integer, Integer> columnSpecification,
-			ArrayList<ArrayList<Integer>> tuples, int keyField) 
-					throws IOException, DbException, TransactionAbortedException {
-		if (tuples != null) {
-			tuples.clear();
-		} else {
-			tuples = new ArrayList<ArrayList<Integer>>(rows);
-		}
-
-		// Fill the tuples list with generated values
-		for (int i = 0; i < rows; ++i) {
-			ArrayList<Integer> tuple = new ArrayList<Integer>(columns);
-			for (int j = 0; j < columns; ++j) {
-				// Generate values, or use the column specification
-				Integer columnValue = null;
-				if (columnSpecification != null) columnValue = columnSpecification.get(j);
-				if (columnValue == null) {
-					columnValue = (i+1)*(j+1);
-				}
-				tuple.add(columnValue);
-			}
-			tuples.add(tuple);
-		}
-
-		// Convert the tuples list to a B+ tree file
-		File hFile = File.createTempFile("table", ".dat");
-		hFile.deleteOnExit();
-
-		File bFile = File.createTempFile("table_index", ".dat");
-		bFile.deleteOnExit();
-
-		Type[] typeAr = new Type[columns];
-		Arrays.fill(typeAr, Type.INT_TYPE);
-		return BTreeFileEncoder.convert(tuples, hFile, bFile, BufferPool.getPageSize(),
-				columns, typeAr, ',', keyField) ;
-	}
-
-	/** Opens a BTreeFile and adds it to the catalog.
-	 *
-	 * @param cols number of columns in the table.
-	 * @param f location of the file storing the table.
-	 * @param keyField the field the B+ tree is keyed on
-	 * @return the opened table.
-	 */
-	public static BTreeFile openBTreeFile(int cols, File f, int keyField) {
-		// create the BTreeFile and add it to the catalog
-		TupleDesc td = Utility.getTupleDesc(cols);
-		BTreeFile bf = new BTreeFile(f, keyField, td);
-		Database.getCatalog().addTable(bf, UUID.randomUUID().toString());
-		return bf;
-	}
-
-	public static BTreeFile openBTreeFile(int cols, String colPrefix, File f, int keyField) {
-		// create the BTreeFile and add it to the catalog
-		TupleDesc td = Utility.getTupleDesc(cols, colPrefix);
-		BTreeFile bf = new BTreeFile(f, keyField, td);
-		Database.getCatalog().addTable(bf, UUID.randomUUID().toString());
-		return bf;
-	}
-
-	/**
-	 * A utility method to create a new BTreeFile with no data,
-	 * assuming the path does not already exist. If the path exists, the file
-	 * will be overwritten. The new table will be added to the Catalog with
-	 * the specified number of columns as IntFields indexed on the keyField.
-	 */
-	public static BTreeFile createEmptyBTreeFile(String path, int cols, int keyField)
-			throws IOException {
-		File f = new File(path);
-		// touch the file
-		FileOutputStream fos = new FileOutputStream(f);
-		fos.write(new byte[0]);
-		fos.close();
-
-		BTreeFile bf = openBTreeFile(cols, f, keyField);
-
-		return bf;
-	}
-
-	/**
-	 * A utility method to create a new BTreeFile with no data, with the specified
-	 * number of pages, assuming the path does not already exist. If the path exists, 
-	 * the file will be overwritten. The new table will be added to the Catalog with
-	 * the specified number of columns as IntFields indexed on the keyField.
-	 */
-	public static BTreeFile createEmptyBTreeFile(String path, int cols, int keyField, int pages)
-			throws IOException {
-		File f = new File(path);
-		BufferedOutputStream bw = new BufferedOutputStream(
-				new FileOutputStream(f, true));
-		byte[] emptyRootPtrData = BTreeRootPtrPage.createEmptyPageData();
-		byte[] emptyPageData = BTreePage.createEmptyPageData();
-		bw.write(emptyRootPtrData);
-		for(int i = 0; i < pages; ++i) {
-			bw.write(emptyPageData);
-		}
-		bw.close();
-
-		BTreeFile bf = openBTreeFile(cols, f, keyField);
-
-		return bf;
-	}
-
-	/**
-	 * Helper class that attempts to insert a tuple in a new thread
-	 *
-	 * @return a handle to the Thread that will attempt insertion after it
-	 *   has been started
-	 */
-	static class BTreeWriter extends Thread {
-
-		TransactionId tid;
-		BTreeFile bf;
-		int item;
-		int count;
-		boolean success;
-		Exception error;
-		Object slock;
-		Object elock;
-
-		/**
-		 * @param tid the transaction on whose behalf we want to insert the tuple
-		 * @param bf the B+ tree file into which we want to insert the tuple
-		 * @param item the key of the tuple to insert
-		 * @param count the number of times to insert the tuple
-		 */
-		public BTreeWriter(TransactionId tid, BTreeFile bf, int item, int count) {
-			this.tid = tid;
-			this.bf = bf;
-			this.item = item;
-			this.count = count;
-			this.success = false;
-			this.error = null;
-			this.slock = new Object();
-			this.elock = new Object();
-		}
-
-		public void run() {
-			try {
-				int c = 0;
-				while(c < count) {
-					Tuple t = BTreeUtility.getBTreeTuple(item, 2);
-					Database.getBufferPool().insertTuple(tid, bf.getId(), t);
-
-					IndexPredicate ipred = new IndexPredicate(Op.EQUALS, t.getField(bf.keyField()));
-					DbFileIterator it = bf.indexIterator(tid, ipred);
-					it.open();
-					c = 0;
-					while(it.hasNext()) {
-						it.next();
-						c++;
-					}
-					it.close();
-				}
-				synchronized(slock) {
-					success = true;
-				}
-			} catch (Exception e) {
-				e.printStackTrace();
-				synchronized(elock) {
-					error = e;
-				}
-
-				try {
-					Database.getBufferPool().transactionComplete(tid, false);
-				} catch (java.io.IOException e2) {
-					e2.printStackTrace();
-				}
-			}
-		}
-
-		/**
-		 * @return true if we successfully inserted the tuple
-		 */
-		 public boolean succeeded() {
-			 synchronized(slock) {
-				 return success;
-			 }
-		 }
-
-		/**
-		 * @return an Exception instance if one occurred while inserting the tuple;
-		 *   null otherwise
-		 */
-		 public Exception getError() {
-			 synchronized(elock) {
-				 return error;
-			 }
-		 }
-	}
-
-	/**
-	 * Helper class that searches for tuple(s) in a new thread
-	 *
-	 * @return a handle to the Thread that will attempt to search for tuple(s) after it
-	 *   has been started
-	 */
-	static class BTreeReader extends Thread {
-
-		TransactionId tid;
-		BTreeFile bf;
-		Field f;
-		int count;
-		boolean found;
-		Exception error;
-		Object slock;
-		Object elock;
-
-		/**
-		 * @param tid the transaction on whose behalf we want to search for the tuple(s)
-		 * @param bf the B+ tree file containing the tuple(s)
-		 * @param f the field to search for
-		 * @param count the number of tuples to search for
-		 */
-		public BTreeReader(TransactionId tid, BTreeFile bf, Field f, int count) {
-			this.tid = tid;
-			this.bf = bf;
-			this.f = f;
-			this.count = count;
-			this.found = false;
-			this.error = null;
-			this.slock = new Object();
-			this.elock = new Object();
-		}
-
-		public void run() {
-			try {
-				while(true) {
-					IndexPredicate ipred = new IndexPredicate(Op.EQUALS, f);
-					DbFileIterator it = bf.indexIterator(tid, ipred);
-					it.open();
-					int c = 0;
-					while(it.hasNext()) {
-						it.next();
-						c++;
-					}
-					it.close();
-					if(c >= count) {
-						synchronized(slock) {
-							found = true;
-						}
-					}
-				}
-
-			} catch (Exception e) {
-				e.printStackTrace();
-				synchronized(elock) {
-					error = e;
-				}
-
-				try {
-					Database.getBufferPool().transactionComplete(tid, false);
-				} catch (java.io.IOException e2) {
-					e2.printStackTrace();
-				}
-			}
-		}
-
-		/**
-		 * @return true if we successfully found the tuple(s)
-		 */
-		 public boolean found() {
-			 synchronized(slock) {
-				 return found;
-			 }
-		 }
-
-		/**
-		 * @return an Exception instance if one occurred while searching for the tuple(s);
-		 *   null otherwise
-		 */
-		 public Exception getError() {
-			 synchronized(elock) {
-				 return error;
-			 }
-		 }
-	}
-	
-	/**
-	 * Helper class that attempts to insert a tuple in a new thread
-	 *
-	 * @return a handle to the Thread that will attempt insertion after it
-	 *   has been started
-	 */
-	public static class BTreeInserter extends Thread {
-
-		TransactionId tid;
-		BTreeFile bf;
-		int[] tupdata;
-		BlockingQueue<ArrayList<Integer>> insertedTuples;
-		boolean success;
-		Exception error;
-		Object slock;
-		Object elock;
-
-		/**
-		 * @param bf the B+ tree file into which we want to insert the tuple
-		 * @param tupdata the data of the tuple to insert
-		 * @param the list of tuples that were successfully inserted
-		 */
-		public BTreeInserter(BTreeFile bf, int[] tupdata, BlockingQueue<ArrayList<Integer>> insertedTuples) {
-			init(bf, tupdata, insertedTuples);
-		}
-
-		public void run() {
-			try {
-				Tuple t = BTreeUtility.getBTreeTuple(tupdata);
-				Database.getBufferPool().insertTuple(tid, bf.getId(), t);
-				Database.getBufferPool().transactionComplete(tid);
-				ArrayList<Integer> tuple = tupleToList(t);
-				insertedTuples.put(tuple);
-				synchronized(slock) {
-					success = true;
-				}
-			} catch (Exception e) {
-				if(!(e instanceof TransactionAbortedException)) {
-					e.printStackTrace();
-				}
-				synchronized(elock) {
-					error = e;
-				}
-
-				try {
-					Database.getBufferPool().transactionComplete(tid, false);
-				} catch (java.io.IOException e2) {
-					e2.printStackTrace();
-				}
-			}
-		}
-		
-		private void init(BTreeFile bf, int[] tupdata, BlockingQueue<ArrayList<Integer>> insertedTuples) {
-			this.tid = new TransactionId();
-			this.bf = bf;
-			this.tupdata = tupdata;
-			this.insertedTuples = insertedTuples;
-			this.success = false;
-			this.error = null;
-			this.slock = new Object();
-			this.elock = new Object();
-		}
-		
-		public void rerun(BTreeFile bf, int[] tupdata, BlockingQueue<ArrayList<Integer>> insertedTuples) {
-			init(bf, tupdata, insertedTuples);
-			run();
-		}
-
-		/**
-		 * @return true if we successfully inserted the tuple
-		 */
-		 public boolean succeeded() {
-			 synchronized(slock) {
-				 return success;
-			 }
-		 }
-
-		/**
-		 * @return an Exception instance if one occurred while inserting the tuple;
-		 *   null otherwise
-		 */
-		 public Exception getError() {
-			 synchronized(elock) {
-				 return error;
-			 }
-		 }
-	}
-    
-	/**
-	 * Helper class that attempts to delete tuple(s) in a new thread
-	 *
-	 * @return a handle to the Thread that will attempt deletion after it
-	 *   has been started
-	 */
-	public static class BTreeDeleter extends Thread {
-
-		TransactionId tid;
-		BTreeFile bf;
-		BlockingQueue<ArrayList<Integer>> insertedTuples;
-		ArrayList<Integer> tuple;
-		boolean success;
-		Exception error;
-		Object slock;
-		Object elock;
-
-		/**
-		 * @param bf the B+ tree file from which we want to delete the tuple(s)
-		 * @param the list of tuples to delete
-		 */
-		public BTreeDeleter(BTreeFile bf, BlockingQueue<ArrayList<Integer>> insertedTuples) {
-			init(bf, insertedTuples);
-		}
-
-		public void run() {
-			try {
-				tuple = insertedTuples.take();
-				if(bf.getTupleDesc().numFields() != tuple.size()) {
-					throw new DbException("tuple desc mismatch");
-				}
-				IntField key = new IntField(tuple.get(bf.keyField()));
-				IndexPredicate ipred = new IndexPredicate(Op.EQUALS, key);
-				DbFileIterator it = bf.indexIterator(tid, ipred);
-				it.open();
-				while(it.hasNext()) {
-					Tuple t = it.next();
-					if(tupleToList(t).equals(tuple)) {
-						Database.getBufferPool().deleteTuple(tid, t);
-						break;
-					}
-				}
-				it.close();
-				Database.getBufferPool().transactionComplete(tid);
-				synchronized(slock) {
-					success = true;
-				}
-			} catch (Exception e) {
-				if(!(e instanceof TransactionAbortedException)) {
-					e.printStackTrace();
-				}
-				synchronized(elock) {
-					error = e;
-				}
-
-				try {
-					insertedTuples.put(tuple);
-					Database.getBufferPool().transactionComplete(tid, false);
-				} catch (java.io.IOException e2) {
-					e2.printStackTrace();
-				} catch (InterruptedException e3) {
-					e3.printStackTrace();
-				}
-			}
-		}
-		
-		private void init(BTreeFile bf, BlockingQueue<ArrayList<Integer>> insertedTuples) {
-			this.tid = new TransactionId();
-			this.bf = bf;
-			this.insertedTuples = insertedTuples;
-			this.success = false;
-			this.error = null;
-			this.slock = new Object();
-			this.elock = new Object();
-		}
-		
-		public void rerun(BTreeFile bf, BlockingQueue<ArrayList<Integer>> insertedTuples) {
-			init(bf, insertedTuples);
-			run();
-		}
-
-		/**
-		 * @return true if we successfully inserted the tuple
-		 */
-		 public boolean succeeded() {
-			 synchronized(slock) {
-				 return success;
-			 }
-		 }
-
-		/**
-		 * @return an Exception instance if one occurred while inserting the tuple;
-		 *   null otherwise
-		 */
-		 public Exception getError() {
-			 synchronized(elock) {
-				 return error;
-			 }
-		 }
-	}
-
-}
-
diff -ruN lab3/src/java/simpledb/BufferPool.java lab4/src/java/simpledb/BufferPool.java
--- lab3/src/java/simpledb/BufferPool.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/BufferPool.java	2016-11-21 21:00:47.000000000 -0600
@@ -6,6 +6,8 @@
 import java.util.Random;
 import java.util.Vector;
 
+import java.util.HashSet;
+import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
 
 /**
@@ -31,6 +33,7 @@
     public static final int DEFAULT_PAGES = 50;
 
     private final Random random = new Random();
+    final LockManager lm;
 
     /**
      * Creates a BufferPool that caches up to numPages pages.
@@ -38,6 +41,7 @@
      * @param numPages maximum number of pages in this buffer pool.
      */
     public BufferPool(int numPages) {
+        this.lm = new LockManager();
     }
     
     public static int getPageSize() {
@@ -71,6 +75,20 @@
      */
     public  Page getPage(TransactionId tid, PageId pid, Permissions perm)
         throws TransactionAbortedException, DbException {
+        // block until we get a lock on this page
+        try {
+            //System.out.println("bp acquiring for " + tid + " on " + pid);
+        	lm.acquireLock(tid, pid, perm);
+        	// Note (rytaft): I commented the below line out and replaced it with the line
+        	// above because it doesn't make any sense.
+        	// If someone put this here for a reason please let me know...
+            //lm.acquireLock(tid, new HeapPageId(pid.getTableId(), pid.pageNumber()), perm);
+        } catch (DeadlockException de) {
+            //System.out.println("bp found deadlock for " + tid + " on " + pid);
+            // XXX SRM -- why is this necessary???
+            lm.releaseAllLocks(tid, false);
+            throw new TransactionAbortedException();
+        }
     }
 
     /**
@@ -83,7 +101,7 @@
      * @param pid the ID of the page to unlock
      */
     public  void releasePage(TransactionId tid, PageId pid) {
-        // some code goes here
+        lm.releaseLock(tid, pid);
     }
 
     /**
@@ -92,14 +110,13 @@
      * @param tid the ID of the transaction requesting the unlock
      */
     public void transactionComplete(TransactionId tid) throws IOException {
-        // some code goes here
+        // XXX flush pages
+        transactionComplete(tid, true);
     }
 
     /** Return true if the specified transaction has a lock on the specified page */
     public boolean holdsLock(TransactionId tid, PageId p) {
-        // some code goes here
-        // not necessary for lab1|lab2
-        return false;
+        return lm.holdsLock(tid,p);
     }
 
     /**
@@ -111,7 +128,14 @@
      */
     public void transactionComplete(TransactionId tid, boolean commit)
         throws IOException {
-        // some code goes here
+        lm.releaseAllLocks(tid, commit);
+        
+        Set<PageId> pageIds = lm.pagesLockedByTid(tid);
+        if (pageIds == null) return;
+        for (PageId p : pageIds) {
+          if (pages.containsKey(p))
+            pages.get(p).setBeforeImage();
+        }
     }
 
     /**
@@ -244,7 +268,13 @@
     /** Write all pages of the specified transaction to disk.
      */
     public synchronized  void flushPages(TransactionId tid) throws IOException {
-        // some code goes here
+        Set<PageId> pageId = lm.pagesLockedByTid(tid);
+        if (pageId == null) return;
+
+        for (PageId p : pageId) {
+            //System.out.println("FLUSHING PAGE " + p.pageno());
+            flushPage(p);
+        }
     }
 
     /**
@@ -283,4 +313,292 @@
         pages.remove(pid);
     }
 
+    /**
+     * Manages locks.
+     * 
+     * All the field read/write operations are protected by this
+     * @Threadsafe
+     */
+    class LockManager {
+
+        final int LOCK_WAIT = 10;       // ms
+        final Random random = new Random();
+
+        // maps TransactionId to a Set of Pages
+        final HashMap<TransactionId,Set<PageId>> _tid2pages;
+
+        // set of pages that are locked
+        final HashMap<PageId,Set<TransactionId>> _page2tids;
+
+        // permission under which page got locked
+        final HashMap<PageId,Permissions> _page2perm;
+
+        final HashMap<TransactionId, Vector<TransactionId>> _waitsFor;
+
+        private LockManager() {
+            _tid2pages = new HashMap<TransactionId, Set<PageId>>();
+            _page2tids = new HashMap<PageId, Set<TransactionId>>();
+            _page2perm = new HashMap<PageId, Permissions>();
+            _waitsFor = new HashMap<TransactionId, Vector<TransactionId>>();
+
+        }
+
+        //methods to check waits for graph
+        @SuppressWarnings("unchecked")
+        public synchronized boolean checkWaitsFor(TransactionId origin, Vector<TransactionId> goal) {
+
+            Vector<TransactionId> start = _waitsFor.get(origin);
+            if (start == null) return false;
+            for (TransactionId t : start) {
+                Vector<TransactionId> newGoal = (Vector<TransactionId>)goal.clone();
+                newGoal.addElement(t);
+                if (goal.contains(t) || checkWaitsFor(t,newGoal)) {
+                    return true;
+                }
+            }
+            return false;
+        }
+
+        @SuppressWarnings("unchecked")
+        public synchronized boolean checkWaitsForDeadlock(TransactionId tid) {
+                
+            Vector goal = new Vector<TransactionId>();
+            goal.addElement((TransactionId)tid);
+
+            return checkWaitsFor(tid,goal);
+        }
+
+        /**
+         * Tried to acquire a lock on page pid for transaction tid, with
+         * permissions perm.
+         *
+         * @throws DeadlockException after on cycle-based deadlock
+         */
+        @SuppressWarnings("unchecked")
+        public boolean acquireLock(TransactionId tid, PageId pid, Permissions perm)
+            throws DeadlockException {
+
+            while(!lock(tid, pid, perm)) {
+
+                synchronized(this) {
+                    Vector<TransactionId> v = _waitsFor.get(tid);
+                    if (v == null) {
+                        v = new Vector<TransactionId>();
+                        _waitsFor.put(tid,v);
+                    } 
+                    Set<TransactionId> holder = _page2tids.get(pid);
+                    if(holder != null) {
+	                    holder = (Set<TransactionId>)((HashSet)holder).clone();
+	                    holder.remove(tid);
+	                    v.addAll(holder);
+	                    _waitsFor.put(tid,v);
+	                    if (checkWaitsForDeadlock(tid)) {
+	                        //System.out.println("Cycle based deadlock in " + _waitsFor);
+	                        _waitsFor.remove(tid);
+	                        throw new DeadlockException();
+	                    }
+                    }
+                }
+
+                try {
+                    Thread.sleep(LOCK_WAIT);
+                } catch (InterruptedException e) {
+                }
+
+            }
+            
+            synchronized(this) {
+             _waitsFor.remove(tid); 
+            }
+
+            return true;
+        }
+
+        /**
+         * Release all locks corresponding to TransactionId tid.
+         */
+        public synchronized void releaseAllLocks(TransactionId tid, boolean commit) {
+            Set<PageId> s =  _tid2pages.get(tid);
+            if(s == null)
+                return;
+
+            Set<PageId> sx = new HashSet<PageId>(s);
+            for (Iterator<PageId> i = sx.iterator(); i.hasNext(); ) {
+
+                PageId pid = i.next();
+                //System.out.println("RELEASING LOCK ON PAGE " + pid.pageno());
+                if (commit) {
+                    // if we commit, then we flush the page to disk
+                    try {
+                        // System.out.println("bp flushing page " + pid.pageno());
+                        Page p = pages.get(pid);
+                        if (p != null) {
+                            //not necessary to write it if its not dirty
+                            //p.markDirty(true, tid);
+                            //really, pages aught to be have been flushed already before we do this!
+                            flushPage(pid);
+                            p.setBeforeImage(); // next abort should only roll back to here
+                        }
+                    } catch (IOException e) {
+                        throw new RuntimeException("failed during commit: " + e);
+                    }
+                } else if ((_page2perm.get(pid)).equals(Permissions.READ_WRITE)) {
+                    // if we abort, then we restore the page from disk iff we had a
+                    //   write lock.
+                    // System.out.println("bp reloading page " + pid.pageno());
+                    // better have done rollback first if we are allowing dirty pages to go to disk
+                    Page p = Database.getCatalog().getDatabaseFile(pid.getTableId()).readPage(pid);
+                    pages.put(pid, p);
+                }
+
+                releaseLock(tid, pid);
+            }
+        }
+
+        public synchronized Set<PageId> pagesLockedByTid(TransactionId tid) {
+            return _tid2pages.get(tid);
+        }
+
+        /** Return true if the specified transaction has a lock on the specified page */
+        public synchronized boolean holdsLock(TransactionId tid, PageId p) {
+            Set<TransactionId> tset =  _page2tids.get(p);
+            if (tset == null) return false;
+            return tset.contains(tid);
+        }
+
+        /**
+         * Returns whether or not this tid/pid/perm is already locked by another object.
+         * if nobody is holding a lock, then this tid/pid/perm can acquire the lock.
+         *
+         * if perm == READ
+         *  if tid is holding any sort of lock on pid, then the tid can acquire the lock (return false).
+         *
+         *  if another tid is holding a READ lock on pid, then the tid can acquire the lock (return false).
+         *  if another tid is holding a WRITE lock on pid, then tid can not currently 
+         *  acquire the lock (return true).
+         *
+         * else
+         *   if tid is THE ONLY ONE holding a READ lock on pid, then tid can acquire the lock (return false).
+         *   if tid is holding a WRITE lock on pid, then the tid already has the lock (return false).
+         *
+         *   if another tid is holding any sort of lock on pid, then the tid can not currenty acquire the lock (return true).
+         */
+        private boolean locked(TransactionId tid, PageId pid, Permissions perm) {
+            Set<PageId> pset = null;
+            Set<TransactionId> tset = null;
+            Permissions p = null;
+
+            synchronized (this){
+            pset=_tid2pages.get(tid);
+            tset= _page2tids.get(pid);
+            p=_page2perm.get(pid);
+            }
+            
+            // System.out.println("locked(): pid = " + pid);
+
+            // if nobody is holding a lock on this page, duh, grant lock
+            if(p == null)
+                return false;
+
+            // if perm == READ
+            if(perm == Permissions.READ_ONLY) {
+                // if tid is holding any sort of lock on pid, duh, grant lock
+                if(pset != null && pset.contains(pid))
+                    return false;
+
+                // if another tid is holding a READ lock on pid, grant lock
+                if(p == Permissions.READ_ONLY)
+                    return false;
+
+                //otherwise, someone else has the lock, so we can't have it
+                if(p == Permissions.READ_WRITE)
+                    return true;
+
+                System.out.println("locked weirdness, 1");
+                System.exit(-1);
+
+                // if perm == READ_WRITE
+            } else {
+                // if tid is THE ONLY ONE holding a READ lock on pid, this is allowed but we will need to
+                // change lock to WRITE later
+                if(p == Permissions.READ_ONLY && tset.contains(tid) && tset.size() == 1)
+                    return false;
+
+                // if tid is holding a WRITE lock on pid, duh, grant lock
+                if(p == Permissions.READ_WRITE && tset.contains(tid))
+                    return false;
+
+                // if another tid is holding any sort of lock on pid, sleep, goto start
+                if(tset.size() != 0)
+                    return true;
+
+                System.out.println("locked weirdness, 2");
+                System.exit(-1);
+            }
+
+            System.out.println("locked weirdness, 3");
+            System.exit(-1);
+            return true;
+        }
+
+        public  synchronized void releaseLock(TransactionId tid, PageId pid) {
+            //System.out.println("released " + _page2perm.get(pid) + " on " + pid.pageno() + " for " + tid);
+
+            Set<PageId> pset = _tid2pages.get(tid);
+            if(pset != null) {
+                pset.remove(pid);
+                if(pset.isEmpty())
+                    _tid2pages.remove(tid);
+            }
+
+            Set<TransactionId> tset = _page2tids.get(pid);
+            if(tset != null) {
+                tset.remove(tid);
+                if(tset.isEmpty()) {
+                    _page2tids.remove(pid);
+                    _page2perm.remove(pid);
+                }
+            }
+        }
+
+        private  synchronized boolean lock(TransactionId tid, PageId pid, Permissions perm) {
+
+            if(locked(tid, pid, perm))
+                return false;
+
+            Set<PageId> pset = _tid2pages.get(tid);
+
+            if(pset == null) {
+                pset = new HashSet<PageId>();
+                _tid2pages.put(tid, pset);
+            }
+        if (!pset.contains(pid))
+        pset.add(pid);
+            /*
+              System.out.print(tid + " locks: ");
+              while (it.hasNext()) {
+              PageId p = it.next();
+
+              System.out.print(p.pageno() + ",");
+              }
+              System.out.println("");
+            */
+
+            Set<TransactionId> tset = _page2tids.get(pid);
+            if(tset == null) {
+                tset = new HashSet<TransactionId>();
+                _page2tids.put(pid, tset);
+                // System.out.println("putting " + tid + " -> " + pid.pageno() + " in _page2tids");
+            }
+        if (!tset.contains(tid))
+        tset.add(tid);
+
+            //System.out.println("putting " + pid + " -> " + perm + " in _page2perm");
+            Permissions old = _page2perm.get(pid);
+            if (old == null || (old == Permissions.READ_ONLY && perm == Permissions.READ_WRITE)) {
+                _page2perm.put(pid, perm);
+            }
+            return true;
+        }
+    }
 }
diff -ruN lab3/src/java/simpledb/IndexDbIterator.java lab4/src/java/simpledb/IndexDbIterator.java
--- lab3/src/java/simpledb/IndexDbIterator.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/IndexDbIterator.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,20 +0,0 @@
-package simpledb;
-import java.util.*;
-
-/** IndexDBIterator is the interface that index access methods
-    implement in SimpleDb.
-*/
-public interface IndexDbIterator extends DbIterator {
-    /** Open the access method such that when getNext is called, it
-        iterates through the tuples that satisfy ipred.
-        @param ipred The predicate that is used to scan the index.
-    */
-    public void open(IndexPredicate ipred)
-        throws NoSuchElementException, DbException, TransactionAbortedException;
-
-    /** Begin a new index scan with the specified predicate.
-        @param ipred The predicate that is used to scan the index.
-    */
-    public void rewind(IndexPredicate ipred)
-        throws DbException, TransactionAbortedException;
-}
diff -ruN lab3/src/java/simpledb/IndexPredicate.java lab4/src/java/simpledb/IndexPredicate.java
--- lab3/src/java/simpledb/IndexPredicate.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/IndexPredicate.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,49 +0,0 @@
-package simpledb;
-
-import java.io.Serializable;
-
-/**
- * IndexPredicate compares a field which has index on it against a given value
- * @see simpledb.IndexDbIterator
- */
-public class IndexPredicate implements Serializable {
-	
-    private static final long serialVersionUID = 1L;
-	
-    private Predicate.Op op;
-    private Field fieldvalue;
-
-    /**
-     * Constructor.
-     *
-     * @param fvalue The value that the predicate compares against.
-     * @param op The operation to apply (as defined in Predicate.Op); either
-     *   Predicate.Op.GREATER_THAN, Predicate.Op.LESS_THAN, Predicate.Op.EQUAL,
-     *   Predicate.Op.GREATER_THAN_OR_EQ, or Predicate.Op.LESS_THAN_OR_EQ
-     * @see Predicate
-     */
-    public IndexPredicate(Predicate.Op op, Field fvalue) {
-        this.op = op;
-        this.fieldvalue = fvalue;
-    }
-
-    public Field getField() {
-        return fieldvalue;
-    }
-
-    public Predicate.Op getOp() {
-        return op;
-    }
-
-    /** Return true if the fieldvalue in the supplied predicate
-        is satisfied by this predicate's fieldvalue and
-        operator.
-        @param ipd The field to compare against.
-    */
-    public boolean equals(IndexPredicate ipd) {
-        if (ipd == null)
-            return false;
-        return (op.equals(ipd.op) && fieldvalue.equals(ipd.fieldvalue));
-    }
-
-}
diff -ruN lab3/src/java/simpledb/JoinOptimizer.java lab4/src/java/simpledb/JoinOptimizer.java
--- lab3/src/java/simpledb/JoinOptimizer.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/JoinOptimizer.java	2016-11-21 21:00:47.000000000 -0600
@@ -68,7 +68,21 @@
 
         JoinPredicate p = new JoinPredicate(t1id, lj.p, t2id);
 
-        j = new Join(p,plan1,plan2);
+        if (lj.p == Predicate.Op.EQUALS) {
+
+            try {
+                // dynamically load HashEquiJoin -- if it doesn't exist, just
+                // fall back on regular join
+                Class<?> c = Class.forName("simpledb.HashEquiJoin");
+                java.lang.reflect.Constructor<?> ct = c.getConstructors()[0];
+                j = (DbIterator) ct
+                        .newInstance(new Object[] { p, plan1, plan2 });
+            } catch (Exception e) {
+                j = new Join(p, plan1, plan2);
+            }
+        } else {
+            j = new Join(p, plan1, plan2);
+        }
 
         return j;
 
@@ -217,7 +231,6 @@
             HashMap<String, TableStats> stats,
             HashMap<String, Double> filterSelectivities, boolean explain)
             throws ParsingException {
-        //Not necessary for labs 1--3
 
         // some code goes here
         //Replace the following
diff -ruN lab3/src/java/simpledb/LogFile.java lab4/src/java/simpledb/LogFile.java
--- lab3/src/java/simpledb/LogFile.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/src/java/simpledb/LogFile.java	2016-11-21 21:00:47.000000000 -0600
@@ -466,7 +466,6 @@
         synchronized (Database.getBufferPool()) {
             synchronized(this) {
                 preAppend();
-                // some code goes here
             }
         }
     }
@@ -493,7 +492,6 @@
         synchronized (Database.getBufferPool()) {
             synchronized (this) {
                 recoveryUndecided = false;
-                // some code goes here
             }
          }
     }
diff -ruN lab3/test/simpledb/BTreeFileDeleteTest.java lab4/test/simpledb/BTreeFileDeleteTest.java
--- lab3/test/simpledb/BTreeFileDeleteTest.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/test/simpledb/BTreeFileDeleteTest.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,379 +0,0 @@
-package simpledb;
-
-import simpledb.systemtest.SimpleDbTestBase;
-import simpledb.Predicate.Op;
-
-import java.io.File;
-import java.util.*;
-
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-
-import static org.junit.Assert.*;
-import junit.framework.JUnit4TestAdapter;
-
-public class BTreeFileDeleteTest extends SimpleDbTestBase {
-	private TransactionId tid;
-
-	/**
-	 * Set up initial resources for each unit test.
-	 */
-	@Before
-	public void setUp() throws Exception {
-		tid = new TransactionId();
-	}
-
-	@After
-	public void tearDown() throws Exception {
-		Database.getBufferPool().transactionComplete(tid);
-	}
-
-	/**
-	 * Unit test for BTreeFile.deleteTuple()
-	 */
-	@Test public void deleteTuple() throws Exception {
-		BTreeFile f;
-		f = BTreeUtility.createRandomBTreeFile(2, 20, null, null, 0);
-		DbFileIterator it = f.iterator(tid);
-		it.open();
-		while(it.hasNext()) {
-			Tuple t = it.next();
-			f.deleteTuple(tid, t);
-		}
-		it.rewind();
-		assertFalse(it.hasNext());
-
-		// insert a couple of tuples
-		f.insertTuple(tid, BTreeUtility.getBTreeTuple(5, 2));
-		f.insertTuple(tid, BTreeUtility.getBTreeTuple(17, 2));
-
-		it.rewind();
-		assertTrue(it.hasNext());
-	}
-
-	@Test
-	public void testStealFromLeftLeafPage() throws Exception {
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 0);
-		int tableid = empty.getId();
-		int keyField = 0;
-
-		// create the leaf pages
-		BTreePageId pageId = new BTreePageId(tableid, 1, BTreePageId.LEAF);
-		BTreePageId siblingId = new BTreePageId(tableid, 2, BTreePageId.LEAF);
-		BTreeLeafPage page = BTreeUtility.createRandomLeafPage(pageId, 2, keyField, 
-				BTreeUtility.getNumTuplesPerPage(2)/2 - 1, BTreeUtility.MAX_RAND_VALUE/2, BTreeUtility.MAX_RAND_VALUE);
-		BTreeLeafPage sibling = BTreeUtility.createRandomLeafPage(siblingId, 2, keyField, 0, BTreeUtility.MAX_RAND_VALUE/2);
-		
-		// create the parent page and the new entry
-		BTreePageId parentId = new BTreePageId(tableid, 3, BTreePageId.INTERNAL);
-		BTreeInternalPage parent = new BTreeInternalPage(parentId, BTreeInternalPage.createEmptyPageData(), keyField);
-		Field key = page.iterator().next().getField(keyField);
-		BTreeEntry entry = new BTreeEntry(key, siblingId, pageId);
-		parent.insertEntry(entry);
-		
-		// set all the pointers
-		page.setParentId(parentId);
-		sibling.setParentId(parentId);
-		page.setLeftSiblingId(siblingId);
-		sibling.setRightSiblingId(pageId);
-		
-		int totalTuples = page.getNumTuples() + sibling.getNumTuples();
-		
-		empty.stealFromLeafPage(page, sibling, parent, entry, false);
-		assertEquals(totalTuples, page.getNumTuples() + sibling.getNumTuples());
-		assertTrue(page.getNumTuples() == totalTuples/2 || page.getNumTuples() == totalTuples/2 + 1);
-		assertTrue(sibling.getNumTuples() == totalTuples/2 || sibling.getNumTuples() == totalTuples/2 + 1);
-		assertTrue(sibling.reverseIterator().next().getField(keyField).compare(Op.LESS_THAN_OR_EQ, 
-				page.iterator().next().getField(keyField)));
-	} 
-
-	@Test
-	public void testStealFromRightLeafPage() throws Exception {
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 0);
-		int tableid = empty.getId();
-		int keyField = 0;
-
-		// create the leaf pages
-		BTreePageId pageId = new BTreePageId(tableid, 1, BTreePageId.LEAF);
-		BTreePageId siblingId = new BTreePageId(tableid, 2, BTreePageId.LEAF);
-		BTreeLeafPage page = BTreeUtility.createRandomLeafPage(pageId, 2, keyField, 
-				BTreeUtility.getNumTuplesPerPage(2)/2 - 1, 0, BTreeUtility.MAX_RAND_VALUE/2);
-		BTreeLeafPage sibling = BTreeUtility.createRandomLeafPage(siblingId, 2, keyField, BTreeUtility.MAX_RAND_VALUE/2, BTreeUtility.MAX_RAND_VALUE);
-		
-		// create the parent page and the new entry
-		BTreePageId parentId = new BTreePageId(tableid, 3, BTreePageId.INTERNAL);
-		BTreeInternalPage parent = new BTreeInternalPage(parentId, BTreeInternalPage.createEmptyPageData(), keyField);
-		Field key = page.iterator().next().getField(keyField);
-		BTreeEntry entry = new BTreeEntry(key, pageId, siblingId);
-		parent.insertEntry(entry);
-		
-		// set all the pointers
-		page.setParentId(parentId);
-		sibling.setParentId(parentId);
-		page.setRightSiblingId(siblingId);
-		sibling.setLeftSiblingId(pageId);
-		
-		int totalTuples = page.getNumTuples() + sibling.getNumTuples();
-		
-		empty.stealFromLeafPage(page, sibling, parent, entry, true);
-		assertEquals(totalTuples, page.getNumTuples() + sibling.getNumTuples());
-		assertTrue(page.getNumTuples() == totalTuples/2 || page.getNumTuples() == totalTuples/2 + 1);
-		assertTrue(sibling.getNumTuples() == totalTuples/2 || sibling.getNumTuples() == totalTuples/2 + 1);
-		assertTrue(page.reverseIterator().next().getField(keyField).compare(Op.LESS_THAN_OR_EQ, 
-				sibling.iterator().next().getField(keyField)));
-	} 
-
-	@Test
-	public void testMergeLeafPages() throws Exception {
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 0, 3);
-		int tableid = empty.getId();
-		int keyField = 0;
-
-		// create the leaf pages
-		BTreePageId leftPageId = new BTreePageId(tableid, 2, BTreePageId.LEAF);
-		BTreePageId rightPageId = new BTreePageId(tableid, 3, BTreePageId.LEAF);
-		BTreeLeafPage leftPage = BTreeUtility.createRandomLeafPage(leftPageId, 2, keyField, 
-				BTreeUtility.getNumTuplesPerPage(2)/2 - 1, 0, BTreeUtility.MAX_RAND_VALUE/2);
-		BTreeLeafPage rightPage = BTreeUtility.createRandomLeafPage(rightPageId, 2, keyField, 
-				BTreeUtility.getNumTuplesPerPage(2)/2 - 1, BTreeUtility.MAX_RAND_VALUE/2, BTreeUtility.MAX_RAND_VALUE);
-		
-		// create the parent page and the new entry
-		BTreePageId parentId = new BTreePageId(tableid, 1, BTreePageId.INTERNAL);
-		BTreeInternalPage parent = BTreeUtility.createRandomInternalPage(parentId, keyField, 
-				BTreePageId.LEAF, BTreeUtility.MAX_RAND_VALUE/2, BTreeUtility.MAX_RAND_VALUE, 2);
-		BTreeEntry entry = parent.iterator().next();
-		Field siblingKey = rightPage.iterator().next().getField(keyField);
-		Field parentKey = entry.getKey();
-		Field minKey = (siblingKey.compare(Op.LESS_THAN, parentKey) ? siblingKey : parentKey);
-		entry.setKey(minKey);
-		parent.updateEntry(entry);
-		int numEntries = parent.getNumEntries();
-		
-		// set all the pointers
-		leftPage.setParentId(parentId);
-		rightPage.setParentId(parentId);
-		leftPage.setRightSiblingId(rightPageId);
-		rightPage.setLeftSiblingId(leftPageId);
-		
-		int totalTuples = leftPage.getNumTuples() + rightPage.getNumTuples();
-		
-		HashMap<PageId, Page> dirtypages = new HashMap<PageId, Page>();
-		dirtypages.put(leftPageId, leftPage);
-		dirtypages.put(rightPageId, rightPage);
-		dirtypages.put(parentId, parent);
-		empty.mergeLeafPages(tid, dirtypages, leftPage, rightPage, parent, entry);
-		assertEquals(totalTuples, leftPage.getNumTuples());
-		assertEquals(0, rightPage.getNumTuples());
-		assertEquals(null, leftPage.getRightSiblingId());
-		assertEquals(numEntries - 1, parent.getNumEntries());
-		assertEquals(rightPageId.pageNumber(), empty.getEmptyPageNo(tid, dirtypages));
-	}
-
-	@Test
-	public void testStealFromLeftInternalPage() throws Exception {
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		int entriesPerPage = BTreeUtility.getNumEntriesPerPage();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 0, 5 + 3*entriesPerPage/2);
-		int tableid = empty.getId();
-		int keyField = 0;
-
-		// create the internal pages
-		BTreePageId pageId = new BTreePageId(tableid, 1, BTreePageId.INTERNAL);
-		BTreePageId siblingId = new BTreePageId(tableid, 2, BTreePageId.INTERNAL);
-		BTreeInternalPage page = BTreeUtility.createRandomInternalPage(pageId, keyField, BTreePageId.LEAF,
-				entriesPerPage/2 - 1, BTreeUtility.MAX_RAND_VALUE/2, BTreeUtility.MAX_RAND_VALUE, 5 + entriesPerPage);
-		BTreeInternalPage sibling = BTreeUtility.createRandomInternalPage(siblingId, keyField, 
-				BTreePageId.LEAF, 0, BTreeUtility.MAX_RAND_VALUE/2, 4);
-		
-		// create the parent page and the new entry
-		BTreePageId parentId = new BTreePageId(tableid, 3, BTreePageId.INTERNAL);
-		BTreeInternalPage parent = new BTreeInternalPage(parentId, BTreeInternalPage.createEmptyPageData(), keyField);
-		Field key = page.iterator().next().getKey();
-		BTreeEntry entry = new BTreeEntry(key, siblingId, pageId);
-		parent.insertEntry(entry);
-				
-		// set all the pointers
-		page.setParentId(parentId);
-		sibling.setParentId(parentId);
-		
-		int totalEntries = page.getNumEntries() + sibling.getNumEntries();
-		int entriesToSteal = totalEntries/2 - page.getNumEntries();
-		
-		HashMap<PageId, Page> dirtypages = new HashMap<PageId, Page>();
-		dirtypages.put(pageId, page);
-		dirtypages.put(siblingId, sibling);
-		dirtypages.put(parentId, parent);
-		empty.stealFromLeftInternalPage(tid, dirtypages, page, sibling, parent, entry);
-		
-		// are all the entries still there?
-		assertEquals(totalEntries, page.getNumEntries() + sibling.getNumEntries());
-		
-		// have the entries been evenly distributed?
-		assertTrue(page.getNumEntries() == totalEntries/2 || page.getNumEntries() == totalEntries/2 + 1);
-		assertTrue(sibling.getNumEntries() == totalEntries/2 || sibling.getNumEntries() == totalEntries/2 + 1);
-		
-		// are the keys in the left page less than the keys in the right page?
-		assertTrue(sibling.reverseIterator().next().getKey().compare(Op.LESS_THAN_OR_EQ, 
-				page.iterator().next().getKey()));
-		
-		// is the parent key reasonable?
-		assertTrue(parent.iterator().next().getKey().compare(Op.LESS_THAN_OR_EQ, page.iterator().next().getKey()));
-		assertTrue(parent.iterator().next().getKey().compare(Op.GREATER_THAN_OR_EQ, sibling.reverseIterator().next().getKey()));
-		
-		// are all the parent pointers set?
-		Iterator<BTreeEntry> it = page.iterator();
-		BTreeEntry e = null;
-		int count = 0;
-		while(count < entriesToSteal) {
-			assertTrue(it.hasNext());
-			e = it.next();
-			BTreePage p = (BTreePage) dirtypages.get(e.getLeftChild());
-			assertEquals(pageId, p.getParentId());
-			++count;
-		}
-	}
-
-	@Test
-	public void testStealFromRightInternalPage() throws Exception {
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		int entriesPerPage = BTreeUtility.getNumEntriesPerPage();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 0, 5 + 3*entriesPerPage/2);
-		int tableid = empty.getId();
-		int keyField = 0;
-
-		// create the internal pages
-		BTreePageId pageId = new BTreePageId(tableid, 1, BTreePageId.INTERNAL);
-		BTreePageId siblingId = new BTreePageId(tableid, 2, BTreePageId.INTERNAL);
-		BTreeInternalPage page = BTreeUtility.createRandomInternalPage(pageId, keyField, BTreePageId.LEAF,
-				entriesPerPage/2 - 1, 0, BTreeUtility.MAX_RAND_VALUE/2, 4);
-		BTreeInternalPage sibling = BTreeUtility.createRandomInternalPage(siblingId, keyField, 
-				BTreePageId.LEAF, BTreeUtility.MAX_RAND_VALUE/2, BTreeUtility.MAX_RAND_VALUE, 4 + entriesPerPage/2);
-		
-		// create the parent page and the new entry
-		BTreePageId parentId = new BTreePageId(tableid, 3, BTreePageId.INTERNAL);
-		BTreeInternalPage parent = new BTreeInternalPage(parentId, BTreeInternalPage.createEmptyPageData(), keyField);
-		Field key = sibling.iterator().next().getKey();
-		BTreeEntry entry = new BTreeEntry(key, pageId, siblingId);
-		parent.insertEntry(entry);
-				
-		// set all the pointers
-		page.setParentId(parentId);
-		sibling.setParentId(parentId);
-		
-		int totalEntries = page.getNumEntries() + sibling.getNumEntries();
-		int entriesToSteal = totalEntries/2 - page.getNumEntries();
-		
-		HashMap<PageId, Page> dirtypages = new HashMap<PageId, Page>();
-		dirtypages.put(pageId, page);
-		dirtypages.put(siblingId, sibling);
-		dirtypages.put(parentId, parent);
-		empty.stealFromRightInternalPage(tid, dirtypages, page, sibling, parent, entry);
-		
-		// are all the entries still there?
-		assertEquals(totalEntries, page.getNumEntries() + sibling.getNumEntries());
-		
-		// have the entries been evenly distributed?
-		assertTrue(page.getNumEntries() == totalEntries/2 || page.getNumEntries() == totalEntries/2 + 1);
-		assertTrue(sibling.getNumEntries() == totalEntries/2 || sibling.getNumEntries() == totalEntries/2 + 1);
-		
-		// are the keys in the left page less than the keys in the right page?
-		assertTrue(page.reverseIterator().next().getKey().compare(Op.LESS_THAN_OR_EQ, 
-				sibling.iterator().next().getKey()));
-		
-		// is the parent key reasonable?
-		assertTrue(parent.iterator().next().getKey().compare(Op.LESS_THAN_OR_EQ, sibling.iterator().next().getKey()));
-		assertTrue(parent.iterator().next().getKey().compare(Op.GREATER_THAN_OR_EQ, page.reverseIterator().next().getKey()));
-		
-		// are all the parent pointers set?
-		Iterator<BTreeEntry> it = page.reverseIterator();
-		BTreeEntry e = null;
-		int count = 0;
-		while(count < entriesToSteal) {
-			assertTrue(it.hasNext());
-			e = it.next();
-			BTreePage p = (BTreePage) dirtypages.get(e.getRightChild());
-			assertEquals(pageId, p.getParentId());
-			++count;
-		}
-	}
-
-	@Test
-	public void testMergeInternalPages() throws Exception {
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		int entriesPerPage = BTreeUtility.getNumEntriesPerPage();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 0, 1 + 2*entriesPerPage);
-		int tableid = empty.getId();
-		int keyField = 0;
-
-		// create the internal pages
-		BTreePageId leftPageId = new BTreePageId(tableid, 2, BTreePageId.INTERNAL);
-		BTreePageId rightPageId = new BTreePageId(tableid, 3, BTreePageId.INTERNAL);
-		BTreeInternalPage leftPage = BTreeUtility.createRandomInternalPage(leftPageId, keyField, BTreePageId.LEAF,
-				entriesPerPage/2 - 1, 0, BTreeUtility.MAX_RAND_VALUE/2, 3 + entriesPerPage);
-		BTreeInternalPage rightPage = BTreeUtility.createRandomInternalPage(rightPageId, keyField, BTreePageId.LEAF,
-				entriesPerPage/2 - 1, BTreeUtility.MAX_RAND_VALUE/2, BTreeUtility.MAX_RAND_VALUE, 2 + 3*entriesPerPage/2);
-		
-		// create the parent page and the new entry
-		BTreePageId parentId = new BTreePageId(tableid, 1, BTreePageId.INTERNAL);
-		BTreeInternalPage parent = BTreeUtility.createRandomInternalPage(parentId, keyField, 
-				BTreePageId.LEAF, BTreeUtility.MAX_RAND_VALUE/2, BTreeUtility.MAX_RAND_VALUE, 2);
-		BTreeEntry entry = parent.iterator().next();
-		Field siblingKey = rightPage.iterator().next().getKey();
-		Field parentKey = entry.getKey();
-		Field minKey = (siblingKey.compare(Op.LESS_THAN, parentKey) ? siblingKey : parentKey);
-		entry.setKey(minKey);
-		parent.updateEntry(entry);
-		int numParentEntries = parent.getNumEntries();
-		
-		// set all the pointers
-		leftPage.setParentId(parentId);
-		rightPage.setParentId(parentId);
-		
-		int totalEntries = leftPage.getNumEntries() + rightPage.getNumEntries();
-		
-		HashMap<PageId, Page> dirtypages = new HashMap<PageId, Page>();
-		dirtypages.put(leftPageId, leftPage);
-		dirtypages.put(rightPageId, rightPage);
-		dirtypages.put(parentId, parent);
-		empty.mergeInternalPages(tid, dirtypages, leftPage, rightPage, parent, entry);
-		assertEquals(totalEntries + 1, leftPage.getNumEntries());
-		assertEquals(0, rightPage.getNumEntries());
-		assertEquals(numParentEntries - 1, parent.getNumEntries());
-		assertEquals(rightPageId.pageNumber(), empty.getEmptyPageNo(tid, dirtypages));
-
-		// are all the parent pointers set?
-		Iterator<BTreeEntry> it = leftPage.reverseIterator();
-		BTreeEntry e = null;
-		int count = 0;
-		while(count < entriesPerPage/2 - 1) {
-			assertTrue(it.hasNext());
-			e = it.next();
-			BTreePage p = (BTreePage) dirtypages.get(e.getRightChild());
-			assertEquals(leftPageId, p.getParentId());
-			++count;
-		}
-	}    
-
-	/**
-	 * JUnit suite target
-	 */
-	public static junit.framework.Test suite() {
-		return new JUnit4TestAdapter(BTreeFileDeleteTest.class);
-	}
-}
diff -ruN lab3/test/simpledb/BTreeFileInsertTest.java lab4/test/simpledb/BTreeFileInsertTest.java
--- lab3/test/simpledb/BTreeFileInsertTest.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/test/simpledb/BTreeFileInsertTest.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,181 +0,0 @@
-package simpledb;
-
-import simpledb.systemtest.SimpleDbTestBase;
-import simpledb.Predicate.Op;
-
-import java.io.File;
-import java.util.*;
-
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-
-import static org.junit.Assert.*;
-import junit.framework.JUnit4TestAdapter;
-
-public class BTreeFileInsertTest extends SimpleDbTestBase {
-	private TransactionId tid;
-	
-	/**
-	 * Set up initial resources for each unit test.
-	 */
-	@Before
-	public void setUp() throws Exception {
-		tid = new TransactionId();
-	}
-
-	@After
-	public void tearDown() throws Exception {
-		Database.getBufferPool().transactionComplete(tid);
-		
-		// set the page size back to the default
-		BufferPool.resetPageSize();
-		Database.reset();
-	}
-
-	@Test
-	public void testSplitLeafPages() throws Exception {
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 0, 3);
-		int tableid = empty.getId();
-		int keyField = 0;
-
-		// create the leaf page
-		BTreePageId leftPageId = new BTreePageId(tableid, 2, BTreePageId.LEAF);
-		BTreeLeafPage leftPage = BTreeUtility.createRandomLeafPage(leftPageId, 2, keyField, 
-				0, BTreeUtility.MAX_RAND_VALUE);
-				
-		// create the parent page
-		BTreePageId parentId = new BTreePageId(tableid, 1, BTreePageId.INTERNAL);
-		BTreeInternalPage parent = new BTreeInternalPage(parentId, 
-				BTreeInternalPage.createEmptyPageData(), keyField);
-				
-		// set the pointers
-		leftPage.setParentId(parentId);
-		
-		Field field = new IntField(BTreeUtility.MAX_RAND_VALUE/2);
-		HashMap<PageId, Page> dirtypages = new HashMap<PageId, Page>();
-		dirtypages.put(leftPageId, leftPage);
-		dirtypages.put(parentId, parent);
-		BTreeLeafPage page = empty.splitLeafPage(tid, dirtypages, leftPage, field);
-		assertTrue(page.getLeftSiblingId() != null || page.getRightSiblingId() != null);
-		BTreeLeafPage otherPage;
-		if(page.getLeftSiblingId() != null) {
-			otherPage = (BTreeLeafPage) dirtypages.get(page.getLeftSiblingId());
-			assertTrue(field.compare(Op.GREATER_THAN_OR_EQ, 
-					otherPage.reverseIterator().next().getField(keyField)));
-		}
-		else { // page.getRightSiblingId() != null
-			otherPage = (BTreeLeafPage) dirtypages.get(page.getRightSiblingId());
-			assertTrue(field.compare(Op.LESS_THAN_OR_EQ, 
-					otherPage.iterator().next().getField(keyField)));
-		}
-		
-		int totalTuples = page.getNumTuples() + otherPage.getNumTuples();
-		assertEquals(BTreeUtility.getNumTuplesPerPage(2), totalTuples);
-		assertTrue(BTreeUtility.getNumTuplesPerPage(2)/2 == page.getNumTuples() || 
-				BTreeUtility.getNumTuplesPerPage(2)/2 + 1 == page.getNumTuples());
-		assertTrue(BTreeUtility.getNumTuplesPerPage(2)/2 == otherPage.getNumTuples() || 
-				BTreeUtility.getNumTuplesPerPage(2)/2 + 1 == otherPage.getNumTuples());
-		assertEquals(1, parent.getNumEntries());
-	}
-
-	@Test
-	public void testSplitInternalPages() throws Exception {
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		int entriesPerPage = BTreeUtility.getNumEntriesPerPage();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 0, 3 + entriesPerPage);
-		int tableid = empty.getId();
-		int keyField = 0;
-
-		// create the internal page
-		BTreePageId leftPageId = new BTreePageId(tableid, 2, BTreePageId.INTERNAL);
-		BTreeInternalPage leftPage = BTreeUtility.createRandomInternalPage(leftPageId, keyField, BTreePageId.LEAF,
-				0, BTreeUtility.MAX_RAND_VALUE, 3);
-				
-		// create the parent page
-		BTreePageId parentId = new BTreePageId(tableid, 1, BTreePageId.INTERNAL);
-		BTreeInternalPage parent = new BTreeInternalPage(parentId, 
-				BTreeInternalPage.createEmptyPageData(), keyField);
-				
-		// set the pointers
-		leftPage.setParentId(parentId);
-		
-		Field field = new IntField(BTreeUtility.MAX_RAND_VALUE/2);
-		HashMap<PageId, Page> dirtypages = new HashMap<PageId, Page>();
-		dirtypages.put(leftPageId, leftPage);
-		dirtypages.put(parentId, parent);
-		BTreeInternalPage page = empty.splitInternalPage(tid, dirtypages, leftPage, field);
-		BTreeInternalPage otherPage;
-		assertEquals(1, parent.getNumEntries());
-		BTreeEntry parentEntry = parent.iterator().next();
-		if(parentEntry.getLeftChild().equals(page.getId())) {
-			otherPage = (BTreeInternalPage) dirtypages.get(parentEntry.getRightChild());
-			assertTrue(field.compare(Op.LESS_THAN_OR_EQ, 
-					otherPage.iterator().next().getKey()));
-		}
-		else { // parentEntry.getRightChild().equals(page.getId())
-			otherPage = (BTreeInternalPage) dirtypages.get(parentEntry.getLeftChild());
-			assertTrue(field.compare(Op.GREATER_THAN_OR_EQ, 
-					otherPage.reverseIterator().next().getKey()));
-		}
-		
-		int totalEntries = page.getNumEntries() + otherPage.getNumEntries();
-		assertEquals(entriesPerPage - 1, totalEntries);
-		assertTrue(entriesPerPage/2 == page.getNumEntries() || 
-				entriesPerPage/2 - 1 == page.getNumEntries());
-		assertTrue(entriesPerPage/2 == otherPage.getNumEntries() || 
-				entriesPerPage/2 - 1 == otherPage.getNumEntries());
-	}    
-
-	@Test
-	public void testReusePage() throws Exception {
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 0, 3);
-		int tableid = empty.getId();
-		int keyField = 0;
-
-		// create the leaf page
-		HashMap<PageId, Page> dirtypages = new HashMap<PageId, Page>();
-		empty.setEmptyPage(tid, dirtypages, 2);
-		BTreePageId leftPageId = new BTreePageId(tableid, 3, BTreePageId.LEAF);
-		BTreeLeafPage leftPage = BTreeUtility.createRandomLeafPage(leftPageId, 2, keyField, 
-				0, BTreeUtility.MAX_RAND_VALUE);
-				
-		// create the parent page
-		BTreePageId parentId = new BTreePageId(tableid, 1, BTreePageId.INTERNAL);
-		BTreeInternalPage parent = new BTreeInternalPage(parentId, 
-				BTreeInternalPage.createEmptyPageData(), keyField);
-				
-		// set the pointers
-		leftPage.setParentId(parentId);
-		
-		Field field = new IntField(BTreeUtility.MAX_RAND_VALUE/2);
-		dirtypages.put(leftPageId, leftPage);
-		dirtypages.put(parentId, parent);
-		BTreeLeafPage page = empty.splitLeafPage(tid, dirtypages, leftPage, field);
-		assertTrue(page.getLeftSiblingId() != null || page.getRightSiblingId() != null);
-		BTreeLeafPage otherPage;
-		if(page.getLeftSiblingId() != null) {
-			otherPage = (BTreeLeafPage) dirtypages.get(page.getLeftSiblingId());
-		}
-		else { // page.getRightSiblingId() != null
-			otherPage = (BTreeLeafPage) dirtypages.get(page.getRightSiblingId());
-		}
-		
-		assertTrue(page.getId().pageNumber() == 2 || otherPage.getId().pageNumber() == 2);
-	}
-
-	/**
-	 * JUnit suite target
-	 */
-	public static junit.framework.Test suite() {
-		return new JUnit4TestAdapter(BTreeFileInsertTest.class);
-	}
-}
diff -ruN lab3/test/simpledb/BTreeFileReadTest.java lab4/test/simpledb/BTreeFileReadTest.java
--- lab3/test/simpledb/BTreeFileReadTest.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/test/simpledb/BTreeFileReadTest.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,210 +0,0 @@
-package simpledb;
-
-import simpledb.systemtest.SimpleDbTestBase;
-import simpledb.Predicate.Op;
-
-import java.util.*;
-
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-
-import static org.junit.Assert.*;
-import junit.framework.JUnit4TestAdapter;
-
-public class BTreeFileReadTest extends SimpleDbTestBase {
-	private BTreeFile f;
-	private TransactionId tid;
-	private TupleDesc td;
-
-	/**
-	 * Set up initial resources for each unit test.
-	 */
-	@Before
-	public void setUp() throws Exception {
-		f = BTreeUtility.createRandomBTreeFile(2, 20, null, null, 0);
-		td = Utility.getTupleDesc(2);
-		tid = new TransactionId();
-	}
-
-	@After
-	public void tearDown() throws Exception {
-		Database.getBufferPool().transactionComplete(tid);
-	}
-
-	/**
-	 * Unit test for BTreeFile.getId()
-	 */
-	@Test
-	public void getId() throws Exception {
-		int id = f.getId();
-
-		// NOTE(ghuo): the value could be anything. test determinism, at least.
-		assertEquals(id, f.getId());
-		assertEquals(id, f.getId());
-
-		BTreeFile other = BTreeUtility.createRandomBTreeFile(1, 1, null, null, 0);
-		assertTrue(id != other.getId());
-	}
-
-	/**
-	 * Unit test for BTreeFile.getTupleDesc()
-	 */
-	@Test
-	public void getTupleDesc() throws Exception {    	
-		assertEquals(td, f.getTupleDesc());        
-	}
-	/**
-	 * Unit test for BTreeFile.numPages()
-	 */
-	@Test
-	public void numPages() throws Exception {
-		assertEquals(1, f.numPages());
-	}
-
-	/**
-	 * Unit test for BTreeFile.readPage()
-	 */
-	@Test
-	public void readPage() throws Exception {
-		BTreePageId rootPtrPid = new BTreePageId(f.getId(), 0, BTreePageId.ROOT_PTR);
-		BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) f.readPage(rootPtrPid);
-
-		assertEquals(1, rootPtr.getRootId().pageNumber());
-		assertEquals(BTreePageId.LEAF, rootPtr.getRootId().pgcateg());
-
-		BTreePageId pid = new BTreePageId(f.getId(), 1, BTreePageId.LEAF);
-		BTreeLeafPage page = (BTreeLeafPage) f.readPage(pid);
-
-		// NOTE(ghuo): we try not to dig too deeply into the Page API here; we
-		// rely on BTreePageTest for that. perform some basic checks.
-		assertEquals(482, page.getNumEmptySlots());
-		assertTrue(page.isSlotUsed(1));
-		assertFalse(page.isSlotUsed(20));
-	}
-
-	@Test
-	public void testIteratorBasic() throws Exception {
-		BTreeFile smallFile = BTreeUtility.createRandomBTreeFile(2, 3, null,
-				null, 0);
-
-		DbFileIterator it = smallFile.iterator(tid);
-		// Not open yet
-		assertFalse(it.hasNext());
-		try {
-			it.next();
-			fail("expected exception");
-		} catch (NoSuchElementException e) {
-		}
-
-		it.open();
-		int count = 0;
-		while (it.hasNext()) {
-			assertNotNull(it.next());
-			count += 1;
-		}
-		assertEquals(3, count);
-		it.close();
-	}
-
-	@Test
-	public void testIteratorClose() throws Exception {
-		// make more than 1 page. Previous closed iterator would start fetching
-		// from page 1.
-		BTreeFile twoLeafPageFile = BTreeUtility.createRandomBTreeFile(2, 520,
-				null, null, 0);
-
-		// there should be 3 pages - two leaf pages and one internal page (the root)
-		assertEquals(3, twoLeafPageFile.numPages());
-
-		DbFileIterator it = twoLeafPageFile.iterator(tid);
-		it.open();
-		assertTrue(it.hasNext());
-		it.close();
-		try {
-			it.next();
-			fail("expected exception");
-		} catch (NoSuchElementException e) {
-		}
-		// close twice is harmless
-		it.close();
-	}
-
-	/**
-	 * Unit test for BTreeFile.indexIterator()
-	 */
-	@Test public void indexIterator() throws Exception {
-		BTreeFile twoLeafPageFile = BTreeUtility.createBTreeFile(2, 520,
-				null, null, 0);
-		Field f =  new IntField(5);
-
-		// greater than
-		IndexPredicate ipred = new IndexPredicate(Op.GREATER_THAN, f);
-		DbFileIterator it = twoLeafPageFile.indexIterator(tid, ipred);
-		it.open();
-		int count = 0;
-		while(it.hasNext()) {
-			Tuple t = it.next();
-			assertTrue(t.getField(0).compare(Op.GREATER_THAN, f));
-			count++;
-		}
-		assertEquals(515, count);
-		it.close();
-
-		// less than or equal to
-		ipred = new IndexPredicate(Op.LESS_THAN_OR_EQ, f);
-		it = twoLeafPageFile.indexIterator(tid, ipred);
-		it.open();
-		count = 0;
-		while(it.hasNext()) {
-			Tuple t = it.next();
-			assertTrue(t.getField(0).compare(Op.LESS_THAN_OR_EQ, f));
-			count++;
-		}
-		assertEquals(5, count);
-		it.close();
-
-		// equal to
-		ipred = new IndexPredicate(Op.EQUALS, f);
-		it = twoLeafPageFile.indexIterator(tid, ipred);
-		it.open();
-		count = 0;
-		while(it.hasNext()) {
-			Tuple t = it.next();
-			assertTrue(t.getField(0).compare(Op.EQUALS, f));
-			count++;
-		}
-		assertEquals(1, count);
-		it.close();
-
-		// now insert a record and ensure EQUALS returns both records
-		twoLeafPageFile.insertTuple(tid, BTreeUtility.getBTreeTuple(5, 2));
-		ipred = new IndexPredicate(Op.EQUALS, f);
-		it = twoLeafPageFile.indexIterator(tid, ipred);
-		it.open();
-		count = 0;
-		while(it.hasNext()) {
-			Tuple t = it.next();
-			assertTrue(t.getField(0).compare(Op.EQUALS, f));
-			count++;
-		}
-		assertEquals(2, count);
-		it.close();
-
-		// search for a non-existent record
-		f = new IntField(1000);
-		ipred = new IndexPredicate(Op.GREATER_THAN, f);
-		it = twoLeafPageFile.indexIterator(tid, ipred);
-		it.open();
-		assertFalse(it.hasNext());
-		it.close();
-
-	}
-
-	/**
-	 * JUnit suite target
-	 */
-	public static junit.framework.Test suite() {
-		return new JUnit4TestAdapter(BTreeFileReadTest.class);
-	}
-}
diff -ruN lab3/test/simpledb/systemtest/BTreeFileDeleteTest.java lab4/test/simpledb/systemtest/BTreeFileDeleteTest.java
--- lab3/test/simpledb/systemtest/BTreeFileDeleteTest.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/test/simpledb/systemtest/BTreeFileDeleteTest.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,362 +0,0 @@
-package simpledb.systemtest;
-
-import simpledb.systemtest.SimpleDbTestBase;
-import simpledb.Predicate.Op;
-import simpledb.*;
-
-import java.util.*;
-
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-
-import static org.junit.Assert.*;
-import junit.framework.JUnit4TestAdapter;
-
-public class BTreeFileDeleteTest extends SimpleDbTestBase {
-	private TransactionId tid;
-
-	/**
-	 * Set up initial resources for each unit test.
-	 */
-	@Before
-	public void setUp() throws Exception {
-		tid = new TransactionId();
-	}
-
-	@After
-	public void tearDown() throws Exception {
-		Database.getBufferPool().transactionComplete(tid);
-
-		// set the page size back to the default
-		BufferPool.resetPageSize();
-		Database.reset();
-
-	}
-
-	@Test
-	public void testRedistributeLeafPages() throws Exception {
-		// This should create a B+ tree with two partially full leaf pages
-		BTreeFile twoLeafPageFile = BTreeUtility.createRandomBTreeFile(2, 600,
-				null, null, 0);
-		BTreeChecker.checkRep(twoLeafPageFile, tid, new HashMap<PageId, Page>(), true);
-
-		// Delete some tuples from the first page until it gets to minimum occupancy
-		DbFileIterator it = twoLeafPageFile.iterator(tid);
-		it.open();
-		int count = 0;
-		while(it.hasNext() && count < 49) {
-			Tuple t = it.next();
-			BTreePageId pid = (BTreePageId) t.getRecordId().getPageId();
-			BTreeLeafPage p = (BTreeLeafPage) Database.getBufferPool().getPage(
-					tid, pid, Permissions.READ_ONLY);
-			assertEquals(202 + count, p.getNumEmptySlots());
-			twoLeafPageFile.deleteTuple(tid, t);
-			count++;
-		}
-		BTreeChecker.checkRep(twoLeafPageFile,tid, new HashMap<PageId, Page>(), true);
-
-		// deleting a tuple now should bring the page below minimum occupancy and cause 
-		// the tuples to be redistributed
-		Tuple t = it.next();
-		it.close();
-		BTreePageId pid = (BTreePageId) t.getRecordId().getPageId();
-		BTreeLeafPage p = (BTreeLeafPage) Database.getBufferPool().getPage(
-				tid, pid, Permissions.READ_ONLY);
-		assertEquals(251, p.getNumEmptySlots());
-		twoLeafPageFile.deleteTuple(tid, t);
-		assertTrue(p.getNumEmptySlots() <= 251);
-
-		BTreePageId rightSiblingId = p.getRightSiblingId();
-		BTreeLeafPage rightSibling = (BTreeLeafPage) Database.getBufferPool().getPage(
-				tid, rightSiblingId, Permissions.READ_ONLY);
-		assertTrue(rightSibling.getNumEmptySlots() > 202);
-	} 
-
-	@Test
-	public void testMergeLeafPages() throws Exception {
-		// This should create a B+ tree with one full page and two half-full leaf pages
-		BTreeFile threeLeafPageFile = BTreeUtility.createRandomBTreeFile(2, 1005,
-				null, null, 0);
-
-		BTreeChecker.checkRep(threeLeafPageFile,
-				tid, new HashMap<PageId, Page>(), true);
-		// there should be one internal node and 3 leaf nodes
-		assertEquals(4, threeLeafPageFile.numPages());
-
-		// delete the last two tuples
-		DbFileIterator it = threeLeafPageFile.iterator(tid);
-		it.open();
-		Tuple secondToLast = null;
-		Tuple last = null;
-		while(it.hasNext()) {
-			secondToLast = last;
-			last = it.next();
-		}
-		it.close();
-		threeLeafPageFile.deleteTuple(tid, secondToLast);
-		threeLeafPageFile.deleteTuple(tid, last);
-		BTreeChecker.checkRep(threeLeafPageFile, tid, new HashMap<PageId, Page>(), true);
-
-		// confirm that the last two pages have merged successfully
-		BTreePageId rootPtrId = BTreeRootPtrPage.getId(threeLeafPageFile.getId());
-		BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) Database.getBufferPool().getPage(
-				tid, rootPtrId, Permissions.READ_ONLY);
-		BTreeInternalPage root = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, rootPtr.getRootId(), Permissions.READ_ONLY);
-		assertEquals(502, root.getNumEmptySlots());
-		BTreeEntry e = root.iterator().next();
-		BTreeLeafPage leftChild = (BTreeLeafPage) Database.getBufferPool().getPage(
-				tid, e.getLeftChild(), Permissions.READ_ONLY);
-		BTreeLeafPage rightChild = (BTreeLeafPage) Database.getBufferPool().getPage(
-				tid, e.getRightChild(), Permissions.READ_ONLY);
-		assertEquals(0, leftChild.getNumEmptySlots());
-		assertEquals(1, rightChild.getNumEmptySlots());
-		assertTrue(e.getKey().equals(rightChild.iterator().next().getField(0)));
-
-	}
-
-	@Test
-	public void testDeleteRootPage() throws Exception {
-		// This should create a B+ tree with two half-full leaf pages
-		BTreeFile twoLeafPageFile = BTreeUtility.createRandomBTreeFile(2, 503,
-				null, null, 0);
-		// there should be one internal node and 2 leaf nodes
-		assertEquals(3, twoLeafPageFile.numPages());
-		BTreeChecker.checkRep(twoLeafPageFile,
-				tid, new HashMap<PageId, Page>(), true);
-
-		// delete the first two tuples
-		DbFileIterator it = twoLeafPageFile.iterator(tid);
-		it.open();
-		Tuple first = it.next();
-		Tuple second = it.next();
-		it.close();
-		twoLeafPageFile.deleteTuple(tid, first);
-		BTreeChecker.checkRep(twoLeafPageFile, tid, new HashMap<PageId, Page>(), false);
-		twoLeafPageFile.deleteTuple(tid, second);
-		BTreeChecker.checkRep(twoLeafPageFile,tid, new HashMap<PageId, Page>(), false);
-
-		// confirm that the last two pages have merged successfully and replaced the root
-		BTreePageId rootPtrId = BTreeRootPtrPage.getId(twoLeafPageFile.getId());
-		BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) Database.getBufferPool().getPage(
-				tid, rootPtrId, Permissions.READ_ONLY);
-		assertTrue(rootPtr.getRootId().pgcateg() == BTreePageId.LEAF);
-		BTreeLeafPage root = (BTreeLeafPage) Database.getBufferPool().getPage(
-				tid, rootPtr.getRootId(), Permissions.READ_ONLY);
-		assertEquals(1, root.getNumEmptySlots());
-		assertTrue(root.getParentId().equals(rootPtrId));
-	}
-
-	@Test
-	public void testReuseDeletedPages() throws Exception {
-		// this should create a B+ tree with 3 leaf nodes
-		BTreeFile threeLeafPageFile = BTreeUtility.createRandomBTreeFile(2, 1005,
-				null, null, 0);
-		BTreeChecker.checkRep(threeLeafPageFile, tid, new HashMap<PageId, Page>(), true);
-
-		// 3 leaf pages, 1 internal page
-		assertEquals(4, threeLeafPageFile.numPages());
-
-		// delete enough tuples to ensure one page gets deleted
-		DbFileIterator it = threeLeafPageFile.iterator(tid);
-		it.open();
-		for(int i = 0; i < 502; ++i) {
-			Database.getBufferPool().deleteTuple(tid, it.next());
-			it.rewind();
-		}
-		it.close();
-
-		// now there should be 2 leaf pages, 1 internal page, 1 unused leaf page, 1 header page
-		assertEquals(5, threeLeafPageFile.numPages());
-
-		// insert enough tuples to ensure one of the leaf pages splits
-		for(int i = 0; i < 502; ++i) {
-			Database.getBufferPool().insertTuple(tid, threeLeafPageFile.getId(),
-					BTreeUtility.getBTreeTuple(i, 2));
-		}
-
-		// now there should be 3 leaf pages, 1 internal page, and 1 header page
-		assertEquals(5, threeLeafPageFile.numPages());
-		BTreeChecker.checkRep(threeLeafPageFile, tid, new HashMap<PageId, Page>(), true);
-	}
-
-	@Test
-	public void testRedistributeInternalPages() throws Exception {
-		// This should create a B+ tree with two nodes in the second tier
-		// and 602 nodes in the third tier
-		BTreeFile bf = BTreeUtility.createRandomBTreeFile(2, 302204,
-				null, null, 0);
-		BTreeChecker.checkRep(bf, tid, new HashMap<PageId, Page>(), true);
-
-		Database.resetBufferPool(500); // we need more pages for this test
-
-		BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) Database.getBufferPool().getPage(
-				tid, BTreeRootPtrPage.getId(bf.getId()), Permissions.READ_ONLY);
-		BTreeInternalPage root = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, rootPtr.getRootId(), Permissions.READ_ONLY);
-		assertEquals(502, root.getNumEmptySlots());
-
-		BTreeEntry rootEntry = root.iterator().next();
-		BTreeInternalPage leftChild = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, rootEntry.getLeftChild(), Permissions.READ_ONLY);
-		BTreeInternalPage rightChild = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, rootEntry.getRightChild(), Permissions.READ_ONLY);
-
-		// delete from the right child to test redistribution from the left
-		Iterator<BTreeEntry> it = rightChild.iterator();
-		int count = 0;
-		// bring the right internal page to minimum occupancy
-		while(it.hasNext() && count < 49 * 502 + 1) {
-			BTreeLeafPage leaf = (BTreeLeafPage) Database.getBufferPool().getPage(tid, 
-					it.next().getLeftChild(), Permissions.READ_ONLY);
-			Tuple t = leaf.iterator().next();
-			Database.getBufferPool().deleteTuple(tid, t);
-			it = rightChild.iterator();
-			count++;
-		}
-
-		// deleting a page of tuples should bring the internal page below minimum 
-		// occupancy and cause the entries to be redistributed
-		assertEquals(252, rightChild.getNumEmptySlots());
-		count = 0;
-		while(it.hasNext() && count < 502) {
-			BTreeLeafPage leaf = (BTreeLeafPage) Database.getBufferPool().getPage(tid, 
-					it.next().getLeftChild(), Permissions.READ_ONLY);
-			Tuple t = leaf.iterator().next();
-			Database.getBufferPool().deleteTuple(tid, t);
-			it = rightChild.iterator();
-			count++;
-		}
-		assertTrue(leftChild.getNumEmptySlots() > 203);
-		assertTrue(rightChild.getNumEmptySlots() <= 252);
-		BTreeChecker.checkRep(bf, tid, new HashMap<PageId, Page>(), true);
-
-		// sanity check that the entries make sense
-		BTreeEntry lastLeftEntry = null;
-		it = leftChild.iterator();
-		while(it.hasNext()) {
-			lastLeftEntry = it.next();
-		}
-		rootEntry = root.iterator().next();
-		BTreeEntry firstRightEntry = rightChild.iterator().next();
-		assertTrue(lastLeftEntry.getKey().compare(Op.LESS_THAN_OR_EQ, rootEntry.getKey()));
-		assertTrue(rootEntry.getKey().compare(Op.LESS_THAN_OR_EQ, firstRightEntry.getKey()));
-	}
-
-	@Test
-	public void testDeleteInternalPages() throws Exception {
-    	// For this test we will decrease the size of the Buffer Pool pages
-    	BufferPool.setPageSize(1024);
-		
-		// This should create a B+ tree with three nodes in the second tier
-		// and 252 nodes in the third tier
-    	// (124 entries per internal/leaf page, 125 children per internal page ->
-    	// 251*124 + 1 = 31125)
-		BTreeFile bigFile = BTreeUtility.createRandomBTreeFile(2, 31125,
-				null, null, 0);
-
-		BTreeChecker.checkRep(bigFile, tid, new HashMap<PageId, Page>(), true);
-
-		Database.resetBufferPool(500); // we need more pages for this test
-
-		BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) Database.getBufferPool().getPage(
-				tid, BTreeRootPtrPage.getId(bigFile.getId()), Permissions.READ_ONLY);
-		BTreeInternalPage root = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, rootPtr.getRootId(), Permissions.READ_ONLY);
-		assertEquals(122, root.getNumEmptySlots());
-
-		BTreeEntry e = root.iterator().next();
-		BTreeInternalPage leftChild = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, e.getLeftChild(), Permissions.READ_ONLY);
-		BTreeInternalPage rightChild = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, e.getRightChild(), Permissions.READ_ONLY);
-
-		// Delete tuples causing leaf pages to merge until the first internal page 
-		// gets to minimum occupancy
-		DbFileIterator it = bigFile.iterator(tid);
-		it.open();
-		int count = 0;
-		Database.getBufferPool().deleteTuple(tid, it.next());
-		it.rewind();
-		while(count < 62) {
-			assertEquals(count, leftChild.getNumEmptySlots());
-			for(int i = 0; i < 124; ++i) {
-				Database.getBufferPool().deleteTuple(tid, it.next());
-				it.rewind();
-			}
-			count++;
-		}
-
-		BTreeChecker.checkRep(bigFile, tid, new HashMap<PageId, Page>(), true);
-
-		// deleting a page of tuples should bring the internal page below minimum 
-		// occupancy and cause the entries to be redistributed
-		assertEquals(62, leftChild.getNumEmptySlots());
-		for(int i = 0; i < 124; ++i) {
-			Database.getBufferPool().deleteTuple(tid, it.next());
-			it.rewind();
-		}
-
-		BTreeChecker.checkRep(bigFile, tid, new HashMap<PageId, Page>(), true);
-
-		assertEquals(62, leftChild.getNumEmptySlots());
-		assertEquals(62, rightChild.getNumEmptySlots());
-
-		// deleting another page of tuples should bring the page below minimum occupancy 
-		// again but this time cause it to merge with its right sibling 
-		for(int i = 0; i < 124; ++i) {
-			Database.getBufferPool().deleteTuple(tid, it.next());
-			it.rewind();
-		}
-
-		// confirm that the pages have merged
-		assertEquals(123, root.getNumEmptySlots());
-		e = root.iterator().next();
-		leftChild = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, e.getLeftChild(), Permissions.READ_ONLY);
-		rightChild = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, e.getRightChild(), Permissions.READ_ONLY);
-		assertEquals(0, leftChild.getNumEmptySlots());
-		assertTrue(e.getKey().compare(Op.LESS_THAN_OR_EQ, rightChild.iterator().next().getKey()));
-
-		// Delete tuples causing leaf pages to merge until the first internal page 
-		// gets below minimum occupancy and causes the entries to be redistributed
-		count = 0;
-		while(count < 62) {
-			assertEquals(count, leftChild.getNumEmptySlots());
-			for(int i = 0; i < 124; ++i) {
-				Database.getBufferPool().deleteTuple(tid, it.next());
-				it.rewind();
-			}
-			count++;
-		}
-
-		// deleting another page of tuples should bring the page below minimum occupancy 
-		// and cause it to merge with the right sibling to replace the root
-		for(int i = 0; i < 124; ++i) {
-			Database.getBufferPool().deleteTuple(tid, it.next());
-			it.rewind();
-		}
-
-		// confirm that the last two internal pages have merged successfully and 
-		// replaced the root
-		BTreePageId rootPtrId = BTreeRootPtrPage.getId(bigFile.getId());
-		rootPtr = (BTreeRootPtrPage) Database.getBufferPool().getPage(
-				tid, rootPtrId, Permissions.READ_ONLY);
-		assertTrue(rootPtr.getRootId().pgcateg() == BTreePageId.INTERNAL);
-		root = (BTreeInternalPage) Database.getBufferPool().getPage(
-				tid, rootPtr.getRootId(), Permissions.READ_ONLY);
-		assertEquals(0, root.getNumEmptySlots());
-		assertTrue(root.getParentId().equals(rootPtrId));
-
-		it.close();
-	}    
-
-	/**
-	 * JUnit suite target
-	 */
-	public static junit.framework.Test suite() {
-		return new JUnit4TestAdapter(BTreeFileDeleteTest.class);
-	}
-}
\ No newline at end of file
diff -ruN lab3/test/simpledb/systemtest/BTreeFileInsertTest.java lab4/test/simpledb/systemtest/BTreeFileInsertTest.java
--- lab3/test/simpledb/systemtest/BTreeFileInsertTest.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/test/simpledb/systemtest/BTreeFileInsertTest.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,287 +0,0 @@
-package simpledb.systemtest;
-
-import simpledb.systemtest.SimpleDbTestBase;
-import simpledb.Predicate.Op;
-import simpledb.*;
-
-import java.io.File;
-import java.util.*;
-
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-
-import static org.junit.Assert.*;
-import junit.framework.JUnit4TestAdapter;
-
-public class BTreeFileInsertTest extends SimpleDbTestBase {
-	private TransactionId tid;
-	
-	/**
-	 * Set up initial resources for each unit test.
-	 */
-	@Before
-	public void setUp() throws Exception {
-		tid = new TransactionId();
-	}
-
-	@After
-	public void tearDown() throws Exception {
-		Database.getBufferPool().transactionComplete(tid);
-		
-		// set the page size back to the default
-		BufferPool.resetPageSize();
-		Database.reset();
-	}
-
-	@Test public void addTuple() throws Exception {
-		// create an empty B+ tree file keyed on the second field of a 2-field tuple
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 1);
-
-		Tuple tup = null;
-		// we should be able to add 502 tuples on one page
-		for (int i = 0; i < 502; ++i) {
-			tup = BTreeUtility.getBTreeTuple(i, 2);
-			empty.insertTuple(tid, tup);
-			assertEquals(1, empty.numPages());
-		}
-
-		// the next 251 tuples should live on page 2 since they are greater than
-		// all existing tuples in the file
-		for (int i = 502; i < 753; ++i) {
-			tup = BTreeUtility.getBTreeTuple(i, 2);
-			empty.insertTuple(tid, tup);
-			assertEquals(3, empty.numPages());
-		}
-
-		// one more insert greater than 502 should cause page 2 to split
-		tup = BTreeUtility.getBTreeTuple(753, 2);
-		empty.insertTuple(tid, tup);
-		assertEquals(4, empty.numPages());
-
-		// now make sure the records are sorted on the key field
-		DbFileIterator it = empty.iterator(tid);
-		it.open();
-		int prev = -1;
-		while(it.hasNext()) {
-			Tuple t = it.next();
-			int value = ((IntField) t.getField(0)).getValue();
-			assertTrue(value >= prev);
-			prev = value;
-		} 
-	}
-
-	@Test public void addDuplicateTuples() throws Exception {
-		// create an empty B+ tree file keyed on the second field of a 2-field tuple
-		File emptyFile = File.createTempFile("empty", ".dat");
-		emptyFile.deleteOnExit();
-		Database.reset();
-		BTreeFile empty = BTreeUtility.createEmptyBTreeFile(emptyFile.getAbsolutePath(), 2, 1);
-
-		Tuple tup = null;
-
-		BTreeChecker.checkRep(empty, tid, new HashMap<PageId, Page>(), true);
-
-		// add a bunch of identical tuples
-		for (int i = 0; i < 5; ++i) {
-			for(int j = 0; j < 600; ++j) {
-				tup = BTreeUtility.getBTreeTuple(i, 2);
-				empty.insertTuple(tid, tup);
-				// BTreeChecker.checkRep(empty, tid, new HashMap<PageId, Page>(), true);
-			}
-
-		}
-
-		BTreeChecker.checkRep(empty, tid, new HashMap<PageId, Page>(), true);
-
-		// now search for some ranges and make sure we find all the tuples
-		IndexPredicate ipred = new IndexPredicate(Op.EQUALS, new IntField(3));
-		DbFileIterator it = empty.indexIterator(tid, ipred);
-		it.open();
-		int count = 0;
-		while(it.hasNext()) {
-			it.next();
-			count++;
-		} 
-		assertEquals(600, count);
-
-		ipred = new IndexPredicate(Op.GREATER_THAN_OR_EQ, new IntField(2));
-		it = empty.indexIterator(tid, ipred);
-		it.open();
-		count = 0;
-		while(it.hasNext()) {
-			it.next();
-			count++;
-		} 
-		assertEquals(1800, count);
-
-		ipred = new IndexPredicate(Op.LESS_THAN, new IntField(2));
-		it = empty.indexIterator(tid, ipred);
-		it.open();
-		count = 0;
-		while(it.hasNext()) {
-			it.next();
-			count++;
-		} 
-		assertEquals(1200, count);
-	}
-
-	@Test
-	public void testSplitLeafPage() throws Exception {
-		// This should create a B+ tree with one full page
-		BTreeFile onePageFile = BTreeUtility.createRandomBTreeFile(2, 502,
-				null, null, 0);
-
-		// there should be 1 leaf page
-		assertEquals(1, onePageFile.numPages());
-
-		// now insert a tuple
-		Database.getBufferPool().insertTuple(tid, onePageFile.getId(), BTreeUtility.getBTreeTuple(5000, 2));
-
-		// there should now be 2 leaf pages + 1 internal node
-		assertEquals(3, onePageFile.numPages());
-
-		// the root node should be an internal node and have 2 children (1 entry)
-		BTreePageId rootPtrPid = new BTreePageId(onePageFile.getId(), 0, BTreePageId.ROOT_PTR);
-		BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) Database.getBufferPool().getPage(tid, rootPtrPid, Permissions.READ_ONLY);
-		BTreePageId rootId = rootPtr.getRootId();
-		assertEquals(rootId.pgcateg(), BTreePageId.INTERNAL);
-		BTreeInternalPage root = (BTreeInternalPage) Database.getBufferPool().getPage(tid, rootId, Permissions.READ_ONLY);
-		assertEquals(502, root.getNumEmptySlots());
-
-		// each child should have half of the records
-		Iterator<BTreeEntry> it = root.iterator();
-		assertTrue(it.hasNext());
-		BTreeEntry e = it.next();
-		BTreeLeafPage leftChild = (BTreeLeafPage) Database.getBufferPool().getPage(tid, e.getLeftChild(), Permissions.READ_ONLY);
-		BTreeLeafPage rightChild = (BTreeLeafPage) Database.getBufferPool().getPage(tid, e.getRightChild(), Permissions.READ_ONLY);
-		assertTrue(leftChild.getNumEmptySlots() <= 251);
-		assertTrue(rightChild.getNumEmptySlots() <= 251);
-
-	}
-
-	@Test
-	public void testSplitRootPage() throws Exception {
-		// This should create a packed B+ tree with no empty slots
-		// There are 503 keys per internal page (504 children) and 502 tuples per leaf page
-		// 504 * 502 = 253008
-		BTreeFile bigFile = BTreeUtility.createRandomBTreeFile(2, 253008,
-				null, null, 0);
-
-		// we will need more room in the buffer pool for this test
-		Database.resetBufferPool(500);		
-
-		// there should be 504 leaf pages + 1 internal node
-		assertEquals(505, bigFile.numPages());
-
-		// now insert a tuple
-		Database.getBufferPool().insertTuple(tid, bigFile.getId(), BTreeUtility.getBTreeTuple(10, 2));
-
-		// there should now be 505 leaf pages + 3 internal nodes
-		assertEquals(508, bigFile.numPages());
-
-		// the root node should be an internal node and have 2 children (1 entry)
-		BTreePageId rootPtrPid = new BTreePageId(bigFile.getId(), 0, BTreePageId.ROOT_PTR);
-		BTreeRootPtrPage rootPtr = (BTreeRootPtrPage) Database.getBufferPool().getPage(tid, rootPtrPid, Permissions.READ_ONLY);
-		BTreePageId rootId = rootPtr.getRootId();
-		assertEquals(rootId.pgcateg(), BTreePageId.INTERNAL);
-		BTreeInternalPage root = (BTreeInternalPage) Database.getBufferPool().getPage(tid, rootId, Permissions.READ_ONLY);
-		assertEquals(502, root.getNumEmptySlots());
-
-		// each child should have half of the entries
-		Iterator<BTreeEntry> it = root.iterator();
-		assertTrue(it.hasNext());
-		BTreeEntry e = it.next();
-		BTreeInternalPage leftChild = (BTreeInternalPage) Database.getBufferPool().getPage(tid, e.getLeftChild(), Permissions.READ_ONLY);
-		BTreeInternalPage rightChild = (BTreeInternalPage) Database.getBufferPool().getPage(tid, e.getRightChild(), Permissions.READ_ONLY);
-		assertTrue(leftChild.getNumEmptySlots() <= 252);
-		assertTrue(rightChild.getNumEmptySlots() <= 252);
-
-		// now insert some random tuples and make sure we can find them
-		Random rand = new Random();
-		for(int i = 0; i < 100; i++) {
-			int item = rand.nextInt(BTreeUtility.MAX_RAND_VALUE);
-			Tuple t = BTreeUtility.getBTreeTuple(item, 2);
-			Database.getBufferPool().insertTuple(tid, bigFile.getId(), t);
-
-			IndexPredicate ipred = new IndexPredicate(Op.EQUALS, t.getField(0));
-			DbFileIterator fit = bigFile.indexIterator(tid, ipred);
-			fit.open();
-			boolean found = false;
-			while(fit.hasNext()) {
-				if(fit.next().equals(t)) {
-					found = true;
-					break;
-				}
-			}
-			fit.close();
-			assertTrue(found);
-		}
-	}
-
-	@Test
-	public void testSplitInternalPage() throws Exception {
-		// For this test we will decrease the size of the Buffer Pool pages
-    	BufferPool.setPageSize(1024);
-
-		// This should create a B+ tree with a packed second tier of internal pages
-		// and packed third tier of leaf pages
-    	// (124 entries per internal/leaf page, 125 children per internal page ->
-    	// 125*2*124 = 31000)
-		BTreeFile bigFile = BTreeUtility.createRandomBTreeFile(2, 31000,
-				null, null, 0);
-		
-		// we will need more room in the buffer pool for this test
-		Database.resetBufferPool(1000);
-
-		// there should be 250 leaf pages + 3 internal nodes
-		assertEquals(253, bigFile.numPages());
-
-		// now insert some random tuples and make sure we can find them
-		Random rand = new Random();
-		for(int i = 0; i < 100; i++) {
-			int item = rand.nextInt(BTreeUtility.MAX_RAND_VALUE);
-			Tuple t = BTreeUtility.getBTreeTuple(item, 2);
-			Database.getBufferPool().insertTuple(tid, bigFile.getId(), t);
-
-			IndexPredicate ipred = new IndexPredicate(Op.EQUALS, t.getField(0));
-			DbFileIterator fit = bigFile.indexIterator(tid, ipred);
-			fit.open();
-			boolean found = false;
-			while(fit.hasNext()) {
-				if(fit.next().equals(t)) {
-					found = true;
-					break;
-				}
-			}
-			fit.close();
-			assertTrue(found);
-		}
-
-		// now make sure we have 31100 records and they are all in sorted order
-		DbFileIterator fit = bigFile.iterator(tid);
-		int count = 0;
-		Tuple prev = null;
-		fit.open();
-		while(fit.hasNext()) {
-			Tuple tup = fit.next();
-			if(prev != null)
-				assertTrue(tup.getField(0).compare(Op.GREATER_THAN_OR_EQ, prev.getField(0)));
-			prev = tup;
-			count++;
-		}
-		fit.close();
-		assertEquals(31100, count);	
-		
-	}
-
-	/**
-	 * JUnit suite target
-	 */
-	public static junit.framework.Test suite() {
-		return new JUnit4TestAdapter(BTreeFileInsertTest.class);
-	}
-}
diff -ruN lab3/test/simpledb/systemtest/BTreeScanTest.java lab4/test/simpledb/systemtest/BTreeScanTest.java
--- lab3/test/simpledb/systemtest/BTreeScanTest.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/test/simpledb/systemtest/BTreeScanTest.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,289 +0,0 @@
-package simpledb.systemtest;
-
-import simpledb.systemtest.SystemTestUtil;
-
-import static org.junit.Assert.*;
-
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.NoSuchElementException;
-import java.util.Random;
-import java.util.Iterator;
-
-import org.junit.Test;
-import org.junit.Before;
-
-import simpledb.*;
-import simpledb.Predicate.Op;
-
-/**
- * Dumps the contents of a table.
- * args[1] is the number of columns.  E.g., if it's 5, then BTreeScanTest will end
- * up dumping the contents of f4.0.txt.
- */
-public class BTreeScanTest extends SimpleDbTestBase {
-    private final static Random r = new Random();
-    
-    /** Tests the scan operator for a table with the specified dimensions. */
-    private void validateScan(int[] columnSizes, int[] rowSizes)
-            throws IOException, DbException, TransactionAbortedException {
-    	TransactionId tid = new TransactionId();
-    	for (int columns : columnSizes) {
-    		int keyField = r.nextInt(columns);
-            for (int rows : rowSizes) {
-                ArrayList<ArrayList<Integer>> tuples = new ArrayList<ArrayList<Integer>>();
-                BTreeFile f = BTreeUtility.createRandomBTreeFile(columns, rows, null, tuples, keyField);
-                BTreeScan scan = new BTreeScan(tid, f.getId(), "table", null);
-                SystemTestUtil.matchTuples(scan, tuples);
-                Database.resetBufferPool(BufferPool.DEFAULT_PAGES);
-            }
-        }
-    	Database.getBufferPool().transactionComplete(tid);
-    }
-    
-    // comparator to sort Tuples by key field
-    private static class TupleComparator implements Comparator<ArrayList<Integer>> {
-        private int keyField;
-        
-        public TupleComparator(int keyField) {
-        	this.keyField = keyField;
-        }
-        
-    	public int compare(ArrayList<Integer> t1, ArrayList<Integer> t2) {
-            int cmp = 0;
-            if(t1.get(keyField) < t2.get(keyField)) {
-            	cmp = -1;
-            }
-            else if(t1.get(keyField) > t2.get(keyField)) {
-            	cmp = 1;
-            }
-            return cmp;
-        }
-    }
-    
-    /** Counts the number of readPage operations. */
-    class InstrumentedBTreeFile extends BTreeFile {
-        public InstrumentedBTreeFile(File f, int keyField, TupleDesc td) {
-            super(f, keyField, td);
-        }
-
-        @Override
-        public Page readPage(PageId pid) throws NoSuchElementException {
-            readCount += 1;
-            return super.readPage(pid);
-        }
-
-        public int readCount = 0;
-    }
-    
-    /** Scan 1-4 columns. */
-    @Test public void testSmall() throws IOException, DbException, TransactionAbortedException {
-        int[] columnSizes = new int[]{1, 2, 3, 4};
-        int[] rowSizes =
-                new int[]{0, 1, 2, 511, 512, 513, 1023, 1024, 1025, 4096 + r.nextInt(4096)};
-        validateScan(columnSizes, rowSizes);
-    }
-
-    /** Test that rewinding a BTreeScan iterator works. */
-    @Test public void testRewind() throws IOException, DbException, TransactionAbortedException {
-        ArrayList<ArrayList<Integer>> tuples = new ArrayList<ArrayList<Integer>>();
-        int keyField = r.nextInt(2);
-        BTreeFile f = BTreeUtility.createRandomBTreeFile(2, 1000, null, tuples, keyField);
-        Collections.sort(tuples, new TupleComparator(keyField));
-        
-        TransactionId tid = new TransactionId();
-        BTreeScan scan = new BTreeScan(tid, f.getId(), "table", null);
-        scan.open();
-        for (int i = 0; i < 100; ++i) {
-            assertTrue(scan.hasNext());
-            Tuple t = scan.next();
-            assertEquals(tuples.get(i), SystemTestUtil.tupleToList(t));
-        }
-
-        scan.rewind();
-        for (int i = 0; i < 100; ++i) {
-            assertTrue(scan.hasNext());
-            Tuple t = scan.next();
-            assertEquals(tuples.get(i), SystemTestUtil.tupleToList(t));
-        }
-        scan.close();
-        Database.getBufferPool().transactionComplete(tid);
-    }
-    
-    /** Test that rewinding a BTreeScan iterator works with predicates. */
-    @Test public void testRewindPredicates() throws IOException, DbException, TransactionAbortedException {
-    	// Create the table
-        ArrayList<ArrayList<Integer>> tuples = new ArrayList<ArrayList<Integer>>();
-        int keyField = r.nextInt(3);
-        BTreeFile f = BTreeUtility.createRandomBTreeFile(3, 1000, null, tuples, keyField);
-        Collections.sort(tuples, new TupleComparator(keyField));
-                
-        // EQUALS
-        TransactionId tid = new TransactionId();
-        ArrayList<ArrayList<Integer>> tuplesFiltered = new ArrayList<ArrayList<Integer>>();
-        IndexPredicate ipred = new IndexPredicate(Op.EQUALS, new IntField(r.nextInt(BTreeUtility.MAX_RAND_VALUE)));
-        Iterator<ArrayList<Integer>> it = tuples.iterator();
-        while(it.hasNext()) {
-        	ArrayList<Integer> tup = it.next();
-        	if(tup.get(keyField) == ((IntField) ipred.getField()).getValue()) {
-        		tuplesFiltered.add(tup);
-        	}
-        }
-        
-        BTreeScan scan = new BTreeScan(tid, f.getId(), "table", ipred);
-        scan.open();
-        for (int i = 0; i < tuplesFiltered.size(); ++i) {
-            assertTrue(scan.hasNext());
-            Tuple t = scan.next();
-            assertEquals(tuplesFiltered.get(i), SystemTestUtil.tupleToList(t));
-        }
-
-        scan.rewind();
-        for (int i = 0; i < tuplesFiltered.size(); ++i) {
-            assertTrue(scan.hasNext());
-            Tuple t = scan.next();
-            assertEquals(tuplesFiltered.get(i), SystemTestUtil.tupleToList(t));
-        }
-        scan.close();
-        
-        // LESS_THAN
-        tuplesFiltered.clear();
-        ipred = new IndexPredicate(Op.LESS_THAN, new IntField(r.nextInt(BTreeUtility.MAX_RAND_VALUE)));
-        it = tuples.iterator();
-        while(it.hasNext()) {
-        	ArrayList<Integer> tup = it.next();
-        	if(tup.get(keyField) < ((IntField) ipred.getField()).getValue()) {
-        		tuplesFiltered.add(tup);
-        	}
-        }
-        
-        scan = new BTreeScan(tid, f.getId(), "table", ipred);
-        scan.open();
-        for (int i = 0; i < tuplesFiltered.size(); ++i) {
-            assertTrue(scan.hasNext());
-            Tuple t = scan.next();
-            assertEquals(tuplesFiltered.get(i), SystemTestUtil.tupleToList(t));
-        }
-
-        scan.rewind();
-        for (int i = 0; i < tuplesFiltered.size(); ++i) {
-            assertTrue(scan.hasNext());
-            Tuple t = scan.next();
-            assertEquals(tuplesFiltered.get(i), SystemTestUtil.tupleToList(t));
-        }
-        scan.close();
-        
-        // GREATER_THAN
-        tuplesFiltered.clear();
-        ipred = new IndexPredicate(Op.GREATER_THAN_OR_EQ, new IntField(r.nextInt(BTreeUtility.MAX_RAND_VALUE)));
-        it = tuples.iterator();
-        while(it.hasNext()) {
-        	ArrayList<Integer> tup = it.next();
-        	if(tup.get(keyField) >= ((IntField) ipred.getField()).getValue()) {
-        		tuplesFiltered.add(tup);
-        	}
-        }
-        
-        scan = new BTreeScan(tid, f.getId(), "table", ipred);
-        scan.open();
-        for (int i = 0; i < tuplesFiltered.size(); ++i) {
-            assertTrue(scan.hasNext());
-            Tuple t = scan.next();
-            assertEquals(tuplesFiltered.get(i), SystemTestUtil.tupleToList(t));
-        }
-
-        scan.rewind();
-        for (int i = 0; i < tuplesFiltered.size(); ++i) {
-            assertTrue(scan.hasNext());
-            Tuple t = scan.next();
-            assertEquals(tuplesFiltered.get(i), SystemTestUtil.tupleToList(t));
-        }
-        scan.close();
-        Database.getBufferPool().transactionComplete(tid);
-    }
-    
-    /** Test that scanning the BTree for predicates does not read all the pages */
-    @Test public void testReadPage() throws Exception {
-    	// Create the table
-        final int LEAF_PAGES = 30;
-    	
-    	ArrayList<ArrayList<Integer>> tuples = new ArrayList<ArrayList<Integer>>();
-        int keyField = 0;
-        BTreeFile f = BTreeUtility.createBTreeFile(2, LEAF_PAGES*502, null, tuples, keyField);
-        Collections.sort(tuples, new TupleComparator(keyField));
-        TupleDesc td = Utility.getTupleDesc(2);
-        InstrumentedBTreeFile table = new InstrumentedBTreeFile(f.getFile(), keyField, td);
-        Database.getCatalog().addTable(table, SystemTestUtil.getUUID());
-        
-        // EQUALS
-        TransactionId tid = new TransactionId();
-        ArrayList<ArrayList<Integer>> tuplesFiltered = new ArrayList<ArrayList<Integer>>();
-        IndexPredicate ipred = new IndexPredicate(Op.EQUALS, new IntField(r.nextInt(LEAF_PAGES*502)));
-        Iterator<ArrayList<Integer>> it = tuples.iterator();
-        while(it.hasNext()) {
-        	ArrayList<Integer> tup = it.next();
-        	if(tup.get(keyField) == ((IntField) ipred.getField()).getValue()) {
-        		tuplesFiltered.add(tup);
-        	}
-        }
-        
-        Database.resetBufferPool(BufferPool.DEFAULT_PAGES);
-        table.readCount = 0;
-        BTreeScan scan = new BTreeScan(tid, f.getId(), "table", ipred);
-        SystemTestUtil.matchTuples(scan, tuplesFiltered);
-        // root pointer page + root + leaf page (possibly 2 leaf pages)
-        assertTrue(table.readCount == 3 || table.readCount == 4);
-        
-        // LESS_THAN
-        tuplesFiltered.clear();
-        ipred = new IndexPredicate(Op.LESS_THAN, new IntField(r.nextInt(LEAF_PAGES*502)));
-        it = tuples.iterator();
-        while(it.hasNext()) {
-        	ArrayList<Integer> tup = it.next();
-        	if(tup.get(keyField) < ((IntField) ipred.getField()).getValue()) {
-        		tuplesFiltered.add(tup);
-        	}
-        }
-        
-        Database.resetBufferPool(BufferPool.DEFAULT_PAGES);
-        table.readCount = 0;
-        scan = new BTreeScan(tid, f.getId(), "table", ipred);
-        SystemTestUtil.matchTuples(scan, tuplesFiltered);
-        // root pointer page + root + leaf pages
-        int leafPageCount = tuplesFiltered.size()/502;
-        if(leafPageCount < LEAF_PAGES)
-        	leafPageCount++; // +1 for next key locking
-        assertEquals(leafPageCount + 2, table.readCount);
-        
-        // GREATER_THAN
-        tuplesFiltered.clear();
-        ipred = new IndexPredicate(Op.GREATER_THAN_OR_EQ, new IntField(r.nextInt(LEAF_PAGES*502)));
-        it = tuples.iterator();
-        while(it.hasNext()) {
-        	ArrayList<Integer> tup = it.next();
-        	if(tup.get(keyField) >= ((IntField) ipred.getField()).getValue()) {
-        		tuplesFiltered.add(tup);
-        	}
-        }
-        
-        Database.resetBufferPool(BufferPool.DEFAULT_PAGES);
-        table.readCount = 0;
-        scan = new BTreeScan(tid, f.getId(), "table", ipred);
-        SystemTestUtil.matchTuples(scan, tuplesFiltered);
-        // root pointer page + root + leaf pages
-        leafPageCount = tuplesFiltered.size()/502;
-        if(leafPageCount < LEAF_PAGES)
-        	leafPageCount++; // +1 for next key locking
-        assertEquals(leafPageCount + 2, table.readCount);
-        
-        Database.getBufferPool().transactionComplete(tid);
-    }
-
-    /** Make test compatible with older version of ant. */
-    public static junit.framework.Test suite() {
-        return new junit.framework.JUnit4TestAdapter(BTreeScanTest.class);
-    }
-}
diff -ruN lab3/test/simpledb/systemtest/LogTest.java lab4/test/simpledb/systemtest/LogTest.java
--- lab3/test/simpledb/systemtest/LogTest.java	2016-11-02 22:06:55.000000000 -0500
+++ lab4/test/simpledb/systemtest/LogTest.java	1969-12-31 18:00:00.000000000 -0600
@@ -1,434 +0,0 @@
-package simpledb.systemtest;
-
-import java.io.*;
-import java.util.*;
-
-import org.junit.Test;
-
-import simpledb.*;
-
-import static org.junit.Assert.*;
-
-/**
- * Test logging, aborts, and recovery.
- */
-public class LogTest extends SimpleDbTestBase {
-    File file1;
-    File file2;
-    HeapFile hf1;
-    HeapFile hf2;
-
-    void insertRow(HeapFile hf, Transaction t, int v1, int v2)
-        throws DbException, TransactionAbortedException {
-        // Create a row to insert
-        TupleDesc twoIntColumns = Utility.getTupleDesc(2);
-        Tuple value = new Tuple(twoIntColumns);
-        value.setField(0, new IntField(v1));
-        value.setField(1, new IntField(v2));
-        TupleIterator insertRow = new TupleIterator(Utility.getTupleDesc(2), Arrays.asList(new Tuple[]{value}));
-
-        // Insert the row
-        Insert insert = new Insert(t.getId(), insertRow, hf.getId());
-        insert.open();
-        Tuple result = insert.next();
-        assertEquals(SystemTestUtil.SINGLE_INT_DESCRIPTOR, result.getTupleDesc());
-        assertEquals(1, ((IntField)result.getField(0)).getValue());
-        assertFalse(insert.hasNext());
-        insert.close();
-    }
-
-    // check that the specified tuple is, or is not, present
-    void look(HeapFile hf, Transaction t, int v1, boolean present)
-        throws DbException, TransactionAbortedException {
-        int count = 0;
-        SeqScan scan = new SeqScan(t.getId(), hf.getId(), "");
-        scan.open();
-        while(scan.hasNext()){
-            Tuple tu = scan.next();
-            int x = ((IntField)tu.getField(0)).getValue();
-            if(x == v1)
-                count = count + 1;
-        }
-        scan.close();
-        if(count > 1)
-            throw new RuntimeException("LogTest: tuple repeated");
-        if(present && count < 1)
-            throw new RuntimeException("LogTest: tuple missing");
-        if(present == false && count > 0)
-            throw new RuntimeException("LogTest: tuple present but shouldn't be");
-    }
-
-    // insert tuples
-    void doInsert(HeapFile hf, int t1, int t2)
-        throws DbException, TransactionAbortedException, IOException {
-        Transaction t = new Transaction();
-        t.start();
-        if(t1 != -1)
-            insertRow(hf, t, t1, 0);
-        Database.getBufferPool().flushAllPages();
-        if(t2 != -1)
-            insertRow(hf, t, t2, 0);
-        t.commit();
-    }
-
-    void abort(Transaction t)
-        throws DbException, TransactionAbortedException, IOException {
-        // t.transactionComplete(true); // abort
-        Database.getBufferPool().flushAllPages(); // XXX defeat NO-STEAL-based abort
-        Database.getLogFile().logAbort(t.getId()); // does rollback too
-        Database.getBufferPool().flushAllPages(); // prevent NO-STEAL-based abort from
-                                                  // un-doing the rollback
-        Database.getBufferPool().transactionComplete(t.getId(), false); // release locks
-    }
-
-    // insert tuples
-    // force dirty pages to disk, defeating NO-STEAL
-    // abort
-    void dontInsert(HeapFile hf, int t1, int t2)
-        throws DbException, TransactionAbortedException, IOException {
-        Transaction t = new Transaction();
-        t.start();
-        if(t1 != -1)
-            insertRow(hf, t, t1, 0);
-        if(t2 != -1)
-            insertRow(hf, t, t2, 0);
-        if(t1 != -1)
-            look(hf, t, t1, true);
-        if(t2 != -1)
-            look(hf, t, t2, true);
-        abort(t);
-    }
-
-    // simulate crash
-    // restart Database
-    // run log recovery
-    void crash()
-        throws DbException, TransactionAbortedException, IOException {
-        Database.reset();
-        hf1 = Utility.openHeapFile(2, file1);
-        hf2 = Utility.openHeapFile(2, file2);
-        Database.getLogFile().recover();
-    }
-
-    // create an initial database with two empty tables
-    // does *not* initiate log file recovery
-    void setup()
-            throws IOException, DbException, TransactionAbortedException {
-        Database.reset();
-
-        // empty heap files w/ 2 columns.
-        // adds to the catalog.
-        file1 = new File("simple1.db");
-        file1.delete();
-        file2 = new File("simple2.db");
-        file2.delete();
-        hf1 = Utility.createEmptyHeapFile(file1.getAbsolutePath(), 2);
-        hf2 = Utility.createEmptyHeapFile(file2.getAbsolutePath(), 2);
-    }
-
-    @Test public void PatchTest()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-
-        // *** Test:
-        // check that BufferPool.flushPage() calls LogFile.logWrite().
-        doInsert(hf1, 1, 2);
-
-        if(Database.getLogFile().getTotalRecords() != 4)
-            throw new RuntimeException("LogTest: wrong # of log records; patch failed?");
-
-        // *** Test:
-        // check that BufferPool.transactionComplete(commit=true)
-        // called Page.setBeforeImage().
-        Transaction t1 = new Transaction();
-        t1.start();
-        Page p = Database.getBufferPool().getPage(t1.getId(),
-                                                  new HeapPageId(hf1.getId(), 0),
-                                                  Permissions.READ_ONLY);
-        Page p1 = p.getBeforeImage();
-        Boolean same = Arrays.equals(p.getPageData(),
-                                     p1.getPageData());
-        if(same == false)
-            throw new RuntimeException("LogTest:setBeforeImage() not called? patch failed?");
-    }
-
-    @Test public void TestFlushAll()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-
-        // *** Test:
-        // check that flushAllPages writes the HeapFile
-        doInsert(hf1, 1, 2);
-
-        Transaction t1 = new Transaction();
-        t1.start();
-        HeapPage xp1 = (HeapPage) hf1.readPage(new HeapPageId(hf1.getId(), 0));
-        insertRow(hf1, t1, 3, 0);
-        Database.getBufferPool().flushAllPages();
-        HeapPage xp2 = (HeapPage) hf1.readPage(new HeapPageId(hf1.getId(), 0));
-
-        if(xp1.getNumEmptySlots() == xp2.getNumEmptySlots())
-            throw new RuntimeException("LogTest: flushAllPages() had no effect");
-    }
-
-    @Test public void TestCommitCrash()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-
-        // *** Test:
-        // insert, crash, recover: data should still be there
-
-        doInsert(hf1, 1, 2);
-
-        crash();
-
-        Transaction t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 2, true);
-        look(hf1, t, 3, false);
-        t.commit();
-    }
-
-    @Test public void TestAbort()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-        doInsert(hf1, 1, 2);
-
-        // *** Test:
-        // insert, abort: data should not be there
-        // flush pages directly to heap file to defeat NO-STEAL policy
-
-        dontInsert(hf1, 4, -1);
-
-        Transaction t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 2, true);
-        look(hf1, t, 3, false);
-        look(hf1, t, 4, false);
-        t.commit();
-    }
-
-    @Test public void TestAbortCommitInterleaved()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-        doInsert(hf1, 1, 2);
-
-        // *** Test:
-        // T1 start, T2 start and commit, T1 abort
-
-        Transaction t1 = new Transaction();
-        t1.start();
-        insertRow(hf1, t1, 3, 0);
-
-        Transaction t2 = new Transaction();
-        t2.start();
-        insertRow(hf2, t2, 21, 0);
-        Database.getLogFile().logCheckpoint();
-        insertRow(hf2, t2, 22, 0);
-        t2.commit();
-
-        insertRow(hf1, t1, 4, 0);
-        abort(t1);
-
-        Transaction t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 2, true);
-        look(hf1, t, 3, false);
-        look(hf1, t, 4, false);
-        look(hf2, t, 21, true);
-        look(hf2, t, 22, true);
-        t.commit();
-    }
-
-    @Test public void TestAbortCrash()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-        doInsert(hf1, 1, 2);
-
-        dontInsert(hf1, 4, -1);
-
-        Transaction t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 2, true);
-        look(hf1, t, 3, false);
-        look(hf1, t, 4, false);
-        t.commit();
-
-        // *** Test:
-        // crash and recover: data should still not be there
-
-        crash();
-
-        t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 2, true);
-        look(hf1, t, 3, false);
-        look(hf1, t, 4, false);
-        t.commit();
-    }
-
-    @Test public void TestCommitAbortCommitCrash()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-        doInsert(hf1, 1, 2);
-
-        // *** Test:
-        // T1 inserts and commits
-        // T2 inserts but aborts
-        // T3 inserts and commit
-        // only T1 and T3 data should be there
-
-        doInsert(hf1, 5, -1);
-        dontInsert(hf1, 6, -1);
-        doInsert(hf1, 7, -1);
-
-        Transaction t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 5, true);
-        look(hf1, t, 6, false);
-        look(hf1, t, 7, true);
-        t.commit();
-
-        // *** Test:
-        // crash: should not change visible data
-
-        crash();
-
-        t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 2, true);
-        look(hf1, t, 3, false);
-        look(hf1, t, 4, false);
-        look(hf1, t, 5, true);
-        look(hf1, t, 6, false);
-        look(hf1, t, 7, true);
-        t.commit();
-    }
-
-    @Test public void TestOpenCrash()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-        doInsert(hf1, 1, 2);
-
-        // *** Test:
-        // insert but no commit
-        // crash
-        // data should not be there
-
-        Transaction t = new Transaction();
-        t.start();
-        insertRow(hf1, t, 8, 0);
-        Database.getBufferPool().flushAllPages(); // XXX something to UNDO
-        insertRow(hf1, t, 9, 0);
-
-        crash();
-
-        t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 8, false);
-        look(hf1, t, 9, false);
-        t.commit();
-    }
-
-    @Test public void TestOpenCommitOpenCrash()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-        doInsert(hf1, 1, 2);
-
-        // *** Test:
-        // T1 inserts but does not commit
-        // T2 inserts and commits
-        // T3 inserts but does not commit
-        // crash
-        // only T2 data should be there
-
-        Transaction t1 = new Transaction();
-        t1.start();
-        insertRow(hf1, t1, 10, 0);
-        Database.getBufferPool().flushAllPages(); // XXX defeat NO-STEAL-based abort
-        insertRow(hf1, t1, 11, 0);
-
-        // T2 commits
-        doInsert(hf2, 22, 23);
-
-        Transaction t3 = new Transaction();
-        t3.start();
-        insertRow(hf2, t3, 24, 0);
-        Database.getBufferPool().flushAllPages(); // XXX defeat NO-STEAL-based abort
-        insertRow(hf2, t3, 25, 0);
-
-        crash();
-
-        Transaction t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 10, false);
-        look(hf1, t, 11, false);
-        look(hf2, t, 22, true);
-        look(hf2, t, 23, true);
-        look(hf2, t, 24, false);
-        look(hf2, t, 25, false);
-        t.commit();
-    }
-
-    @Test public void TestOpenCommitCheckpointOpenCrash()
-            throws IOException, DbException, TransactionAbortedException {
-        setup();
-        doInsert(hf1, 1, 2);
-
-        // *** Test:
-        // T1 inserts but does not commit
-        // T2 inserts and commits
-        // checkpoint
-        // T3 inserts but does not commit
-        // crash
-        // only T2 data should be there
-
-        Transaction t1 = new Transaction();
-        t1.start();
-        insertRow(hf1, t1, 12, 0);
-        Database.getBufferPool().flushAllPages(); // XXX defeat NO-STEAL-based abort
-        insertRow(hf1, t1, 13, 0);
-
-        // T2 commits
-        doInsert(hf2, 26, 27);
-
-        Database.getLogFile().logCheckpoint();
-
-        Transaction t3 = new Transaction();
-        t3.start();
-        insertRow(hf2, t3, 28, 0);
-        Database.getBufferPool().flushAllPages(); // XXX defeat NO-STEAL-based abort
-        insertRow(hf2, t3, 29, 0);
-
-        crash();
-
-        Transaction t = new Transaction();
-        t.start();
-        look(hf1, t, 1, true);
-        look(hf1, t, 12, false);
-        look(hf1, t, 13, false);
-        look(hf2, t, 22, false);
-        look(hf2, t, 23, false);
-        look(hf2, t, 24, false);
-        look(hf2, t, 25, false);
-        look(hf2, t, 26, true);
-        look(hf2, t, 27, true);
-        look(hf2, t, 28, false);
-        look(hf2, t, 29, false);
-        t.commit();
-    }
-
-    /** Make test compatible with older version of ant. */
-    public static junit.framework.Test suite() {
-        return new junit.framework.JUnit4TestAdapter(LogTest.class);
-    }
-}
